// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators/aliasOf ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/PixelBlock ../support/rasterEnums ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterFormats/RasterCodec ../support/rasterFunctions/vectorFieldUtils ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../core/unitUtils ../../kernel ../../rest/query/support/AttachmentInfo ../../rest/support/AttachmentQuery ../../rest/query/executeForCount ../../geometry/Extent ../../geometry/Geometry ../../geometry/Multipoint ../../geometry/Point ../../geometry/Polygon ../../geometry/Polyline ../../geometry/support/normalizeUtils ../support/arcgisLayerUrl ../../core/pbf ../../geometry/support/spatialReferenceUtils ../../rest/support/Query ../../rest/query/executeForIds ../../rest/query/executeQueryJSON ../../core/has ../graphics/featureConversionUtils ../../rest/support/FeatureSet ../../rest/support/RelationshipQuery ../../rest/support/TopFeaturesQuery ../../rest/support/ImageAngleParameters ../../rest/support/ImageHistogramParameters ../../rest/support/ImageIdentifyParameters ../../rest/support/ImagePixelLocationParameters ../../rest/support/ImageSampleParameters ../../views/2d/engine/flow/dataUtils ../../geometry/SpatialReference".split(" "),
function(aa,w,k,Ma,na,U,y,B,oa,ba,pa,u,qa,ra,N,D,p,C,sa,G,ca,da,ta,H,ua,va,I,wa,K,P,V,xa,W,ya,Q,za,E,Na,Oa,Pa,Qa,Aa,O,Ra,Sa,ea,Ba,Ta,Ua,Va,Wa,Xa,X,Ca,Da,Ya,Za,fa,$a,ab,Ea,ha,ia,Fa,Ga,Ha,R){function Ia(g){if(!g)return null;g=JSON.stringify(g).match(/"rasterFunction":"(.*?")/gi);return(g=null==g?void 0:g.map(F=>F.replace('"rasterFunction":"',"").replace('"',"")))?g.join("/"):null}const ja=pa.getLogger("esri.layers.mixins.ArcGISImageService"),Y=oa.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",
S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ja=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),Ka=p.ensureRange(D.ensureNumber,{min:0,max:255});aa.ArcGISImageService=g=>{g=function(F){function S(){var a=F.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._symbolizer=null;a._defaultServiceMosaicRule=null;a._serviceSourceType=null;a._serviceSupportsMosaicRule=
null;a.rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandCount=null;a.bandIds=void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;a.multidimensionalInfo=null;a.noData=null;a.noDataInterpretation=void 0;
a.objectIdField=null;a.geometryType="polygon";a.typeIdField=null;a.types=[];a.pixelSizeX=null;a.pixelSizeY=null;a.pixelFilter=null;a.raster=void 0;a.viewId=void 0;a.renderer=null;a.rasterAttributeTable=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=null;return a}w._inheritsLoose(S,F);var h=S.prototype;h.initialize=function(){this._set("exportImageServiceParameters",new ta.ExportImageServiceParameters({layer:this}))};
h.readDefaultServiceMosaicRule=function(a,b){return this._serviceSupportsMosaicRule?I.fromJSON(b):null};h.readServiceSourceType=function(a,b){return this._isMosaicDataset(b)?"mosaic-dataset":"raster-dataset"};h.readServiceSupportsMosaicRule=function(a,b){return this._isMosaicRuleSupported(b)};h.readBandIds=function(a,b){if(Array.isArray(a)&&0<a.length&&a.every(c=>"number"===typeof c))return a};h.readCapabilities=function(a,b){return this._readCapabilities(b)};h.writeCompressionQuality=function(a,
b,c){null!=a&&"lerc"!==this.format&&(b[c]=a)};h.writeCompressionTolerance=function(a,b,c){"lerc"===this.format&&null!=a&&(b[c]=a)};h.readFormat=function(a,b){return"esriImageServiceDataTypeVector-UV"===b.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===b.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};h.readMinScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};h.readMaxScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};h.readMosaicRule=function(a,b){return(a=
a||b.mosaicRule)?I.fromJSON(a):this._isMosaicRuleSupported(b)?I.fromJSON(b):null};h.writeMosaicRule=function(a,b,c){a=this.mosaicRule;const d=this.definitionExpression;a?d&&d!==a.where&&(a=a.clone(),a.where=d):d&&(a=new I({where:d}));this._isValidCustomizedMosaicRule(a)&&(b[c]=a.toJSON())};h.writeNoData=function(a,b,c){null!=a&&"number"===typeof a&&(b[c]=Ka(a))};h.readObjectIdField=function(a,b){a||(a=(a=b.fields.filter(c=>"esriFieldTypeOID"===c.type||"oid"===c.type))&&a[0]&&a[0].name);return a};
h.readRenderer=function(a,b,c){var d,e;a=null==b?void 0:null==(d=b.layerDefinition)?void 0:null==(e=d.drawingInfo)?void 0:e.renderer;c=U.read(a,c);if(null==c)return null;"vector-field"===c.type&&b.symbolTileSize&&!a.symbolTileSize&&(c.symbolTileSize=b.symbolTileSize);va.isSupportedRendererType(c)||ja.warn("ArcGISImageService","Imagery layer doesn't support given renderer type.");return c};h.writeRenderer=function(a,b,c){b.layerDefinition=b.layerDefinition||{};b.layerDefinition.drawingInfo=b.layerDefinition.drawingInfo||
{};b.layerDefinition.drawingInfo.renderer=a.toJSON();"vector-field"===a.type&&(b.symbolTileSize=a.symbolTileSize)};h.readRenderingRule=function(a,b){a=b.rasterFunctionInfos;return b.renderingRule||a&&a.length&&"None"!==a[0].name?P.fromJSON(b.renderingRule||{rasterFunctionInfos:b.rasterFunctionInfos}):null};h.writeRenderingRule=function(a,b,c){this._isRFTJson(a)||(b[c]=a.toJSON())};h.readSpatialReference=function(a,b){return(a=a||b.extent.spatialReference)?R.fromJSON(a):null};h.readPixelType=function(a){return Y.fromJSON(a)||
a};h.writePixelType=function(a,b,c){if(u.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)b[c]=Y.toJSON(a)};h.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("fields")||b.hasOwnProperty("timeInfo")?10:9.3);return a};h.applyFilter=function(a){let b=a;this.pixelFilter&&(b=this._clonePixelData(a),this.pixelFilter(b));return b};h.applyRenderer=function(){var a=w._asyncToGenerator(function*(b,c){var d=b;if(!this._isPicture()&&this.renderer&&this._symbolizer&&
!this.pixelFilter){d=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());const e=this._rasterJobHandler.instance,{bandIds:f}=this;e?(d&&(this._symbolizer.bind(),yield e.updateSymbolizer(this._symbolizer,c),this._cachedRendererJson=this.renderer.toJSON()),c=yield e.symbolize({bandIds:f,...b},c),d={extent:b.extent,pixelBlock:c}):d={extent:b.extent,pixelBlock:this._symbolizer.symbolize({bandIds:f,...b})}}return d});return function(b,c){return a.apply(this,arguments)}}();
h.destroy=function(){this._shutdownJobHandler()};h.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};h.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};h.computeAngles=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeAngles)throw new B("imagery-layer:compute-angles","this operation is not supported on the input image service");
b=D.ensureClass(Ea,b).clone();return E.computeAngles(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.computePixelSpaceLocations=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputePixelLocation)throw new B("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");b=D.ensureClass(Fa,b).clone();return E.computePixelSpaceLocations(this.url,
b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.computeHistograms=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeHistograms)throw new B("imagery-layer:compute-histograms","this operation is not supported on the input image service");b=D.ensureClass(ha,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=
f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return E.computeHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.computeStatisticsHistograms=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new B("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");
b=D.ensureClass(ha,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return E.computeStatisticsHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.getField=function(a){const {fieldsIndex:b}=this;return u.isSome(b)?b.get(a):void 0};h.getFieldDomain=function(a,b){return(a=this.getField(a))?a.domain:null};h.fetchImage=
function(a,b,c,d={}){if(null==a||null==b||null==c)return Promise.reject(new B("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const e=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:d.signal}):null;return qa.when(e).then(f=>{f&&(this.rasterInfo=f);f={imageServiceParameters:this.getExportImageServiceParameters(a,b,c,d.timeExtent),imageProps:{extent:a,width:b,height:c,format:this.format},
requestAsImageElement:d.requestAsImageElement&&!this.pixelFilter||!1,signal:d.signal};return this._requestArrayBuffer(f)})};h.fetchKeyProperties=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return y(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(b=>b.data)};h.fetchRasterAttributeTable=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return 10.1>this.version?Promise.reject(new B("#fetchRasterAttributeTable()",
"Failed to get rasterAttributeTable")):y(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(b=>fa.fromJSON(b.data))};h.getCatalogItemRasterInfo=function(){var a=w._asyncToGenerator(function*(b,c){var d=y(this.parsedUrl.path+"/"+b+"/info",{query:this._getQueryParams(),...c}).then(e=>e.data);b=y(this.parsedUrl.path+"/"+b+"/info/keyProperties",{query:this._getQueryParams(),...c}).then(e=>e.data).catch(()=>{});d=
yield Promise.all([d,b]);if(d[0])return b=O.fromJSON(d[0].extent),c=d[0].statistics?d[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null,new V({bandCount:d[0].bandCount,extent:b,spatialReference:b.sr,pixelSize:new ea({x:d[0].pixelSizeX,y:d[0].pixelSizeY,spatialReference:b.sr}),pixelType:d[0].pixelType.toLowerCase(),statistics:c,histograms:d[0].histograms,keyProperties:d[1]||{}})});return function(b,c){return a.apply(this,arguments)}}();h.getCatalogItemICSInfo=function(){var a=w._asyncToGenerator(function*(b,
c){var {data:d}=yield y(this.parsedUrl.path+"/"+b+"/info/ics",{query:this._getQueryParams(),...c});if(d=d&&d.ics){var e=null;try{e=(yield y(this.parsedUrl.path+"/"+b+"/info",{query:this._getQueryParams(),...c})).data.extent}catch{}if(!e||!e.spatialReference)return{ics:d,icsToPixelTransform:null,icsExtent:null,northDirection:null};var f=10.7<=this.version?y(this.parsedUrl.path+"/"+b+"/info/icstopixel",{query:this._getQueryParams(),...c}).then(z=>z.data).catch(()=>({})):{},n=e.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",
geometries:[e]}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+b};m=y(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...c}).then(z=>z.data).catch(()=>({}));var l=(e.xmin+e.xmax)/2,q=(e.ymax-e.ymin)/6;e=e.ymin+q;var t=[];for(let z=0;5>z;z++)t.push({x:l,y:e+q*z});b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:t}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+b};c=y(this.parsedUrl.path+"/project",{query:this._getQueryParams(b),...c}).then(z=>z.data).catch(()=>({}));
f=yield Promise.all([f,m,c]);c=f[0].ipxf;if(null==c){var v,r,x;b=null==(v=d.geodataXform)?void 0:v.xf_0;"topup"===(null==b?void 0:null==(r=b.name)?void 0:r.toLowerCase())&&6===(null==b?void 0:null==(x=b.coefficients)?void 0:x.length)&&(c={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:b.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}if(v=O.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]))v.spatialReference=new R({wkid:0,imageCoordinateSystem:d});r=
f[2].geometries?f[2].geometries.filter(z=>null!=z&&null!=z.x&&null!=z.y&&"NaN"!==z.x&&"NaN"!==z.y):[];x=r.length;if(3>x)return{ics:d,icsToPixelTransform:c,icsExtent:v,northDirection:null};n=m=b=f=0;for(l=0;l<x;l++)f+=r[l].x,b+=r[l].y,m+=r[l].x*r[l].x,n+=r[l].x*r[l].y;x=(x*n-f*b)/(x*m-f*f);f=0;b=r[4].x>r[0].x;r=r[4].y>r[0].y;Infinity===x?f=r?90:270:0===x?f=b?0:180:0<x?f=b?180*Math.atan(x)/Math.PI:180*Math.atan(x)/Math.PI+180:0>x&&(f=r?180+180*Math.atan(x)/Math.PI:360+180*Math.atan(x)/Math.PI);return{ics:d,
icsToPixelTransform:c,icsExtent:v,northDirection:f}}});return function(b,c){return a.apply(this,arguments)}}();h.generateRasterInfo=function(){var a=w._asyncToGenerator(function*(b,c){if((!b||"none"===b.functionName.toLowerCase()||this._isVectorFieldResampleFunction(b))&&u.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;const d=Ia(b);if(this._functionRasterInfos[d])return this._functionRasterInfos[d];b=this._generateRasterInfo(b,c);this._functionRasterInfos[d]=b;try{return yield b}catch{return this._functionRasterInfos[d]=
null}});return function(b,c){return a.apply(this,arguments)}}();h.getExportImageServiceParameters=function(a,b,c,d){a=a.clone().shiftCentralMeridian();const e=E.getImageSpatialReferenceQueryParameter(a.spatialReference,this.parsedUrl.path);u.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const f=this.exportImageServiceParameters.toJSON(),{bandIds:n,noData:m}=f;var {renderingRule:l}=f,q=this.renderingRule&&
"none"!==this.renderingRule.functionName.toLowerCase(),t=!this.renderer||"raster-stretch"===this.renderer.type;null!=n&&n.length&&q&&t?(q={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:n}},"Stretch"===l.rasterFunction?(q.rasterFunctionArguments.Raster=l.rasterFunctionArguments.Raster,l.rasterFunctionArguments.Raster=q):"Colormap"===l.rasterFunction?(t=l.rasterFunctionArguments.Raster,"Stretch"===(null==t?void 0:t.rasterFunction)?(q.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,
t.rasterFunctionArguments.Raster=q):(q.rasterFunctionArguments.Raster=t,l.rasterFunctionArguments.Raster=q)):(q.rasterFunctionArguments.Raster=l,l=q),f.bandIds=void 0):f.bandIds=null==n?void 0:n.join(",");m instanceof Array&&0<m.length&&(f.noData=m.join(","));q=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d):null;f.mosaicRule=q&&JSON.stringify(q);f.renderingRule=l&&JSON.stringify(l);l={};if(d){const {start:v,end:r}=d.toJSON();if(v&&
r&&v===r)l.time=""+v;else if(null!=v||null!=r)l.time=`${null==v?"null":v},${null==r?"null":r}`}return{bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:e,imageSR:e,size:b+","+c,...f,...l}};h.getSamples=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsGetSamples)throw new B("imagery-layer:get-samples","getSamples operation is not supported on the input image service");b=D.ensureClass(Ga,b).clone();
const {raster:d}=this;d&&null==b.raster&&(b.raster=d);return E.getSamples(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.identify=function(){var a=w._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsIdentify)throw new B("imagery-layer:query-rasters","query operation is not supported on the input image service");b=D.ensureClass(ia,b).clone();const {raster:d,mosaicRule:e,
renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);if(e&&null==b.mosaicRule){const n=this._combineMosaicRuleWithTimeExtent(e,b.timeExtent);b.mosaicRule=u.unwrap(n)}d&&null==b.raster&&(b.raster=d);return E.identify(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();h.createQuery=function(){const a=new X;a.outFields=["*"];a.returnGeometry=!0;a.where=this.definitionExpression||"1\x3d1";return a};h.queryRasters=function(){var a=w._asyncToGenerator(function*(b,
c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Da.executeQueryJSON(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();h.queryObjectIds=function(){var a=w._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,c));return Ca.executeForIds(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();h.queryRasterCount=function(){var a=w._asyncToGenerator(function*(b,c){({query:b,requestOptions:c}=yield this._prepareForQuery(b,
c));return Aa.executeForCount(this.url,b,c)});return function(b,c){return a.apply(this,arguments)}}();h.queryVisibleRasters=function(a,b){if(!a)return Promise.reject(new B("imagery-layer: query-visible-rasters","missing query parameter"));const {pixelSize:c,returnDomainValues:d,returnTopmostRaster:e,showNoDataRecords:f}=b||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let n=!1;var m=null;let l=null;const q=this.rasterFunctionNamesIndex;if(u.isSome(a.outFields)&&
(n=a.outFields.some(A=>-1===A.toLowerCase().indexOf("raster.servicepixelvalue")),10.4<=this.version)){var t=a.outFields.filter(A=>-1<A.toLowerCase().indexOf("raster.servicepixelvalue")&&24<A.length).map(A=>{A=A.slice(25);return[this._updateRenderingRulesFunctionName(A,q),A]});m=t.map(A=>new P({functionName:A[0]}));l=t.map(A=>A[1]);0===m.length?this.renderingRule?(m.push(this.renderingRule),l.push(this.renderingRule.functionName)):m=null:this.renderingRule&&!m.some(A=>A.functionName===this.renderingRule.functionName)&&
(m.push(this.renderingRule),l.push(this.renderingRule.functionName))}const v=u.isNone(a.outSpatialReference)||a.outSpatialReference.equals(this.spatialReference);t=a.timeExtent||this.timeExtent;const r=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,t);m=this._getQueryParams({geometry:a.geometry,timeExtent:t,mosaicRule:r,renderingRule:10.4>this.version?this.renderingRule:null,renderingRules:m,pixelSize:c,returnCatalogItems:n,returnGeometry:v,raster:this.raster,maxItemCount:e?
1:null});delete m.f;const x=new ia(m),z=this.generateRasterInfo(this.renderingRule);return new Promise(A=>{z.then(()=>{E.identify(this.url,x,{signal:null==b?void 0:b.signal,query:{...this.customParameters}}).then(L=>{var M;const ka=a.outFields,La=-1<L.value.toLowerCase().indexOf("nodata");if(n&&!v&&null!=L&&null!=(M=L.catalogItems)&&M.features.length&&(f||!La)){const T=this.objectIdField||"ObjectId",la=L.catalogItems.features;M=la.map(J=>J.attributes&&J.attributes[T]);M=new X({objectIds:M,returnGeometry:!0,
outSpatialReference:a.outSpatialReference,outFields:[T]});return this.queryRasters(M).then(J=>{J&&J.features&&0<J.features.length&&J.features.forEach(ma=>{la.forEach(Z=>{Z.attributes[T]===ma.attributes[T]&&(Z.geometry=new Ba(ma.geometry),Z.geometry.spatialReference=a.outSpatialReference)})});A(this._processVisibleRastersResponse(L,{returnDomainValues:d,templateRRFunctionNames:l,showNoDataRecords:f,templateFields:ka}))}).catch(()=>{throw new B("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry");
})}A(this._processVisibleRastersResponse(L,{returnDomainValues:d,templateRRFunctionNames:l,showNoDataRecords:f,templateFields:ka}))}).catch(()=>{throw new B("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");})})})};h.fetchVariableStatisticsHistograms=function(){var a=w._asyncToGenerator(function*(b,c){var d=y(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>{var f;return null==(f=e.data)?void 0:f.statistics});b=y(this.parsedUrl.path+
"/histograms",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>{var f;return null==(f=e.data)?void 0:f.histograms});d=yield Promise.all([d,b]);d[0]&&d[0].forEach(e=>{e.avg=e.mean;e.stddev=e.standardDeviation});return{statistics:d[0]||null,histograms:d[1]||null}});return function(b,c){return a.apply(this,arguments)}}();h.createStreamlinesMesh=function(){var a=w._asyncToGenerator(function*(b,c){const d=this._rasterJobHandler.instance;return d?d.createStreamlinesMesh(b,c):Ha.createStreamlinesMesh(b.rendererSettings,
b.flowData,u.isSome(c.signal)?c.signal:(new AbortController).signal)});return function(b,c){return a.apply(this,arguments)}}();h._fetchService=function(){var a=w._asyncToGenerator(function*(b){yield this._fetchServiceInfo(b);u.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);var c=this.sourceJSON;c=u.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:c,signal:b}).then(e=>{this._set("serviceRasterInfo",
e);return e});b=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:b}):null;const d=this._getRasterFunctionInfos();return Promise.all([c,b,d]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]);e[2]&&this._set("rasterFunctionInfos",e[2]);this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,ja.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));
this._configDefaultRenderer();this.watch("renderer",()=>this._configDefaultRenderer());this.watch("renderingRule",f=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(f).then(n=>{n&&(this.rasterInfo=n)})});(e=u.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo)&&this._updateMultidimensionalDefinition(e)})});return function(b){return a.apply(this,arguments)}}();h._combineMosaicRuleWithTimeExtent=function(a,b){var c=this.timeInfo;
if(u.isNone(a)||u.isNone(this.multidimensionalInfo)||u.isNone(b)||u.isNone(null==c?void 0:c.startField))return a;const {startField:d}=c;a=a.clone();if("mosaic-dataset"===this._serviceSourceType){var e;a.multidimensionalDefinition=null==(e=a.multidimensionalDefinition)?void 0:e.filter(l=>l.dimensionName!==d);return this._cleanupMultidimensionalDefinition(a)}a.multidimensionalDefinition=a.multidimensionalDefinition||[];c=a.multidimensionalDefinition.filter(l=>l.dimensionName===d);e=u.isSome(b.start)?
b.start.getTime():null;b=u.isSome(b.end)?b.end.getTime():null;const f=null==e||null==b||e===b,n=f?[e||b]:[[e,b]],m=10.8<=this.version;c.length?c.forEach(l=>{l.dimensionName===d&&(m?(l.dimensionName=null,l.isSlice=null,l.values=null):(l.isSlice=f,l.values=n))}):m||(b=a.multidimensionalDefinition.filter(l=>null!=l.variableName&&null==l.dimensionName),b.length?b.forEach(l=>{l.dimensionName=d;l.isSlice=f;l.values=n}):a.multidimensionalDefinition.push(new da({variableName:"",dimensionName:d,isSlice:f,
values:n})));return this._cleanupMultidimensionalDefinition(a)};h._cleanupMultidimensionalDefinition=function(a){if(u.isNone(a))return null;a.multidimensionalDefinition&&(a.multidimensionalDefinition=a.multidimensionalDefinition.filter(b=>!(!b.variableName&&!b.dimensionName)),0===a.multidimensionalDefinition.length&&(a.multidimensionalDefinition=null));return"mosaic-dataset"!==this._serviceSourceType&&null==a.multidimensionalDefinition?null:a};h._prepareForQuery=function(){var a=w._asyncToGenerator(function*(b,
c){var d;yield this._fetchCapabilities(null==(d=c)?void 0:d.signal);if(!this.capabilities.operations.supportsQuery)throw new B("imagery-layer:query-rasters","query operation is not supported on the input image service");b=u.isSome(b)?D.ensureClass(X,b):this.createQuery();c=this._getRequestOptions(c);this.raster&&(c.query={...c.query,raster:this.raster});return{query:b,requestOptions:c}});return function(b,c){return a.apply(this,arguments)}}();h._initJobHandler=function(){var a=w._asyncToGenerator(function*(){if(null!=
this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const b=new xa;this._rasterJobHandler.connectionPromise=b.initialize().then(()=>{this._rasterJobHandler.instance=b},()=>null);yield this._rasterJobHandler.connectionPromise});return function(){return a.apply(this,arguments)}}();h._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=
null;this._rasterJobHandler.refCount=0};h._isSupportedRenderer=function(a){const {rasterInfo:b,renderingRule:c}=this;return"unique-value"===a.type&&c&&"none"!==c.functionName.toLowerCase()&&1===b.bandCount&&["u8","s8"].includes(b.pixelType)||Q.getSupportedRendererTypes(this.rasterInfo).includes(this.renderer.type)};h._fetchCapabilities=function(){var a=w._asyncToGenerator(function*(b){if(this.capabilities)return this.capabilities;yield this._fetchServiceInfo(b);return this.capabilities});return function(b){return a.apply(this,
arguments)}}();h._fetchServiceInfo=function(){var a=w._asyncToGenerator(function*(b){var c;let d=this.sourceJSON;if(!d){const {data:e,ssl:f}=yield y(this.parsedUrl.path,{query:this._getQueryParams(),signal:b});this.sourceJSON=d=e;f&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<(null==(c=d.capabilities)?void 0:c.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")))throw new B("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(d,
{origin:"service",url:this.parsedUrl})});return function(b){return a.apply(this,arguments)}}();h._isMosaicDataset=function(a){var b;return a.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===a.serviceSourceType:0<(null==(b=a.fields)?void 0:b.length)};h._isMosaicRuleSupported=function(a){var b;if(!a)return!1;const c=this._isMosaicDataset(a);a=10.71<=a.currentVersion&&a.hasMultidimensions&&a.timeInfo&&!(a.objectIdField&&1<(null==(b=a.fields)?void 0:b.length));return c||a};h._isVectorFieldResampleFunction=
function(a){if(!u.isSome(a))return!1;const {functionName:b,functionArguments:c}=a;a="resample"===b.toLowerCase();const d=(null==c?void 0:c.ResampleType)||(null==c?void 0:c.resampleType);return a&&(7===d||10===d)};h._isPicture=function(){return!this.format||-1<this.format.indexOf("jpg")||-1<this.format.indexOf("png")};h._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&3<=this.rasterInfo.bandCount){const c=Q.getDefaultBandCombination(this.rasterInfo);!c||
3===this.rasterInfo.bandCount&&0===c[0]&&1===c[1]&&2===c[2]||(this.bandIds=c)}if(!this.renderer){var a,b;this.renderer=Q.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(a=this.mosaicRule)?void 0:null==(b=a.multidimensionalDefinition)?void 0:b[0].variableName})}this._symbolizer?(this._symbolizer.rendererJSON=Q.normalizeRendererJSON(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new za({rendererJSON:this.renderer.toJSON(),
rasterInfo:this.rasterInfo});this._symbolizer.bind().success||(this._symbolizer=null)}};h._clonePixelData=function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:u.isSome(a.pixelBlock)&&a.pixelBlock.clone()}};h._getQueryParams=function(a){const {raster:b,viewId:c}=this;return{raster:b,viewId:c,f:"json",...a,...this.customParameters}};h._getRequestOptions=function(a){return{...a,query:{...null==a?void 0:a.query,...this.customParameters}}};h._decodePixelBlock=function(a,b,c){return this._rasterJobHandler.instance?
this._rasterJobHandler.instance.decode({data:a,options:b}):W.decode(a,b,c)};h._fetchMultidimensionalInfo=function(){var a=w._asyncToGenerator(function*(b){var c;b=yield y(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:b}).then(d=>{var e;return null==(e=d.data)?void 0:e.multidimensionalInfo});null!=(c=b.variables)&&c.length&&b.variables.forEach(d=>{var e;null!=(e=d.statistics)&&e.length&&d.statistics.forEach(f=>{f.avg=f.mean;f.stddev=f.standardDeviation})});return b});
return function(b){return a.apply(this,arguments)}}();h._getRasterFunctionInfos=function(){var a=w._asyncToGenerator(function*(b){const c=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?c:c&&10.3<=this.version?1===c.length&&"none"===c[0].name.toLowerCase()?c:y(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:b}).then(d=>{var e;return null==(e=d.data)?void 0:e.rasterFunctionInfos}):null});return function(b){return a.apply(this,arguments)}}();h._fetchAuxiliaryRasterInfo=
function(a){const b=a&&a.serviceInfo;if(!b)return Promise.reject(new B("imagery-layer:fetch-metadata","valid serviceInfo is required"));var c=a.renderingRule?JSON.stringify(a.renderingRule.toJSON()):null,d=a.signal;a=b.hasRasterAttributeTable&&10.1<=this.version?y(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.1<=this.version?c:null}),signal:d}).then(n=>fa.fromJSON(n.data)).catch(()=>null):!1;const e=b.hasColormap&&10.1<=this.version?y(this.parsedUrl.path+
"/colormap",{query:this._getQueryParams({renderingRule:10.6<=this.version?c:null}),signal:d}).then(n=>{var m;return null==(m=n.data)?void 0:m.colormap}):!1,f=b.hasHistograms&&10.1<=this.version?y(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:10.1<=this.version?c:null}),signal:d}).then(n=>{var m;return null==(m=n.data)?void 0:m.histograms}):!1;c=10.3<=this.version?y(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:c}),signal:d}).then(n=>
n.data).catch(()=>{}):!1;d=b.hasMultidimensions&&10.3<=this.version?this._fetchMultidimensionalInfo():!1;return Promise.all([a,e,f,c,d]).then(n=>{let m=null;if(b.minValues&&b.minValues.length===b.bandCount){m=[];for(var l=0;l<b.minValues.length;l++)m.push({min:b.minValues[l],max:b.maxValues[l],avg:b.meanValues[l],stddev:b.stdvValues[l]})}l=Math.ceil((b.extent.xmax-b.extent.xmin)/b.pixelSizeX-.1);const q=Math.ceil((b.extent.ymax-b.extent.ymin)/b.pixelSizeY-.1),t=R.fromJSON(b.spatialReference||b.extent.spatialReference);
return new V({width:l,height:q,bandCount:b.bandCount,extent:O.fromJSON(b.extent),spatialReference:t,pixelSize:new ea({x:b.pixelSizeX,y:b.pixelSizeY,spatialReference:t}),pixelType:b.pixelType.toLowerCase(),statistics:m,attributeTable:n[0]||null,colormap:n[1]||null,histograms:n[2]||null,keyProperties:n[3]||{},multidimensionalInfo:n[4]||null})})};h._requestArrayBuffer=function(a){const {imageProps:b,requestAsImageElement:c,signal:d}=a;if(c&&!this.pixelFilter&&b.format&&-1<b.format.indexOf("png"))return y(this.parsedUrl.path+
"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:d}).then(f=>({imageElement:f.data,params:b}));const e=this._initJobHandler();a=y(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:d});return Promise.all([a,e]).then(f=>{f=f[0].data;const n=b.format||"jpgpng";var m=n;"bsq"!==m&&"bip"!==m&&(m=W.getFormat(f));if(!m)throw new B("imagery-layer:fetch-image",
"unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(f)));m="gif"===n||"bmp"===n||-1<n.indexOf("png")&&("png"===m||"jpg"===m);const l={signal:d};return m?W.decode(f,{useCanvas:!0,...b},l).then(q=>({pixelData:{pixelBlock:q,extent:b.extent},params:b})):this._decodePixelBlock(f,{width:b.width,height:b.height,planes:null,pixelType:null,noDataValue:null,format:n},l).then(q=>({pixelData:{pixelBlock:q,extent:b.extent},params:b}))})};h._generateRasterInfo=function(){var a=w._asyncToGenerator(function*(b,
c){const {data:d}=yield y(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:b}),...c});return yield this._fetchAuxiliaryRasterInfo({serviceInfo:d,renderingRule:b,...c})});return function(b,c){return a.apply(this,arguments)}}();h._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())};h._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var b=
a.variables[0].dimensions;a=[];for(var c in b)if(b.hasOwnProperty(c)){const d=b[c],e=d.extent;let f=!0,n=[e[0]];d.hasRanges&&!0===d.hasRanges?(f=!1,n=[d.values[0]]):"stdz"===d.name.toLowerCase()&&Math.abs(e[1])<=Math.abs(e[0])&&(n=[e[1]]);a.push(new da({variableName:"",dimensionName:b[c].name,isSlice:f,values:n}))}0<a.length&&(this.mosaicRule=this.mosaicRule||new I,c=this.mosaicRule.multidimensionalDefinition,!c||c&&0>=c.length)&&(this.mosaicRule.multidimensionalDefinition=a)}};h._formatAttributeValue=
function(a,b){if("string"===typeof a&&(b=(b=this._getFieldInfo(this.popupTemplate&&this.popupTemplate.fieldInfos,b))&&b.format)){let c,d;return-1<a.trim().indexOf(",")?(c=",",d=c+" ",this._formatDelimitedString(a,c,d,b)):-1<a.trim().indexOf(" ")?(c=d=" ",this._formatDelimitedString(a,c,d,b)):this._formatNumberFromString(a,b)}return a};h._getFieldInfo=function(a,b){if(a&&a.length&&b){var c=b.toLowerCase(),d=void 0;a.some(e=>!e.fieldName||e.fieldName.toLowerCase()!==c&&e.fieldName.toLowerCase()!==c.replace(/ /g,
"_")?!1:(d=e,!0));return d}};h._formatDelimitedString=function(a,b,c,d){return a&&b&&c&&d?a.trim().split(b).map(e=>this._formatNumberFromString(e,d)).join(c):a};h._formatNumberFromString=function(a,b){if(!a||!b)return a;const c=Number(a);return isNaN(c)?a:b.format(c)};h._processVisibleRastersResponse=function(a,b){b=b||{};const c=a.value,{templateRRFunctionNames:d,showNoDataRecords:e,returnDomainValues:f,templateFields:n}=b;b=a.processedValues;var m=a.catalogItems&&a.catalogItems.features;let l=a.properties&&
a.properties.Values&&a.properties.Values.map(z=>z.replace(/ /gi,", "))||[];var q=this.objectIdField||"ObjectId",t="string"===typeof c&&-1<c.toLowerCase().indexOf("nodata");a=[];!c||m||t||(m={},m[q]=0,m=new na(this.fullExtent,null,m),l=[c],m=[m]);if(!m)return[];this._updateResponseFieldNames(m,n);t&&!e&&(m=[]);for(q=0;q<m.length;q++){t=m[q];if(null!=c){var v=l[q];var r=this.renderingRule&&b&&0<b.length&&d&&0<d.length&&-1<d.indexOf(this.renderingRule.functionName)?b[d.indexOf(this.renderingRule.functionName)]:
c;if("nodata"===v.toLowerCase()&&!e)continue;t.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(v,"Raster.ItemPixelValue");t.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(r,"Raster.ServicePixelValue");this._updateFeatureWithMagDirValues(t,v);var x=this.fields&&0<this.fields.length;r=this.renderingRule&&u.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?x?v:c:r;this.renderingRule||(r=x?v:c);this._updateFeatureWithRasterAttributeTableValues(t,r)}t.sourceLayer=
this;f&&this._updateFeatureWithDomainValues(t);if(d&&b&&d.length===b.length)for(v=0;v<d.length;v++)x="Raster.ServicePixelValue."+d[v],t.attributes[x]=this._formatAttributeValue(b[v],x);a.push(m[q])}return a};h._updateFeatureWithRasterAttributeTableValues=function(a,b){var c=this.rasterInfo&&this.rasterInfo.attributeTable||u.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable;const d=c&&c.features;if(d){c=c.fields;var e=c.map(m=>m.name).filter(m=>"value"===m.toLowerCase()),f=e&&e[0];
if(f){var n=d.filter(m=>m.attributes[f]===(null!=b?parseInt(b,10):null));n&&n[0]&&c.forEach(m=>{const l=this.rasterAttributeTableFieldPrefix+m.name;a.attributes[l]=this._formatAttributeValue(n[0].attributes[m.name],l)})}}};h._updateFeatureWithMagDirValues=function(a,b){if("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType){var c=b.split(/,\s*/).map(d=>parseFloat(d));b=c.map(d=>[d]);c=c.map(d=>({minValue:d,maxValue:d,noDataValue:null}));
b=new wa({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:b,extent:new O(0,0,0,0,this.spatialReference)});b="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[b.pixels[0][0],b.pixels[1][0]]:ya.uvComponentToVector([b.pixels[0][0],b.pixels[1][0]]);a.attributes["Raster.Magnitude"]=b[0];a.attributes["Raster.Direction"]=b[1]}};h._updateFeatureWithDomainValues=function(a){const b=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===
c.domain.type);null!=b&&b.forEach(c=>{const d=a.attributes[c.name];if(null!=d){const e=c.domain.codedValues.filter(f=>f.code===d)[0];e&&(a.attributes[c.name]=e.name)}})};h._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var c=this.fieldsIndex;u.isSome(c)&&a.forEach(d=>{if(d&&d.attributes)for(const e of b)if(c.has(e)){const f=c.get(e).name;f!==e&&(d.attributes[e]=d.attributes[f],delete d.attributes[f])}})}};h._updateRenderingRulesFunctionName=function(a,b){if(a&&!(1>a.length)){if("Raw"===
a)return a.replace("Raw","None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};h._isRFTJson=function(a){return a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};h._readCapabilities=function(a){const b=a.capabilities?a.capabilities.toLowerCase().split(",").map(q=>q.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:e}=a,f=-1<b.indexOf("image"),n="esriImageServiceDataTypeElevation"===a.serviceDataType,m=!!(a.spatialReference||
a.extent&&a.extent.spatialReference),l=b.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:f,supportsExportImage:f,supportsIdentify:f,supportsMeasure:-1<b.indexOf("mensuration")&&m,supportsDownload:-1<b.indexOf("download"),supportsQuery:-1<b.indexOf("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&f,supportsProject:10.3<=c&&f,supportsComputeStatisticsHistograms:10.4<=c&&f,supportsQueryBoundary:10.6<=c&&f,supportsCalculateVolume:10.7<=c&&
n,supportsComputePixelLocation:10.7<=c&&-1<b.indexOf("catalog"),supportsComputeAngles:10.91<=c,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:e,maxRecordCountFactor:void 0,supportsStatistics:!(null==d||!d.supportsStatistics),supportsOrderBy:!(null==d||!d.supportsOrderBy),
supportsDistinct:!(null==d||!d.supportsDistinct),supportsPagination:!(null==d||!d.supportsPagination),supportsStandardizedQueriesOnly:!(null==d||!d.useStandardizedQueries),supportsPercentileStatistics:!(null==d||!d.supportsPercentileStatistics),supportsCentroid:!(null==d||!d.supportsReturningGeometryCentroid),supportsDistance:!(null==d||!d.supportsQueryWithDistance),supportsExtent:!(null==d||!d.supportsReturningQueryExtent),supportsGeometryProperties:!(null==d||!d.supportsReturningGeometryProperties),
supportsHavingClause:!(null==d||!d.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}};w._createClass(S,[{key:"rasterFunctionNamesIndex",get:function(){const a=
new Map;if(!this.rasterFunctionInfos||u.isSome(this.rasterFunctionInfos)&&1>this.rasterFunctionInfos.length)return a;u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(b=>{a.set(b.name.toLowerCase().replace(/ /gi,"_"),b.name)});return a}},{key:"fieldsIndex",get:function(){return this.fields?new ua(this.fields):null}},{key:"format",set:function(a){a&&Ja.has(a.toLowerCase())&&this._set("format",a.toLowerCase())}},{key:"mosaicRule",set:function(a){a&&a.mosaicMethod&&(a=I.fromJSON({...a.toJSON(),
mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}},{key:"parsedUrl",get:function(){return this.url?ra.urlToObject(this.url):null}},{key:"rasterFields",get:function(){const a=this.rasterAttributeTableFieldPrefix||"Raster.";var b=new H({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new H({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),
d=new H({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let e=this.fields?ba.clone(this.fields):[];e.push(c);this.capabilities.operations.supportsQuery&&this.fields&&0<this.fields.length&&e.push(b);10.4<=this.version&&u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(f=>"none"===f.name.toLowerCase())&&e.push(d);u.isSome(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(f=>"none"!==f.name.toLowerCase()).forEach(f=>
{e.push(new H({name:"Raster.ServicePixelValue."+f.name,alias:f.name,domain:null,editable:!1,length:50,type:"string"}))});null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(e.push(new H({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),e.push(new H({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(b=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||
null)&&0<b.length&&(b=b.filter(f=>"esriFieldTypeOID"!==f.type&&"value"!==f.name.toLowerCase()).map(f=>{const n=ba.clone(f);n.name=a+f.name;return n}),e=e.concat(b));return e}},{key:"renderingRule",set:function(a){a&&a.rasterFunction&&(a=P.fromJSON({...a.toJSON(),rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments}));this._set("renderingRule",a)}}]);return S}(g);k.__decorate([p.property()],g.prototype,"_functionRasterInfos",void 0);k.__decorate([p.property()],g.prototype,
"_rasterJobHandler",void 0);k.__decorate([p.property()],g.prototype,"_symbolizer",void 0);k.__decorate([p.property({dependsOn:["_serviceSupportsMosaicRule"]})],g.prototype,"_defaultServiceMosaicRule",void 0);k.__decorate([C.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],g.prototype,"readDefaultServiceMosaicRule",null);k.__decorate([p.property()],g.prototype,"_cachedRendererJson",void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"_serviceSourceType",void 0);k.__decorate([C.reader("_serviceSourceType",
["serviceSourceType","fields"])],g.prototype,"readServiceSourceType",null);k.__decorate([p.property({readOnly:!0})],g.prototype,"_serviceSupportsMosaicRule",void 0);k.__decorate([C.reader("_serviceSupportsMosaicRule",["currentVersion","fields"])],g.prototype,"readServiceSupportsMosaicRule",null);k.__decorate([p.property()],g.prototype,"rasterAttributeTableFieldPrefix",void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"rasterFunctionNamesIndex",null);k.__decorate([p.property()],g.prototype,
"adjustAspectRatio",void 0);k.__decorate([p.property({readOnly:!0}),N.aliasOf("serviceRasterInfo.bandCount")],g.prototype,"bandCount",void 0);k.__decorate([p.property({type:[D.Integer],json:{write:!0}})],g.prototype,"bandIds",void 0);k.__decorate([C.reader("bandIds")],g.prototype,"readBandIds",null);k.__decorate([p.property({readOnly:!0,json:{read:!1}})],g.prototype,"capabilities",void 0);k.__decorate([C.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],g.prototype,
"readCapabilities",null);k.__decorate([p.property({type:Number})],g.prototype,"compressionQuality",void 0);k.__decorate([G.writer("compressionQuality")],g.prototype,"writeCompressionQuality",null);k.__decorate([p.property({type:Number})],g.prototype,"compressionTolerance",void 0);k.__decorate([G.writer("compressionTolerance")],g.prototype,"writeCompressionTolerance",null);k.__decorate([p.property({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0);k.__decorate([p.property({type:String,
json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],g.prototype,"definitionExpression",void 0);k.__decorate([p.property({readOnly:!0,constructOnly:!0})],g.prototype,"exportImageServiceParameters",void 0);k.__decorate([p.property()],g.prototype,"rasterInfo",void 0);k.__decorate([p.property({readOnly:!0,type:[H]})],g.prototype,"fields",void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"fieldsIndex",null);k.__decorate([p.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),
json:{write:!0}})],g.prototype,"format",null);k.__decorate([C.reader("service","format",["serviceDataType"])],g.prototype,"readFormat",null);k.__decorate([p.property({type:O})],g.prototype,"fullExtent",void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"hasMultidimensions",void 0);k.__decorate([p.property({json:{read:{source:"maxImageHeight"}}})],g.prototype,"imageMaxHeight",void 0);k.__decorate([p.property({json:{read:{source:"maxImageWidth"}}})],g.prototype,"imageMaxWidth",void 0);k.__decorate([p.property({type:String,
json:{type:K.interpolationKebab.jsonValues,read:K.interpolationKebab.read,write:K.interpolationKebab.write}})],g.prototype,"interpolation",void 0);k.__decorate([p.property()],g.prototype,"minScale",void 0);k.__decorate([C.reader("service","minScale")],g.prototype,"readMinScale",null);k.__decorate([p.property()],g.prototype,"maxScale",void 0);k.__decorate([C.reader("service","maxScale")],g.prototype,"readMaxScale",null);k.__decorate([p.property({type:I})],g.prototype,"mosaicRule",null);k.__decorate([C.reader("mosaicRule",
["mosaicRule","defaultMosaicMethod"])],g.prototype,"readMosaicRule",null);k.__decorate([G.writer("mosaicRule")],g.prototype,"writeMosaicRule",null);k.__decorate([p.property({readOnly:!0}),N.aliasOf("serviceRasterInfo.multidimensionalInfo")],g.prototype,"multidimensionalInfo",void 0);k.__decorate([p.property({json:{type:D.Integer}})],g.prototype,"noData",void 0);k.__decorate([G.writer("noData")],g.prototype,"writeNoData",null);k.__decorate([p.property({type:String,json:{type:K.noDataInterpretationKebab.jsonValues,
read:K.noDataInterpretationKebab.read,write:K.noDataInterpretationKebab.write}})],g.prototype,"noDataInterpretation",void 0);k.__decorate([p.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],g.prototype,"objectIdField",void 0);k.__decorate([C.reader("objectIdField")],g.prototype,"readObjectIdField",null);k.__decorate([p.property({})],g.prototype,"geometryType",void 0);k.__decorate([p.property({})],g.prototype,"typeIdField",void 0);k.__decorate([p.property({})],g.prototype,"types",
void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"parsedUrl",null);k.__decorate([p.property({readOnly:!0}),N.aliasOf("serviceRasterInfo.pixelSize.x")],g.prototype,"pixelSizeX",void 0);k.__decorate([p.property({readOnly:!0}),N.aliasOf("serviceRasterInfo.pixelSize.y")],g.prototype,"pixelSizeY",void 0);k.__decorate([p.property({type:Function})],g.prototype,"pixelFilter",void 0);k.__decorate([p.property()],g.prototype,"raster",void 0);k.__decorate([p.property()],g.prototype,"viewId",void 0);
k.__decorate([p.property({types:U.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:U.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(F){return{enabled:F&&"vector-field"!==F.type&&"animated-flow"!==F.type}}}}}}})],g.prototype,"renderer",void 0);k.__decorate([C.reader("renderer")],g.prototype,"readRenderer",null);k.__decorate([G.writer("renderer")],g.prototype,"writeRenderer",null);k.__decorate([p.property(ca.opacity)],
g.prototype,"opacity",void 0);k.__decorate([p.property({readOnly:!0}),N.aliasOf("serviceRasterInfo.attributeTable")],g.prototype,"rasterAttributeTable",void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"rasterFields",null);k.__decorate([p.property({constructOnly:!0})],g.prototype,"rasterFunctionInfos",void 0);k.__decorate([p.property({type:P})],g.prototype,"renderingRule",null);k.__decorate([C.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],g.prototype,"readRenderingRule",
null);k.__decorate([G.writer("renderingRule")],g.prototype,"writeRenderingRule",null);k.__decorate([p.property()],g.prototype,"serviceDataType",void 0);k.__decorate([p.property({readOnly:!0,type:R})],g.prototype,"spatialReference",void 0);k.__decorate([C.reader("spatialReference",["spatialReference","extent"])],g.prototype,"readSpatialReference",null);k.__decorate([p.property({json:{type:Y.jsonValues}})],g.prototype,"pixelType",void 0);k.__decorate([C.reader("pixelType")],g.prototype,"readPixelType",
null);k.__decorate([G.writer("pixelType")],g.prototype,"writePixelType",null);k.__decorate([p.property({constructOnly:!0,type:V})],g.prototype,"serviceRasterInfo",void 0);k.__decorate([p.property()],g.prototype,"sourceJSON",void 0);k.__decorate([p.property(ca.url)],g.prototype,"url",void 0);k.__decorate([p.property({readOnly:!0})],g.prototype,"version",void 0);k.__decorate([C.reader("version",["currentVersion","fields","timeInfo"])],g.prototype,"readVersion",null);return g=k.__decorate([sa.subclass("esri.layers.mixins.ArcGISImageService")],
g)};Object.defineProperty(aa,"__esModule",{value:!0})});
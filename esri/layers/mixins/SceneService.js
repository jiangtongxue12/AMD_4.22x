// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("require exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../request ../../core/Error ../../core/has ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/accessorSupport/originUtils ../../geometry/Extent ../../geometry/HeightModelInfo ../../geometry/SpatialReference ../support/arcgisLayerUrl ../support/commonProperties ../support/I3SIndexInfo ../../portal/Portal ../../portal/PortalItem ../../webdoc/support/saveUtils".split(" "),
function(F,u,l,g,v,m,O,G,H,I,y,k,P,Q,q,J,K,z,w,L,x,r,A,M,B,N,C){const p=G.getLogger("esri.layers.mixins.SceneService"),D={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};u.SCENE_SERVICE_ITEM_TYPE="Scene Service";u.SceneService=f=>{f=function(E){function t(){var b=E.apply(this,arguments)||this;b.spatialReference=null;b.fullExtent=null;b.heightModelInfo=null;b.minScale=0;b.maxScale=0;b.version={major:Number.NaN,minor:Number.NaN,
versionString:""};b.copyright=null;b.sublayerTitleMode="item-title";b.title=null;b.layerId=null;b.indexInfo=null;b._debouncedSaveOperations=I.debounce(function(){var a=l._asyncToGenerator(function*(c,d,e){switch(c){case 0:return b._save(d);case 1:return b._saveAs(e,d)}});return function(c,d,e){return a.apply(this,arguments)}}());return b}l._inheritsLoose(t,E);var h=t.prototype;h.readSpatialReference=function(b,a){return this._readSpatialReference(a)};h._readSpatialReference=function(b){if(null!=b.spatialReference)return x.fromJSON(b.spatialReference);
b=b.store;b=(b=b.indexCRS||b.geographicCRS)&&parseInt(b.substring(b.lastIndexOf("/")+1,b.length),10);return null!=b?new x(b):null};h.readFullExtent=function(b,a,c){if(null!=b&&"object"===typeof b)return a=null==b.spatialReference?{...b,spatialReference:this._readSpatialReference(a)}:b,w.fromJSON(a,c);c=a.store;a=this._readSpatialReference(a);return null==a||null==c||null==c.extent||!Array.isArray(c.extent)||c.extent.some(d=>-1E38>d)?null:new w({xmin:c.extent[0],ymin:c.extent[1],xmax:c.extent[2],ymax:c.extent[3],
spatialReference:a})};h.parseVersionString=function(b){const a={major:Number.NaN,minor:Number.NaN,versionString:b};b=b.split(".");2<=b.length&&(a.major=parseInt(b[0],10),a.minor=parseInt(b[1],10));return a};h.readVersion=function(b,a){b=a.store;return this.parseVersionString(null!=b.version?b.version.toString():"")};h.readTitlePortalItem=function(b){return"item-title"!==this.sublayerTitleMode?void 0:b};h.readTitleService=function(b,a){b=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return r.titleFromUrlAndName(this.url,
a.name);a=a.name;if(!a&&this.url){const c=r.parse(this.url);H.isSome(c)&&(a=c.title)}"item-title-and-service-name"===this.sublayerTitleMode&&b&&(a=b+" - "+a);return r.cleanTitle(a)};h.writeUrl=function(b,a,c,d){r.writeUrlWithLayerId(this,b,"layers",a,d)};h._fetchIndexAndUpdateExtent=function(){var b=l._asyncToGenerator(function*(a,c){this.indexInfo=M.fetchIndexInfo(this.parsedUrl.path,this.rootNode,a,this.apiKey,p,c);null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(yield this.indexInfo)});
return function(a,c){return b.apply(this,arguments)}}();h._updateExtent=function(b){if("page"===(null==b?void 0:b.type)){var a,c,d=b.rootIndex%b.pageSize;b=null==(a=b.rootPage)?void 0:null==(c=a.nodes)?void 0:c[d];if(null==b||null==b.obb||null==b.obb.center||null==b.obb.halfSize)throw new m("sceneservice:invalid-node-page","Invalid node page.");-1E38>b.obb.center[0]||null==this.fullExtent||this.fullExtent.hasZ||(a=b.obb.halfSize,c=b.obb.center[2],a=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]),this.fullExtent.zmin=
c-a,this.fullExtent.zmax=c+a)}else"node"===(null==b?void 0:b.type)&&(c=null==(d=b.rootNode)?void 0:d.mbs,!Array.isArray(c)||4!==c.length||-1E38>c[0]||(a=c[2],c=c[3],this.fullExtent.zmin=a-c,this.fullExtent.zmax=a+c))};h._fetchService=function(){var b=l._asyncToGenerator(function*(a){if(null==this.url)throw new m("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const c=yield this._fetchFirstLayerId(a);
null!=c&&(this.layerId=c)}return this._fetchServiceLayer(a)});return function(a){return b.apply(this,arguments)}}();h._fetchFirstLayerId=function(){var b=l._asyncToGenerator(function*(a){a=yield v(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:a});if(a.data&&Array.isArray(a.data.layers)&&0<a.data.layers.length)return a.data.layers[0].id});return function(a){return b.apply(this,arguments)}}();h._fetchServiceLayer=function(){var b=l._asyncToGenerator(function*(a){a=yield v(this.parsedUrl.path,
{query:{f:"json",token:this.apiKey},responseType:"json",signal:a});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let c=!1;a.data.layerType&&"Voxel"===a.data.layerType&&(c=!0);if(c)return this.read(a.data,{origin:"service",url:this.parsedUrl}),this._fetchVoxelServiceLayer();a=a.data;this.read(a,{origin:"service",url:this.parsedUrl});this.validateLayer(a)});return function(a){return b.apply(this,arguments)}}();h._fetchVoxelServiceLayer=function(){var b=l._asyncToGenerator(function*(a){a=(yield v(this.parsedUrl.path+
"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:a})).data;this.read(a,{origin:"service",url:this.parsedUrl});this.validateLayer(a)});return function(a){return b.apply(this,arguments)}}();h._ensureLoadBeforeSave=function(){var b=l._asyncToGenerator(function*(){yield this.load();"beforeSave"in this&&"function"===typeof this.beforeSave&&(yield this.beforeSave())});return function(){return b.apply(this,arguments)}}();h.validateLayer=function(b){};h._updateTypeKeywords=function(b,
a,c){b.typeKeywords||(b.typeKeywords=[]);a=a.getTypeKeywords();for(const d of a)b.typeKeywords.push(d);b.typeKeywords&&(b.typeKeywords=b.typeKeywords.filter((d,e,n)=>n.indexOf(d)===e),1===c&&(b.typeKeywords=b.typeKeywords.filter(d=>"Hosted Service"!==d)))};h._saveAs=function(){var b=l._asyncToGenerator(function*(a,c){c={...D,...c};a=N.from(a);a||(p.error("_saveAs(): requires a portal item parameter"),yield Promise.reject(new m("sceneservice:portal-item-required","_saveAs() requires a portal item to save to")));
a.id&&(a=a.clone(),a.id=null);const d=a.portal||B.getDefault();yield this._ensureLoadBeforeSave();a.type="Scene Service";a.portal=d;const e={origin:"portal-item",url:null,messages:[],portal:d,portalItem:a,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write({},e)]};yield Promise.all(e.resources.pendingOperations);yield this._validateAgainstJSONSchema(n,e,c);a.url=this.url;a.title||(a.title=this.title);this._updateTypeKeywords(a,
c,1);yield d._signIn();yield d.user.addItem({item:a,folder:c&&c.folder,data:n});yield C.saveResources(this.resourceReferences,e,null);this.portalItem=a;z.updateOrigins(e);return e.portalItem=a});return function(a,c){return b.apply(this,arguments)}}();h._save=function(){var b=l._asyncToGenerator(function*(a){a={...D,...a};this.portalItem||(p.error("_save(): requires the .portalItem property to be set"),yield Promise.reject(new m("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService")));
"Scene Service"!==this.portalItem.type&&(p.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected Scene Service"),yield Promise.reject(new m("sceneservice:portal-item-wrong-type",'Portal item needs to have type "Scene Service"')));yield this._ensureLoadBeforeSave();const c={origin:"portal-item",url:this.portalItem.itemUrl&&y.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||B.getDefault(),portalItem:this.portalItem,writtenProperties:[],
blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},d={layers:[this.write({},c)]};yield Promise.all(c.resources.pendingOperations);yield this._validateAgainstJSONSchema(d,c,a);this.portalItem.url=this.url;this.portalItem.title||(this.portalItem.title=this.title);this._updateTypeKeywords(this.portalItem,a,0);yield this.portalItem.update({data:d});yield C.saveResources(this.resourceReferences,c,null);z.updateOrigins(c);return this.portalItem});return function(a){return b.apply(this,
arguments)}}();h._validateAgainstJSONSchema=function(){var b=l._asyncToGenerator(function*(a,c,d){c=c.messages.filter(e=>"error"===e.type).map(e=>new m(e.name,e.message,e.details));d&&d.validationOptions.ignoreUnsupported&&(c=c.filter(e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name));if(d.validationOptions.enabled&&(a=(yield new Promise((e,n)=>
F(["../support/schemaValidator"],e,n))).validate(a,d.portalItemLayerType),0<a.length)){const e=`Layer item did not validate:\n${a.join("\n")}`;p.error(`_validateAgainstJSONSchema(): ${e}`);if("throw"===d.validationOptions.failPolicy)throw d=a.map(n=>new m("sceneservice:schema-validation",n)).concat(c),new m("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:d});}if(0<c.length)throw new m("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",
{errors:c});});return function(a,c,d){return b.apply(this,arguments)}}();l._createClass(t,[{key:"url",set:function(b){b=r.sanitizeUrlWithLayerId({layer:this,url:b,nonStandardUrlAllowed:!1,logger:p});this._set("url",b.url);null!=b.layerId&&this._set("layerId",b.layerId)}},{key:"parsedUrl",get:function(){var b=this._get("url");if(!b)return null;b=y.urlToObject(b);null!=this.layerId&&(b.path=`${b.path}/layers/${this.layerId}`);return b}}]);return t}(f);g.__decorate([k.property(A.id)],f.prototype,"id",
void 0);g.__decorate([k.property({type:x})],f.prototype,"spatialReference",void 0);g.__decorate([q.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],f.prototype,"readSpatialReference",null);g.__decorate([k.property({type:w})],f.prototype,"fullExtent",void 0);g.__decorate([q.reader("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],f.prototype,"readFullExtent",null);g.__decorate([k.property({readOnly:!0,type:L})],
f.prototype,"heightModelInfo",void 0);g.__decorate([k.property({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],f.prototype,"minScale",void 0);g.__decorate([k.property({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],f.prototype,"maxScale",void 0);g.__decorate([k.property({readOnly:!0})],f.prototype,"version",void 0);g.__decorate([q.reader("version",["store.version"])],
f.prototype,"readVersion",null);g.__decorate([k.property({type:String,json:{read:{source:"copyrightText"}}})],f.prototype,"copyright",void 0);g.__decorate([k.property({type:String,json:{read:!1}})],f.prototype,"sublayerTitleMode",void 0);g.__decorate([k.property({type:String})],f.prototype,"title",void 0);g.__decorate([q.reader("portal-item","title")],f.prototype,"readTitlePortalItem",null);g.__decorate([q.reader("service","title",["name"])],f.prototype,"readTitleService",null);g.__decorate([k.property({type:Number,
json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],f.prototype,"layerId",void 0);g.__decorate([k.property(A.url)],f.prototype,"url",null);g.__decorate([K.writer("url")],f.prototype,"writeUrl",null);g.__decorate([k.property()],f.prototype,"parsedUrl",null);g.__decorate([k.property({readOnly:!0})],f.prototype,"store",void 0);g.__decorate([k.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],f.prototype,"rootNode",
void 0);return f=g.__decorate([J.subclass("esri.layers.mixins.SceneService")],f)};Object.defineProperty(u,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../core/Error ../core/maybe ../core/MultiOriginJSONSupport ../core/accessorSupport/decorators/aliasOf ../core/arrayUtils ../core/has ../core/accessorSupport/ensureType ../core/accessorSupport/decorators/property ../core/accessorSupport/decorators/subclass ./Layer ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/ImageryTileMixin ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/commonProperties ./support/Field ./support/rasterDatasets/WCSRaster ../support/popupUtils".split(" "),
function(n,d,w,q,c,x,M,N,O,e,y,z,A,B,C,D,E,F,G,H,I,p,J,K){const L=new Set("milliseconds seconds minutes hours days weeks months years decades centuries".split(" "));c=function(r){function l(...a){a=r.call(this,...a)||this;a.coverageId=null;a.coverageInfo=null;a.version=null;a.isReference=null;a.type="wcs";a.popupEnabled=!0;a.popupTemplate=null;a.fields=null;return a}n._inheritsLoose(l,r);var m=l.prototype;m.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};m.load=function(a){a=
q.isSome(a)?a.signal:null;this.addResolvingPromise(this._openRaster(a));return Promise.resolve(this)};m.createPopupTemplate=function(a){return K.createPopupTemplate({fields:this.rasterFields,title:this.title},a)};m._openRaster=function(){var a=n._asyncToGenerator(function*(b){const g=new J({url:this.url,version:this.version,coverageId:this.coverageId,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters}});yield g.open({signal:b});if(!g.rasterInfo)throw g.destroy(),
new w("wcs-layer:load","cannot load resources on "+this.url);null==this.title&&this.setAtOrigin("title",g.datasetName,"service");null==this.coverageId&&this.setAtOrigin("coverageId",g.coverageInfo.id,"service");({multidimensionalInfo:b}=g.rasterInfo);if(q.isSome(b)&&(b=b.variables[0].dimensions.find(({name:f})=>"StdTime"===f))){var h,t,k,u,v;let f=null!=(h=null==(t=b.extent)?void 0:t[0])?h:b.values[0];Array.isArray(f)&&(f=f[0]);h=null!=(k=null==(u=b.extent)?void 0:u[1])?k:b.values[b.values.length-
1];Array.isArray(h)&&(h=h[1]);k=L.has(null==(v=b.intervalUnit)?void 0:v.toLowerCase())?b.intervalUnit.toLowerCase():null;this.set("timeInfo",{startField:"StdTime",fullTimeExtent:{start:f,end:h},timeReference:null,interval:k?{value:b.interval,unit:k}:null})}this.raster=g;this._configDefaultSettings();this.watch("customParameters",f=>this.raster.ioConfig.customFetchParameters=f)});return function(b){return a.apply(this,arguments)}}();n._createClass(l,[{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},
{key:"rasterFields",get:function(){return[new p({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})]}}]);return l}(A.BlendLayer(G.ScaleRangeLayer(D.OperationalLayer(E.PortalLayer(B.CustomParametersMixin(C.ImageryTileMixin(H.TemporalLayer(F.RefreshableLayer(c.MultiOriginJSONMixin(z))))))))));d.__decorate([e.property({json:{write:!0}})],c.prototype,"coverageId",void 0);d.__decorate([e.property({readOnly:!0}),x.aliasOf("raster.coverageInfo")],c.prototype,
"coverageInfo",void 0);d.__decorate([e.property()],c.prototype,"version",void 0);d.__decorate([e.property()],c.prototype,"isReference",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"type",void 0);d.__decorate([e.property(I.popupEnabled)],c.prototype,"popupEnabled",void 0);d.__decorate([e.property()],c.prototype,"popupTemplate",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"defaultPopupTemplate",null);d.__decorate([e.property({readOnly:!0,type:[p]})],c.prototype,"fields",
void 0);d.__decorate([e.property({readOnly:!0,type:[p]})],c.prototype,"rasterFields",null);return c=d.__decorate([y.subclass("esri.layers.WCSLayer")],c)});
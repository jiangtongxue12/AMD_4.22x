// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../request ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/maybe ../../../core/Promise ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../arcgisLayerUrl ../commonProperties ../RasterStorageInfo ../TileInfo ./RawBlockCache ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../rasterFunctions/rasterProjectionHelper ../rasterFunctions/vectorFieldUtils ../../../geometry/Point ../../../geometry/Extent".split(" "),
function(z,B,A,X,Q,Y,Z,w,aa,ba,D,la,ma,na,ca,da,ea,fa,R,C,ha,N,v,ia,J,O){A=function(S){function K(){var b=S.apply(this,arguments)||this;b.rasterJobHandler=null;b.datasetName=null;b.datasetFormat=null;b.rasterInfo=null;b.ioConfig={sampling:"closest"};return b}z._inheritsLoose(K,S);var n=K.prototype;n.init=function(){var b=z._asyncToGenerator(function*(){const a=v.load();this.addResolvingPromise(a);yield this.when()});return function(){return b.apply(this,arguments)}}();n.normalizeCtorArgs=function(b){b&&
b.ioConfig&&(b={...b,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:R.create(),...b.ioConfig}});return b};n.open=function(){var b=z._asyncToGenerator(function*(a){throw new Q("BaseRaster:open-not-implemented","open() is not implemented");});return function(a){return b.apply(this,arguments)}}();n.fetchTile=function(){var b=z._asyncToGenerator(function*(a,c,f,e={}){const d=e.tileInfo||this.rasterInfo.storageInfo.tileInfo;a=this.getTileExtentFromTileInfo(a,c,f,d);return this.fetchPixels(a,
d.size[0],d.size[1],e)});return function(a,c,f){return b.apply(this,arguments)}}();n.identify=function(){var b=z._asyncToGenerator(function*(a,c={}){c=this._getRequestOptionsWithSliceId(c);const {spatialReference:f,extent:e}=this.rasterInfo;var {datumTransformation:d}=c;d=v.projectPoint(a,f,d);if(!e.intersects(d)||w.isSome(this.rasterInfo.transform)&&(d=this.rasterInfo.transform.inverseTransform(d),!this.rasterInfo.nativeExtent.intersects(d)))return{location:d,value:null};let g=0;if(c.srcResolution)g=
v.snapPyramid(c.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(g=yield this.computeBestPyramidLevelForLocation(a,c),null==g)return{location:d,value:null};a=this.identifyPixelLocation(d,g,null);if(null===a)return{location:d,value:null};const {row:h,col:m,rowOffset:k,colOffset:l}=a;a=C.getRasterId(this.url,c.sliceId);const p=`${g}/${h}/${m}`;let r=C.getBlock(a,null,p);w.isNone(r)&&(r=this.fetchRawTile(g,h,m,c),C.putBlock(a,null,p,r));c=yield r;if(w.isNone(c)||!c.pixels||
0===c.pixels.length)return{location:d,value:null};const u=k*this.rasterInfo.storageInfo.blockHeight+l;c=!c.mask||c.mask[u]?c.pixels.map(q=>q[u]):null;a=this.rasterInfo.dataType;return("vector-magdir"===a||"vector-uv"===a)&&1<(null==c?void 0:c.length)?(a="vector-magdir"===a?[c[0],c[1]]:ia.uvComponentToVector([c[0],c[1]]),{location:d,value:c,magdirValue:a,pyramidLevel:g}):{location:d,value:c,pyramidLevel:g}});return function(a){return b.apply(this,arguments)}}();n.fetchPixels=function(){var b=z._asyncToGenerator(function*(a,
c,f,e={}){a=v.snapExtent(a);var d=v.getWorldWidth(a.spatialReference),g=v.getWorldWrapCount(a),h=v.getWorldWidth(this.rasterInfo.spatialReference);h=w.isSome(h)&&this.rasterInfo.extent.width>=h/2;e=this._getRequestOptionsWithSliceId(e);if(w.isNone(d)||0===g||1===g&&h)return this._fetchPixels(a,c,f,e);if(3<=g)return{extent:a,pixelBlock:null};const m=[],{xmin:k,xmax:l}=a,p=Math.round(d/(l-k)*c),r=p-Math.round((d/2-k)/(l-k)*c);let u=0;h=[];for(let t=0;t<=g;t++){var q=new O({xmin:0===t?k:-d/2,xmax:t===
g?l-d*t:d/2,ymin:a.ymin,ymax:a.ymax,spatialReference:a.spatialReference});const x=0===t?p-r:t===g?c-u:p;u+=x;h.push(x);q=this._fetchPixels(q,x,f,e);m.push(q)}d=(yield Promise.all(m)).map(t=>null==t?void 0:t.pixelBlock);g=null;c={width:c,height:f};g=this.rasterJobHandler?yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:c,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},e):N.mosaic(d,c,{blockWidths:h});e=v.projectExtent(a,
this.rasterInfo.spatialReference,e.datumTransformation);return{extent:a,srcExtent:e,pixelBlock:g}});return function(a,c,f){return b.apply(this,arguments)}}();n.fetchRawPixels=function(){var b=z._asyncToGenerator(function*(a,c,f,e){const {origin:d,blockBoundary:g}=this.rasterInfo.storageInfo,{blockWidth:h,blockHeight:m}=this.getBlockWidthHeight(a);let {x:k,y:l}=c,{width:p,height:r,wrapCount:u}=f;var q=w.unwrap(this._getRasterTileAlignmentInfo(a,0));e.buffer&&(k-=e.buffer.cols,l-=e.buffer.rows,p+=2*
e.buffer.cols,r+=2*e.buffer.rows);c=Math.floor(k/h);f=Math.floor(l/m);const t=Math.floor((k+p-1)/h),x=Math.floor((l+r-1)/m);var y=g[a];if(!y)return null;const {minRow:L,minCol:E,maxCol:F,maxRow:G}=y;if(0===u&&(x<L||t<E||f>G||c>F))return null;y=[];let M=!1;const ja=null==this.ioConfig.allowPartialFill?e.allowPartialFill:this.ioConfig.allowPartialFill;for(let H=f;H<=x;H++)for(let I=c;I<=t;I++){const P=0===u||null==q||I<q.worldColumnCountFromOrigin?I:I%q.worldColumnCountFromOrigin-q.originColumnOffset;
if(H>=L&&P>=E&&G>=H&&F>=P){const T=this._fetchRawTile(a,H,P,e);ja?y.push(new Promise(U=>{T.then(ka=>U(ka)).catch(()=>{M=!0;U(null)})})):y.push(T)}else y.push(null)}if(0===y.length)return null;e=yield Promise.all(y);q={height:(x-f+1)*m,width:(t-c+1)*h};({spatialReference:y}=this.rasterInfo);a=this.getPyramidPixelSize(a);const {x:V,y:W}=a;return{extent:new O({xmin:d.x+c*h*V,xmax:d.x+(t+1)*h*V,ymin:d.y-(x+1)*m*W,ymax:d.y-f*m*W,spatialReference:y}),pixelBlocks:e,mosaicSize:q,isPartiallyFilled:M}});return function(a,
c,f,e){return b.apply(this,arguments)}}();n.fetchRawTile=function(b,a,c,f){throw new Q("BaseRaster:read-not-implemented","fetchRawTile() is not implemented");};n.computeExtent=function(b){return v.projectExtent(this.rasterInfo.extent,b)};n.decodePixelBlock=function(b,a){return!this.rasterJobHandler||a.useCanvas?ha.decode(b,a):this.rasterJobHandler.decode({data:b,options:a})};n.request=function(){var b=z._asyncToGenerator(function*(a,c,f){var e,d;const {customFetchParameters:g}=this.ioConfig,{range:h,
query:m,headers:k}=c;f=null!=(e=null!=(d=f)?d:c.retryCount)?e:this.ioConfig.retryCount;e=h?{Range:`bytes=${h.from}-${h.to}`}:null;try{return yield X(a,{...c,query:{...m,...g},headers:{...k,...e}})}catch(l){if(0<f)return f--,this.request(a,c,f);throw l;}});return function(a,c,f){return b.apply(this,arguments)}}();n.getSliceIndex=function(b){const {multidimensionalInfo:a}=this.rasterInfo;if(!w.isSome(a)||!w.isSome(b)||0===b.length)return null;let c=0;const f=b[0].variableName;for(let g=0;g<a.variables.length;g++){var e=
a.variables[g];const h=e.dimensions;if(e.name!==f){c+=h.map(k=>this._getDimensionValuesCount(k)).reduce((k,l)=>k+l);break}e=h.map(k=>this._getDimensionValuesCount(k));const m=h.length;for(let k=0;k<m;k++){var d=b.filter(l=>l.dimensionName===h[k].name)[0];if(null==d)return null;d=Array.isArray(d.values[0])?d.values[0][0]:d.values[0];d=this._getIndexFromDimensions(d,h[k]);if(-1===d)return null;e.shift();c=k===m-1?c+d:c+d*e.reduce((l,p)=>l+p)}}return c};n.getTileExtentFromTileInfo=function(b,a,c,f){b=
f.lodAt(b);return this.getTileExtent({x:b.resolution,y:b.resolution},a,c,f.origin,f.spatialReference,f.size)};n.updateTileInfo=function(){const {storageInfo:b,spatialReference:a,extent:c,pixelSize:f}=this.rasterInfo;if(!b.tileInfo){const d=[];var e=b.maximumPyramidLevel||0;let g=Math.max(f.x,f.y),h=1/.0254*96*g;for(let m=0;m<=e;m++)d.push({level:e-m,resolution:g,scale:h}),g*=2,h*=2;e=new J({x:c.xmin,y:c.ymax,spatialReference:a});b.tileInfo=new R({origin:e,size:[b.blockWidth,b.blockHeight],spatialReference:a,
lods:d});b.isVirtualTileInfo=!0}};n.createRemoteDatasetStorageInfo=function(b,a=512,c=512,f){const {width:e,height:d,nativeExtent:g,pixelSize:h,spatialReference:m}=b,k=new J({x:g.xmin,y:g.ymax,spatialReference:m});null==f&&(f=Math.max(0,Math.round(Math.log(Math.max(e,d))/Math.LN2-8)));const l=this.computeBlockBoundary(g,512,512,{x:g.xmin,y:g.ymax},[h],f);b.storageInfo=new fa({blockWidth:a,blockHeight:c,pyramidBlockWidth:a,pyramidBlockHeight:c,origin:k,firstPyramidLevel:1,maximumPyramidLevel:f,blockBoundary:l})};
n.computeBestPyramidLevelForLocation=function(){var b=z._asyncToGenerator(function*(a,c){return 0});return function(a){return b.apply(this,arguments)}}();n.computeBlockBoundary=function(b,a,c,f,e,d=0,g=2){if(1===e.length&&0<d){e=[...e];let {x:k,y:l}=e[0];for(let p=0;p<d;p++)k*=g,l*=g,e.push({x:k,y:l})}d=[];const {x:h,y:m}=f;for(f=0;f<e.length;f++){const {x:k,y:l}=e[f];d.push({minCol:Math.floor((b.xmin-h+.1*k)/a/k),maxCol:Math.floor((b.xmax-h-.1*k)/a/k),minRow:Math.floor((m-b.ymax+.1*l)/c/l),maxRow:Math.floor((m-
b.ymin-.1*l)/c/l)})}return d};n.getPyramidPixelSize=function(b){const {nativePixelSize:a}=this.rasterInfo,{pyramidResolutions:c,pyramidScalingFactor:f}=this.rasterInfo.storageInfo;if(0===b)return a;if(w.isSome(c)&&c.length)return c[b-1];b=f**b;return{x:a.x*b,y:a.y*b}};n.identifyPixelLocation=function(b,a,c){const {spatialReference:f,nativeExtent:e}=this.rasterInfo,{blockWidth:d,blockHeight:g,maximumPyramidLevel:h,origin:m}=this.rasterInfo.storageInfo;b=v.projectPoint(b,f,c);if(!e.intersects(b)||0>
a||a>h)return null;c=this.getPyramidPixelSize(a);const {x:k,y:l}=c;c=(m.y-b.y)/l/g;const p=(b.x-m.x)/k/d;return{pyramidLevel:a,row:Math.floor(c),col:Math.floor(p),rowOffset:Math.min(g-1,Math.floor((c-Math.floor(c))*g)),colOffset:Math.min(d-1,Math.floor((p-Math.floor(p))*d)),srcLocation:b}};n.getTileExtent=function(b,a,c,f,e,d){const [g,h]=d;c=f.x+c*g*b.x;a=f.y-a*h*b.y;return new O({xmin:c,xmax:c+g*b.x,ymin:a-h*b.y,ymax:a,spatialReference:e})};n.getBlockWidthHeight=function(b){return{blockWidth:0<
b?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:0<b?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}};n.isBlockOutside=function(b,a,c){b=this.rasterInfo.storageInfo.blockBoundary[b];return!b||b.maxRow<a||b.maxCol<c||b.minRow>a||b.minCol>c};n._fetchPixels=function(){var b=z._asyncToGenerator(function*(a,c,f,e={}){var d=v.getWorldWrapCount(a);if(2<=d)return{extent:a,pixelBlock:null};var g=this._getSourceDataInfo(a,
c,f,e);const {pyramidLevel:h,pyramidResolution:m,srcResolution:k,srcExtent:l,srcWidth:p,srcHeight:r}=g;if(0===p||0===r)return{extent:a,srcExtent:l,pixelBlock:null};var u=w.unwrap(this.rasterInfo.transform);"gcs-shift"===(null==u?void 0:u.type)&&(d=v.getWorldWrapCount(g.srcExtent,!0));var q=this.rasterInfo.storageInfo,t={x:Math.floor((l.xmin-q.origin.x)/m.x+.1),y:Math.floor((q.origin.y-l.ymax)/m.y+.1)};g=yield this.fetchRawPixels(h,t,{width:p,height:r,wrapCount:d},e);if(!g)return{extent:a,srcExtent:l,
pixelBlock:null};var x=0<h?q.pyramidBlockWidth:q.blockWidth;q=0<h?q.pyramidBlockHeight:q.blockHeight;t=x===p&&q===r&&0===t.x%x&&0===t.y%q;const y=new J({x:(a.xmax-a.xmin)/c,y:(a.ymax-a.ymin)/f,spatialReference:a.spatialReference}),L=!a.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:E}=e;if(!L&&t&&1===g.pixelBlocks.length&&x===c&&q===f&&k.x===y.x&&k.y===y.y)return{extent:a,srcExtent:l,pixelBlock:g.pixelBlocks[0]};d=this.rasterJobHandler?yield this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:a,
srcBufferExtent:g.extent,pixelSize:y.toJSON(),datumTransformation:E,rasterTransform:u,hasWrapAround:0<d,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy},e):v.getProjectionOffsetGrid({projectedExtent:a,srcBufferExtent:g.extent,pixelSize:y,datumTransformation:E,rasterTransform:u,hasWrapAround:0<d,isAdaptive:!1});u=!e.requestRawData;x={rows:d.spacing[0],cols:d.spacing[1]};q=w.unwrap(this._getRasterTileAlignmentInfo(h,g.extent.xmin));const {pixelBlocks:F,mosaicSize:G,isPartiallyFilled:M}=g;this.rasterJobHandler?
c=yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:G,destDimension:u?{width:c,height:f}:null,coefs:u?d.coefficients:null,sampleSpacing:u?x:null,interpolation:e.interpolation,alignmentInfo:q,blockWidths:null},e):(g=N.mosaic(F,G,{alignmentInfo:q}),c=u?N.approximateTransform(g,{width:c,height:f},d.coefficients,x,e.interpolation):g);return e.requestRawData?{srcExtent:l,pixelBlock:c,transformGrid:d,extent:a,isPartiallyFilled:M}:{srcExtent:l,extent:a,pixelBlock:c}});return function(a,
c,f){return b.apply(this,arguments)}}();n._fetchRawTile=function(b,a,c,f){var e=this.rasterInfo.storageInfo.blockBoundary[b];if(!e)return Promise.resolve(null);const {minRow:d,minCol:g,maxCol:h,maxRow:m}=e;if(a<d||c<g||a>m||c>h)return Promise.resolve(null);const k=C.getRasterId(this.url,f.sliceId),l=`${b}/${a}/${c}`;e=C.getBlock(k,f.registryId,l);if(w.isNone(e)){const p=new AbortController;e=this.fetchRawTile(b,a,c,{...f,signal:p.signal});C.putBlock(k,f.registryId,l,e,p);e.catch(()=>C.deleteBlock(k,
f.registryId,l))}if(f.signal)ba.onAbort(f,()=>{C.decreaseRefCount(k,f.registryId,l)});return e};n._getIndexFromDimensions=function(b,a){const {extent:c,interval:f,unit:e,values:d}=a;if(null!=d&&d.length)return Array.isArray(d[0])?d.findIndex(k=>k[0]<=b&&k[1]>=b):d.indexOf(b);if(b>c[1])return-1;const g=c[0];let h=-1;if("ISO8601"===e){var m;switch((null==(m=a.intervalUnit)?void 0:m.toLowerCase())||"seconds"){case "seconds":h=Math.round((b-g)/1E3/f);break;case "minutes":h=Math.round((b-g)/6E4/f);break;
case "hours":h=Math.round((b-g)/36E5/f);break;case "days":h=Math.round((b-g)/864E5/f);break;case "years":h=Math.round(((new Date(b)).getUTCFullYear()-(new Date(g)).getUTCFullYear())/f);break;case "decades":h=Math.round(((new Date(b)).getUTCFullYear()-(new Date(g)).getUTCFullYear())/10/f)}return h}return Math.round((b-g)/f)};n._getDimensionValuesCount=function(b){const {extent:a,interval:c,unit:f,values:e}=b;let d=(null==e?void 0:e.length)||0;if(d)return d;const g=a[0];if(0===d&&"ISO8601"===f){var h;
switch((null==(h=b.intervalUnit)?void 0:h.toLowerCase())||"seconds"){case "seconds":d=Math.round((a[1]-a[0])/1E3/c);break;case "minutes":d=Math.round((a[1]-a[0])/6E4/c);break;case "hours":d=Math.round((a[1]-a[0])/36E5/c);break;case "days":d=Math.round((a[1]-a[0])/864E5/c);break;case "years":d=Math.round(((new Date(a[1])).getUTCFullYear()-(new Date(g)).getUTCFullYear())/c);break;case "decades":d=Math.round(((new Date(a[1])).getUTCFullYear()-(new Date(g)).getUTCFullYear())/10/c)}return d}return Math.round((a[1]-
a[0])/c)};n._getRasterTileAlignmentInfo=function(b,a){null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=v.getRasterDatasetAlignmentInfo(this.rasterInfo));return w.isSome(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:a,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[b]}:null};n._getSourceDataInfo=function(b,a,c,f={}){const e={datumTransformation:f.datumTransformation,
pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};f.srcResolution&&(e.srcResolution=f.srcResolution,this._updateSourceDataInfo(b,e));var d=this.rasterInfo.storageInfo.maximumPyramidLevel||0;const {srcWidth:g,srcHeight:h,pyramidLevel:m}=e;var k=g/a;const l=h/c,p=m<d&&16<=k*l;if(p||m===d&&(8<k||8<l)||0===g||0===h){var r=new J({x:(b.xmax-b.xmin)/a,y:(b.ymax-b.ymin)/c,spatialReference:b.spatialReference});r=v.projectResolution(r,this.rasterInfo.spatialReference,
b,e.datumTransformation);const u=!r||f.srcResolution&&r.x+r.y<f.srcResolution.x+f.srcResolution.y;p&&f.srcResolution&&u&&(k=Math.round(Math.log(Math.max(k,l))/Math.LN2)-1,d-m+3>=k&&(d=2**k,r={x:f.srcResolution.x*d,y:f.srcResolution.y*d}));r&&(e.srcResolution=r,this._updateSourceDataInfo(b,e))}if(8<e.srcWidth/a||8<e.srcHeight/c)e.srcWidth=0,e.srcHeight=0;return e};n._updateSourceDataInfo=function(b,a){a.srcWidth=0;a.srcHeight=0;var c=this.rasterInfo.spatialReference;const {srcResolution:f,datumTransformation:e}=
a,{pyramidLevel:d,pyramidResolution:g,excessiveReading:h}=v.snapPyramid(f,this.rasterInfo,this.ioConfig.sampling);h||(b=a.srcExtent||v.projectExtent(b,c,e),null!=b&&((c=w.unwrap(this.rasterInfo.transform))&&(b=c.inverseTransform(b)),a.srcExtent=b,c=Math.ceil((b.xmax-b.xmin)/g.x-.1),b=Math.ceil((b.ymax-b.ymin)/g.y-.1),a.pyramidLevel=d,a.pyramidResolution=g,a.srcWidth=c,a.srcHeight=b))};n._getRequestOptionsWithSliceId=function(b){w.isSome(this.rasterInfo.multidimensionalInfo)&&null==b.sliceId&&(b={...b,
sliceId:this.getSliceIndex(b.multidimensionalDefinition)});return b};z._createClass(K,[{key:"url",set:function(b){this._set("url",da.sanitizeUrl(b,Z.getLogger(this.declaredClass)))}}]);return K}(aa.EsriPromiseMixin(Y.JSONSupport));B.__decorate([D.property()],A.prototype,"_rasterTileAlighmentInfo",void 0);B.__decorate([D.property(ea.url)],A.prototype,"url",null);B.__decorate([D.property({type:String,json:{write:!0}})],A.prototype,"datasetName",void 0);B.__decorate([D.property({type:String,json:{write:!0}})],
A.prototype,"datasetFormat",void 0);B.__decorate([D.property()],A.prototype,"rasterInfo",void 0);B.__decorate([D.property()],A.prototype,"ioConfig",void 0);B.__decorate([D.property()],A.prototype,"sourceJSON",void 0);return A=B.__decorate([ca.subclass("esri.layers.support.rasterDatasets.BaseRaster")],A)});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
require({cache:{"esri/chunks/LercCodec":function(){define(["exports","../core/mathUtils"],function(U,N){var O=N.clampFloat32(-Infinity);U.decode=function(g,m){m=m||{};var f=m.inputOffset||0;var l=m.encodedMaskData||null===m.encodedMaskData;var w=new Uint8Array(g,f,10);w=String.fromCharCode.apply(null,w);if("CntZImage"!=w.trim())throw"Unexpected file identifier string: "+w;f+=10;var a=new DataView(g,f,24);var L=a.getInt32(0,!0);var M=a.getInt32(4,!0);var z=a.getUint32(8,!0);var t=a.getUint32(12,!0);
var W=a.getFloat64(16,!0);f+=24;if(!l){a=new DataView(g,f,16);var c={};c.numBlocksY=a.getUint32(0,!0);c.numBlocksX=a.getUint32(4,!0);c.numBytes=a.getUint32(8,!0);c.maxValue=a.getFloat32(12,!0);f+=16;if(0<c.numBytes){l=new Uint8Array(Math.ceil(t*z/8));a=new DataView(g,f,c.numBytes);var p=a.getInt16(0,!0);var u=2;var D=0;do{if(0<p)for(;p--;)l[D++]=a.getUint8(u++);else{var G=a.getUint8(u++);for(p=-p;p--;)l[D++]=G}p=a.getInt16(u,!0);u+=2}while(u<c.numBytes);if(-32768!==p||D<l.length)throw"Unexpected end of mask RLE encoding";
c.bitset=l;f+=c.numBytes}else 0===(c.numBytes|c.numBlocksY|c.maxValue)&&(l=new Uint8Array(Math.ceil(t*z/8)),c.bitset=l)}a=new DataView(g,f,16);var C=l=G=D=u=p=void 0;p=a.getUint32(0,!0);u=a.getUint32(4,!0);D=a.getUint32(8,!0);G=a.getFloat32(12,!0);f+=16;C=u;l=p;C+=0<t%C?1:0;var A=l+(0<z%l?1:0);l=Array(C*A);for(var x=1E9,H=0,E=0;E<A;E++)for(var I=0;I<C;I++){var e=0;a=new DataView(g,f,Math.min(10,g.byteLength-f));var d={};l[H++]=d;var b=a.getUint8(0);e++;d.encoding=b&63;if(3<d.encoding)throw"Invalid block encoding ("+
d.encoding+")";if(2===d.encoding)f++,x=Math.min(x,0);else{if(0!==b&&2!==b){b>>=6;d.offsetType=b;if(2===b)d.offset=a.getInt8(1),e++;else if(1===b)d.offset=a.getInt16(1,!0),e+=2;else if(0===b)d.offset=a.getFloat32(1,!0),e+=4;else throw"Invalid block offset type";x=Math.min(d.offset,x);if(1===d.encoding)if(b=a.getUint8(e),e++,d.bitsPerPixel=b&63,b>>=6,d.numValidPixelsType=b,2===b)d.numValidPixels=a.getUint8(e),e++;else if(1===b)d.numValidPixels=a.getUint16(e,!0),e+=2;else if(0===b)d.numValidPixels=a.getUint32(e,
!0),e+=4;else throw"Invalid valid pixel count type";}f+=e;if(3!=d.encoding)if(0===d.encoding){a=(D-1)/4;if(a!==Math.floor(a))throw"uncompressed block has invalid length";e=new ArrayBuffer(4*a);b=new Uint8Array(e);b.set(new Uint8Array(g,f,4*a));e=new Float32Array(e);for(b=0;b<e.length;b++)x=Math.min(x,e[b]);d.rawData=e;f+=4*a}else 1===d.encoding&&(a=Math.ceil(d.numValidPixels*d.bitsPerPixel/8),e=new ArrayBuffer(4*Math.ceil(a/4)),b=new Uint8Array(e),b.set(new Uint8Array(g,f,a)),d.stuffedData=new Uint32Array(e),
f+=a)}}C=x;g=f;f=null!=m.noDataValue?N.clampFloat32(m.noDataValue):O;A=m.encodedMaskData;b=m.returnMask;x=0;H=u;E=p;I=Math.floor(t/H);d=Math.floor(z/E);e=2*W;A=A||(c?c.bitset:null);var r;a=new (m.pixelType||Float32Array)(t*z);b&&A&&(r=new Uint8Array(t*z));b=new Float32Array(I*d);for(var n,h,P=0;P<=E;P++){var Q=P!==E?d:z%E;if(0!==Q)for(var R=0;R<=H;R++){var F=R!==H?I:t%H;if(0!==F){var k=P*t*d+R*I,S=t-F,q=l[x],y;if(2>q.encoding){if(0===q.encoding)var B=q.rawData;else{n=y=B=void 0;h=q.stuffedData;var J=
q.bitsPerPixel,X=q.numValidPixels,Y=q.offset,Z=e,ca=b,aa=G,V=(1<<J)-1,ba=0,v=0,da=Math.ceil((aa-Y)/Z);h[h.length-1]<<=8*(4*h.length-Math.ceil(J*X/8));for(n=0;n<X;n++)0===v&&(B=h[ba++],v=32),v>=J?(y=B>>>v-J&V,v-=J):(v=J-v,y=(B&V)<<v&V,B=h[ba++],v=32-v,y+=B>>>v),ca[n]=y<da?Y+y*Z:aa;B=b}y=0}else var K=2===q.encoding?0:q.offset;if(A)for(h=0;h<Q;h++){if(k&7){var T=A[k>>3];T<<=k&7}for(n=0;n<F;n++)k&7||(T=A[k>>3]),T&128?(r&&(r[k]=1),a[k++]=2>q.encoding?B[y++]:K):(r&&(r[k]=0),a[k++]=f),T<<=1;k+=S}else if(2>
q.encoding)for(h=0;h<Q;h++){for(n=0;n<F;n++)a[k++]=B[y++];k+=S}else for(h=0;h<Q;h++)if(a.fill)a.fill(K,k,k+F),k+=F+S;else{for(n=0;n<F;n++)a[k++]=K;k+=S}if(1===q.encoding&&y!==q.numValidPixels)throw"Block and Mask do not match";x++}}}K=r;r={width:t,height:z,pixelData:a,minValue:C,maxValue:G,noDataValue:f};K&&(r.maskData=K);m.returnEncodedMask&&c&&(r.encodedMaskData=c.bitset?c.bitset:null);if(m.returnFileInfo&&(r.fileInfo={fileIdentifierString:w,fileVersion:L,imageType:M,height:z,width:t,maxZError:W,
eofOffset:g,mask:c?{numBlocksX:c.numBlocksX,numBlocksY:c.numBlocksY,numBytes:c.numBytes,maxValue:c.maxValue}:null,pixels:{numBlocksX:u,numBlocksY:p,numBytes:D,maxValue:G,minValue:C,noDataValue:f}},m.computeUsedBitDepths)){m=r.fileInfo;c=u*p;w={};for(L=0;L<c;L++)M=l[L],0===M.encoding?w.float32=!0:1===M.encoding?w[M.bitsPerPixel]=!0:w[0]=!0;c=Object.keys(w);m.bitDepths=c}return r}})},"*noref":1}});
define(["../../chunks/LercCodec"],function(U){let N=function(){function O(){}O.prototype._decode=function(g){g=U.decode(g.buffer,g.options);return Promise.resolve({result:g,transferList:[g.pixelData.buffer]})};return O}();return function(){return new N}});
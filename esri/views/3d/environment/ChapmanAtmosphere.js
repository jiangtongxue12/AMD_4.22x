// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../core/Handles ../../../core/mathUtils ../../../core/maybe ../../../core/watchUtils ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/vec2 ../../../chunks/vec2f64 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../chunks/vec4f64 ../../../geometry/support/Ellipsoid ./atmosphereUtils ./ChapmanAtmosphereTechnique ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/glUtil3D".split(" "),function(p,y,q,e,r,t,u,v,w,h,l,x,g,b,m,z,A){let C=function(){function n(a){this._view=
a;this.type="realistic";this.canRender=!0;this._cameraPosition=l.create();this._projectionInverse=u.create();this._viewInverse=u.create();this._heightParameters=x.create();this._betasRayleigh=l.create();this._betasCombined=l.create();this._scaleHeight=0;this._radii=w.create();this._nearFar=w.create();this._lowerElevationBoundRadius=this._altitudeFade=this._innerFadeDistance=this._cAtmosphere=this._cameraHeightSq=this._cameraHeight=0;this._lowerBoundEarthRadius=g.earth.radius;this._hazeStrength=1;
this._darkenHaze=!1;this._updateRadius(g.earth.radius)}var c=n.prototype;c.destroy=function(){this._atmosphereTechnique=e.releaseMaybe(this._atmosphereTechnique);this._atmosphereHazeTechnique=e.releaseMaybe(this._atmosphereHazeTechnique);this._vao=e.disposeMaybe(this._vao);this._handles=e.destroyMaybe(this._handles)};c.when=function(){return Promise.resolve()};c.initializeRenderContext=function(a){const d=a.renderContext.rctx;this._handles=new y;e.isSome(this._view.basemapTerrain.rootTiles)&&this._updateElevation({spatialReference:this._view.basemapTerrain.spatialReference,
tile:this._view.basemapTerrain.rootTiles[0],extent:this._view.basemapTerrain.rootTiles[0].extent,context:"ground"});this._handles.add(r.on(this._view,"basemapTerrain","elevation-change",k=>this._updateElevation(k),()=>this._updateElevation()));this._handles.add(r.on(this._view,"basemapTerrain","elevation-bounds-change",()=>this._updateVisibleElevationBounds()));const f=new m.ChapmanAtmosphereTechniqueConfiguration;f.haze=!1;this._atmosphereTechnique=a.shaderTechniqueRep.acquire(m.ChapmanAtmosphereTechnique,
f);f.haze=!0;this._atmosphereHazeTechnique=a.shaderTechniqueRep.acquire(m.ChapmanAtmosphereTechnique,f);this._vao=A.createQuadVAO(d,z.Pos2Tex);this._scaleHeight=b.rayLeighScaleHeight*b.atmosphereHeight;h.set(this._betasRayleigh,b.betaRayleigh[0],b.betaRayleigh[1],b.betaRayleigh[2]);h.set(this._betasCombined,b.betaRayleigh[0]+b.betaOzone[0],b.betaRayleigh[1]+b.betaOzone[1],b.betaRayleigh[2]+b.betaOzone[2])};c.render=function(a){return this._render(a,this._atmosphereTechnique,a.offscreenRenderingHelper.depthTexture)};
c.renderHaze=function(a,d){this._darkenHaze=d;return this._render(a,this._atmosphereHazeTechnique,a.offscreenRenderingHelper.linearDepthTexture)};c._render=function(a,d,f){this._update(a.camera);const k=a.rctx,B=a.offscreenRenderingHelper;k.useProgram(d.program);d.bindPipelineState(k);B.renderDepthDetached(()=>{d.program.bindTexture(f,"depthTex");this._renderCommon(d.program,a)});return!0};c._renderCommon=function(a,d){if(e.isNone(this._vao))return!1;const f=d.rctx;d.scenelightingData.setLightDirectionUniform(a);
a.setUniform4fv("heightParameters",this._heightParameters);a.setUniform3fv("cameraPosition",this._cameraPosition);a.setUniformMatrix4fv("projectionInverse",this._projectionInverse);a.setUniformMatrix4fv("viewInverse",this._viewInverse);a.setUniform2fv("nearFar",this._nearFar);a.setUniform2fv("radii",this._radii);a.setUniform1f("scaleHeight",this._scaleHeight);a.setUniform1f("betaMie",b.betaMie);a.setUniform3fv("betaRayleigh",this._betasRayleigh);a.setUniform3fv("betaCombined",this._betasCombined);
a.setUniform1f("innerFadeDistance",this._innerFadeDistance);a.setUniform1f("altitudeFade",this._altitudeFade);a.setUniform1f("hazeStrength",this._hazeStrength);f.bindVAO(this._vao);a.assertCompatibleVertexAttributeLocations(this._vao);f.drawArrays(5,0,4);return!0};c._adjustRadiusForTesselation=function(a){return a*Math.cos(Math.PI/16/16)};c._updateElevation=function(a){a=a?a.tile:e.unwrapOr(this._view.basemapTerrain.rootTiles,[null])[0];e.isNone(a)||0!==a.level||(a=this._adjustRadiusForTesselation(g.earth.radius+
a.elevationBounds[0]),a!==this._lowerElevationBoundRadius&&(this._lowerElevationBoundRadius=a,this._lowerBoundEarthRadius=-1,this._updateVisibleElevationBounds()))};c._updateVisibleElevationBounds=function(){const a=this._adjustRadiusForTesselation(g.earth.radius+this._view.basemapTerrain.elevationBounds.min);(0>this._lowerBoundEarthRadius||a<this._lowerBoundEarthRadius)&&this._updateRadius(a)};c._updateRadius=function(a){this._lowerBoundEarthRadius=a;v.set(this._radii,a,a+b.atmosphereHeight);this._innerFadeDistance=
2*Math.sqrt((2*a-b.innerAtmosphereDepth)*b.innerAtmosphereDepth)};c._update=function(a){e.isNone(a)||(this._cameraHeight=h.length(a.eye),this._cameraHeightSq=this._cameraHeight*this._cameraHeight,this._cAtmosphere=this._cameraHeightSq-this._radii[1]*this._radii[1],this._heightParameters=x.fromValues(this._cameraHeight,this._cameraHeightSq,this._cAtmosphere,Math.min(1,Math.max(0,(this._cameraHeight-this._radii[0])/b.atmosphereHeight))),h.copy(this._cameraPosition,a.eye),t.invert(this._projectionInverse,
a.projectionMatrix),t.invert(this._viewInverse,a.viewMatrix),v.set(this._nearFar,a.near,a.far),this._altitudeFade=b.computeInnerAltitudeFade(this._cameraHeight-this._lowerBoundEarthRadius),this._hazeStrength=this._darkenHaze?q.lerp(.6,1,q.smoothstep(9500,10500,this._cameraHeight-g.earth.radius)):1)};n.isSupported=function(a){return a.renderContext.rctx.capabilities.depthTexture};return n}();p.ChapmanAtmosphere=C;Object.defineProperty(p,"__esModule",{value:!0})});
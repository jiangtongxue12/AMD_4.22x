// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("require exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/Stars.glsl ../webgl-engine/core/shaderTechnique/ReloadableShaderModule ../webgl-engine/core/shaderTechnique/ShaderTechnique ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/Program ../../webgl/renderState".split(" "),function(m,l,n,h,p,q,r,e,t,u,k){e=function(f){function c(){return f.apply(this,arguments)||this}n._inheritsLoose(c,f);var g=c.prototype;
g.initializeProgram=function(a){const b=c.shader.get().build();return new u.Program(a.rctx,b,t.Default3D)};g.initializePipeline=function(){return k.makePipelineState({blending:k.separateBlendingParams(770,1,771,771),depthTest:{func:515},colorWrite:k.defaultColorWriteParams})};g.bindPass=function(a){const b=this.makeInfiniteProjectionMatrix(a.camera.projectionMatrix,a.camera.near,v);h.multiply(b,b,a.camera.viewMatrix);h.multiply(b,b,a.modelMatrix);this.program.setUniformMatrix4fv("transform",b);this.program.setUniform4fv("viewport",
a.camera.fullViewport);this.program.setUniform1f("pixelRatio",a.camera.pixelRatio)};g.makeInfiniteProjectionMatrix=function(a,b,d){h.copy(d,a);d[10]=2.4E-7-1;d[11]=-1;d[14]=(2.4E-7-2)*b;return d};return c}(e.ShaderTechnique);e.shader=new r.ReloadableShaderModule(q.StarsShader,()=>new Promise((f,c)=>m(["./Stars.glsl"],f,c)));const v=p.create();l.StarsTechnique=e;Object.defineProperty(l,"__esModule",{value:!0})});
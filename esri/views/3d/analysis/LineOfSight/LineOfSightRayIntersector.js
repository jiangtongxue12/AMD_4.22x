// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/maybe ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/ensureType ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../../../../layers/graphics/dehydratedFeatures ./LineOfSightIntersectionResult ../../layers/i3s/Intersector ../../support/geometryUtils/ray ../../terrain/Intersector ../../terrain/tileUtils ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/intersectorUtilsConversions".split(" "),
function(g,x,p,y,m,z,v,L,M,N,A,h,n,k,B,C,q,D,E,F,G,H,I){g.LineOfSightRayIntersector=function(w){function r(a){return w.call(this,a)||this}x._inheritsLoose(r,w);var l=r.prototype;l.initialize=function(){this.intersector=H.newIntersector(this.view.state.viewingMode);this.intersector.options.hud=!1;this.intersector.options.store=0};l.getScreenPointIntersection=function(a){a=z.screenPointObjectToArray(a,B.sv2d.get());a=E.fromScreen(this.view.state.camera,a,t);return this._getRayIntersection(a)};l._getRayIntersection=
function(a){if(m.isNone(a))return null;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(a,this.intersector);var b=this.intersector.results.min;if(!b.getIntersectionPoint(u))return null;const f=this.view.renderCoordsHelper.fromRenderCoords(u,this.view.spatialReference),d=n.fromArray(b.normal);var c=0<h.dot(d,a.direction)?-1:1;h.scale(d,d,c);if(D.isI3sIntersectorResult(b))return new q.LineOfSightIntersectionResult({type:0,id:`${b.target.layerUid}/${b.target.nodeIndex}/${b.target.componentIndex}`,
point:f,normal:d,ray:k.copy(a)});if(F.isTerrainIntersectorResult(b))return new q.LineOfSightIntersectionResult({type:2,id:b.target.lij.slice(),point:f,normal:d,ray:k.copy(a)});c=I.toGraphic(b,this.view);if(m.isSome(c)){b=c.layer;const e=c.sourceLayer;if(e)switch(e.type){case "scene":c=C.getObjectId(c,e.objectIdField);break;default:c=c.uid}else c=c.uid;return new q.LineOfSightIntersectionResult({type:0,id:`${b.uid}/${c}`,point:f,normal:d,ray:k.copy(a)})}return null};l._canUpdateFromIntersectionResult=
function(a,b){if(m.isNone(a)||!b||a.type!==b.type)return!1;switch(a.type){case 2:return a=a.id,b=b.id,a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]||G.tilesAreRelated(a,b);case 0:case 4:return a.id===b.id}};l.updateFromIntersectionResult=function(a){if(2===a.type&&m.isSome(a.point)){var b=u;const c=J,e=K;this.view.renderCoordsHelper.toRenderCoords(a.point,c);this.view.renderCoordsHelper.worldUpAtPosition(c,e);var f=this.view.basemapTerrain.elevationBounds,d=this.view.renderCoordsHelper.getAltitude(c);f=f?
Math.abs(f.max-f.min)/Math.abs(d):100;d=0<d?1:-1;h.normalize(e,e);h.scale(e,e,d*f);h.add(b,c,e);k.fromPoints(b,c,t);b=this._getRayIntersection(t)}else b=this._getRayIntersection(a.ray);return this._canUpdateFromIntersectionResult(b,a)?b.point:null};return r}(y);p.__decorate([v.property()],g.LineOfSightRayIntersector.prototype,"view",void 0);p.__decorate([v.property()],g.LineOfSightRayIntersector.prototype,"intersector",void 0);g.LineOfSightRayIntersector=p.__decorate([A.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],
g.LineOfSightRayIntersector);const u=n.create(),J=n.create(),K=n.create(),t=k.create();Object.defineProperty(g,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../intl ../../../../../core/Accessor ../../../../../core/has ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/quantityFormatUtils ../../../../../core/reactiveUtils ../../../../../core/unitUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../interactive/measurementTools/support/viewUtils ../../../interactive/visualElements/LabelVisualElement ../../../interactive/visualElements/LineVisualElement ../../../interactive/visualElements/MeasurementAreaVisualElement ../../../interactive/visualElements/support/Segment ../../../webgl-engine/materials/lineStippleUtils ../../../../../intl/locale ../../../../../intl/messages".split(" "),
function(l,B,m,V,I,W,J,K,f,C,y,r,n,X,Y,L,D,M,E,p,N,z,t,O,u,P,Q,R){l.AreaMeasurementVisualization=function(F){function A(a){a=F.call(this,a)||this;a._handles=new J;a._params={...S};a._path=null;a._intersectedPath=null;a._perimeter=null;a._intersectedPerimeter=null;a._projectionLines=null;a._measurementArea=null;a._areaLabel=null;a._pathLengthLabel=null;a._cursorSegmentLengthLabel=null;a._perimeterLengthLabel=null;a._pathSegments=[];a._perimeterSegments=[];a._cursorSegment=null;a._origin=p.create();
a._originTransform=M.create();a._cursorPositionRenderSpace=p.create();a.messages=null;a.viewData=T;a.areaLabel=null;a.perimeterLengthLabel=null;a.loadingMessages=!0;return a}B._inheritsLoose(A,F);var g=A.prototype;g.initialize=function(){var a=this;const b=this.view,c=this._params;this._path=new t.LineVisualElement({view:b,attached:!0,width:c.pathLineWidth,color:c.pathLineColor,polygonOffset:!0,renderOccluded:4});this._intersectedPath=new t.LineVisualElement({view:b,attached:!0,width:c.pathLineWidth,
color:c.intersectingLineColor,polygonOffset:!0,renderOccluded:4});this._perimeter=new t.LineVisualElement({view:b,attached:!0,width:c.perimeterLineWidth,color:c.perimeterLineColor,polygonOffset:!0,renderOccluded:4});this._intersectedPerimeter=new t.LineVisualElement({view:b,attached:!0,width:c.perimeterLineWidth,color:c.intersectingLineColor,polygonOffset:!0,renderOccluded:4});this._projectionLines=new t.LineVisualElement({view:b,attached:!0,width:c.projectionLineWidth,color:c.projectionLineColor,
stipplePattern:P.createStipplePatternSimple(c.projectionLineStippleSize),polygonOffset:!0,renderOccluded:4});this._measurementArea=new O.MeasurementAreaVisualElement({view:b,attached:!0,color1:c.areaColor1,color2:c.areaColor2});this._areaLabel=new z.LabelVisualElement({view:this.view,attached:!0,fontSize:16});this._pathLengthLabel=new z.LabelVisualElement({view:b,attached:!0,fontSize:12});this._cursorSegmentLengthLabel=new z.LabelVisualElement({view:b,attached:!0,fontSize:12});this._perimeterLengthLabel=
new z.LabelVisualElement({view:b,attached:!0,fontSize:12});const d=this.analysisView.analysisViewData;this._handles.add([y.react(()=>[d.mode,this.visible,this.analysisView.unit,d.measurementData,d.cursorPoint],()=>this._update(),y.syncAndInitial),y.react(()=>{var e;return null==(e=b.state)?void 0:e.camera},()=>this._updateLabels(),y.syncAndInitial),Q.onLocaleChange(B._asyncToGenerator(function*(){return a._updateMessageBundle()}))]);this._updateMessageBundle()};g.destroy=function(){this._measurementArea=
f.destroyMaybe(this._measurementArea);this._path=f.destroyMaybe(this._path);this._intersectedPath=f.destroyMaybe(this._intersectedPath);this._perimeter=f.destroyMaybe(this._perimeter);this._intersectedPerimeter=f.destroyMaybe(this._intersectedPerimeter);this._areaLabel=f.destroyMaybe(this._areaLabel);this._pathLengthLabel=f.destroyMaybe(this._pathLengthLabel);this._cursorSegmentLengthLabel=f.destroyMaybe(this._cursorSegmentLengthLabel);this._perimeterLengthLabel=f.destroyMaybe(this._perimeterLengthLabel);
this._handles=f.destroyMaybe(this._handles);this.set("view",null)};g._update=function(){if(!this.destroyed&&this.view.ready&&this.view.renderCoordsHelper){var a=this.analysisView.analysisViewData,b=a.measurementData;f.isNone(b)||(this._updateViewData(b,a.path,a.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}};g._updateViewData=function(a,b,c){const d=b.isValidPolygon,e="geodesic"===
a.actualMeasurementMode;var k=e?a.geodesicArea:a.area;let h=1;k&&(k=this._toPreferredAreaUnit(k,this.analysisView.unit),h=K.nextHighestPowerOfTen(Math.sqrt(k.value)/Math.sqrt(300)),h*=Math.sqrt(r.convertUnit(1,k.unit,"square-meters")),h/=a.unitNormalizer.normalizeDistance(1));this._set("viewData",{validMeasurement:d,path:b,pathVersion:b.version,cursorPoint:c,measurementData:a,mode:a.actualMeasurementMode,positionsGeographic:a.positionsGeographic,positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,
positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:e?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:e?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:e?a.geodesicAreaCentroidRenderCoords:a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:d?0:b.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:h})};g._updateOrigin=function(){N.midpoint(this.viewData.positionsRenderCoords,this._origin);D.identity(this._originTransform);
D.translate(this._originTransform,this._originTransform,this._origin);this._measurementArea.transform=this._originTransform;this._projectionLines.transform=this._originTransform};g._createSegments=function(a){const b=this.viewData,c=b.path,d=this.view.renderCoordsHelper.spatialReference,e=b.mode,k=[],h=[],q=[],v=b.validMeasurement?c.numVertices:c.numVertices-1;for(let w=0;w<v;++w){const G=b[a][w],H=b[a][(w+1)%c.numVertices];let x=null;switch(e){case "euclidean":x=new u.EuclideanSegment(G,H);break;
case "geodesic":x=new u.GeodesicSegment(G,H,d)}b.intersectingSegments.has(w)?q.push(x):h.push(x);k.push(x)}return{all:k,nonIntersecting:h,intersecting:q}};g._updatePathSegments=function(){const a=this.visible;var b=this.viewData;const c=this._createSegments("positionsRenderCoords");var d=b.path,e=!d.isValidPolygon;const k=b.cursorPoint,h=this.view.renderCoordsHelper,q=h.spatialReference,v=b.mode;this._cursorSegment=null;if(0<d.numVertices&&e&&f.isSome(k)&&h.toRenderCoords(k,this._cursorPositionRenderSpace)){b=
b.positionsRenderCoords[d.numVertices-1];d=this._cursorPositionRenderSpace;e=null;switch(v){case "euclidean":e=new u.EuclideanSegment(b,d);break;case "geodesic":e=new u.GeodesicSegment(b,d,q)}c.nonIntersecting.push(e);this._cursorSegment=e}this._path.setGeometryFromSegments(c.nonIntersecting,this._origin);this._path.visible=a;this._intersectedPath.setGeometryFromSegments(c.intersecting,this._origin);this._intersectedPath.visible=a;this._pathSegments=c.all};g._updatePerimeterSegments=function(){const a=
this.visible&&"euclidean"===this.viewData.mode,b=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(b.nonIntersecting,this._origin);this._perimeter.visible=a;this._intersectedPerimeter.setGeometryFromSegments(b.intersecting,this._origin);this._intersectedPerimeter.visible=a;this._perimeterSegments=b.all};g._updateArea=function(){const a=this.viewData;switch(a.mode){case "euclidean":this._updateAreaEuclidean(a);break;case "geodesic":this._updateAreaGeodesic()}};
g._updateAreaEuclidean=function(a){const b=this.visible;a.validMeasurement&&0===a.intersectingSegments.size&&a.triangleIndices?(this._measurementArea.geometry={uv:a.positionsProjected,position:a.positionsFittedRenderCoords,triangleIndices:a.triangleIndices},this._measurementArea.size=[a.checkerSize,a.checkerSize],this._measurementArea.visible=b):this._measurementArea.visible=!1};g._updateAreaGeodesic=function(){this._measurementArea.visible=!1};g._updateProjectionLines=function(){const a=this.viewData,
b=this.visible,c=a.path;var d=a.mode;if(0<c.numVertices&&a.validMeasurement&&"euclidean"===d){d=[];for(let e=0;e<c.numVertices;++e){const k=p.create();E.subtract(k,a.positionsRenderCoords[e],this._origin);const h=p.create();E.subtract(h,a.positionsFittedRenderCoords[e],this._origin);d.push([k,h])}this._projectionLines.geometry=d;this._projectionLines.visible=b}else this._projectionLines.geometry=null,this._projectionLines.visible=!1};g._updateLabels=function(){if(!this.destroyed){var a=this.viewData,
b=a.path;if(b){var c=a.measurementData,d=a.mode,e=!b.isValidPolygon,k=this.visible,h=this._formatAreaLabel(this.messages,"geodesic"===d?c.geodesicArea:c.area,this.analysisView.unit);f.isSome(h)?(this._areaLabel.geometry={type:"point",point:a.areaCentroid},this._areaLabel.text=h,this._areaLabel.visible=a.validMeasurement&&0===a.intersectingSegments.size&&k):this._areaLabel.visible=!1;this._set("areaLabel",f.unwrap(h));h=this._formatLengthLabel(this.messages,"geodesic"===d?c.geodesicPathLength:c.pathLength,
this.analysisView.unit);if(f.isSome(h)&&0<=a.pathLengthLabelSegmentIndex&&a.pathLengthLabelSegmentIndex<this._pathSegments.length){const q=this._pathSegments[a.pathLengthLabelSegmentIndex],v=f.isSome(this._cursorSegment)?this._cursorSegment:U;this._pathLengthLabel.distance=this._params.labelDistance;this._pathLengthLabel.geometry={type:"corner",left:q,right:v};this._pathLengthLabel.text=h;this._pathLengthLabel.visible=e&&0<b.numVertices&&k}else this._pathLengthLabel.visible=!1;b="geodesic"===d?a.measurementData.geodesicCursorSegmentLength:
a.measurementData.cursorSegmentLength;f.isSome(b)?(d=this._formatLengthLabel(this.messages,b,this.analysisView.unit),this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=f.isSome(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=f.unwrap(d),this._cursorSegmentLengthLabel.visible=e&&0!==b.value&&k):this._cursorSegmentLengthLabel.visible=
!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1);this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);c=(e="geodesic"===a.mode)?c.geodesicPathLength:c.perimeterLength;c=f.unwrap(null!=c?this._formatLengthLabel(this.messages,c,this.analysisView.unit):null);this._set("perimeterLengthLabel",f.unwrap(c));if(a.validMeasurement&&0===a.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance;
this._perimeterLengthLabel.anchor="top";this._perimeterLengthLabel.text=c;b=this._perimeterLengthLabel.visible=!0;for(c=0;c<a.path.numVertices;++c)if(b=(a.perimeterLengthLabelSegmentIndex+c)%a.path.numVertices,d=e?this._pathSegments[b]:this._perimeterSegments[b],b=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:d,sampleLocation:"center"},this._perimeterLengthLabel.overlaps(this._areaLabel))b=!1;else break;this._perimeterLengthLabel.visible=b&&k}else this._perimeterLengthLabel.visible=
!1}}};g._toPreferredAreaUnit=function(a,b){return a.toUnit(this._preferredAreaUnit(a,b))};g._preferredAreaUnit=function(a,b){switch(b){case "metric":return r.preferredMetricAreaUnit(a.value,a.unit);case "imperial":return r.preferredImperialAreaUnit(a.value,a.unit);default:return b}};g._preferredLengthUnit=function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return r.preferredMetricLengthUnit(a.value,a.unit);case "imperial":return r.preferredImperialLengthUnit(a.value,a.unit);
default:return b}};g._deriveLengthUnitFromAreaUnit=function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";
case "acres":return"imperial";case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");};g._formatAreaLabel=function(a,b,c){return a&&b&&C.formatDecimal(a,b,this._preferredAreaUnit(b,c))};g._formatLengthLabel=function(a,b,c){return a&&b&&C.formatDecimal(a,b,this._preferredLengthUnit(b,c))};g._updateMessageBundle=function(){this.loadingMessages=!0;R.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a;this.view&&this._update()}).finally(()=>{this.loadingMessages=
!1})};B._createClass(A,[{key:"visible",get:function(){return this.analysisView.visible}},{key:"testData",get:function(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}}]);return A}(I);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"view",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"messages",void 0);m.__decorate([n.property()],
l.AreaMeasurementVisualization.prototype,"analysis",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"viewData",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"analysisView",void 0);m.__decorate([n.property({readOnly:!0})],l.AreaMeasurementVisualization.prototype,"areaLabel",void 0);m.__decorate([n.property({readOnly:!0})],l.AreaMeasurementVisualization.prototype,"perimeterLengthLabel",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,
"loadingMessages",void 0);m.__decorate([n.property()],l.AreaMeasurementVisualization.prototype,"visible",null);l.AreaMeasurementVisualization=m.__decorate([L.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],l.AreaMeasurementVisualization);const S={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,
handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},T={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,
positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},U=new u.EuclideanSegment(p.create(),p.create());Object.defineProperty(l,"__esModule",{value:!0})});
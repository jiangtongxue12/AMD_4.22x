// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/aaBoundingBox ../../../../geometry/support/buffer/BufferView ../../support/buffer/InterleavedLayout ../lib/GLMaterial ../lib/GLMaterials ../lib/Material ../lib/Util ./internal/bufferWriterUtils ./internal/MaterialUtil ../shaders/ShadedColorMaterialTechnique".split(" "),function(r,t,k,l,u,C,D,E,F,v,G,w,x,m){let M=function(f){function d(a){a=f.call(this,a,H)||
this;a.supportsEdges=!0;a.techniqueConfig=new m.ShadedColorMaterialTechniqueConfiguration;a._vertexAttributeLocations=m.ShadedColorMaterialVertexAttrLocations;return a}t._inheritsLoose(d,f);var b=d.prototype;b.getTechniqueConfig=function(a,c){this.techniqueConfig.output=a;this.techniqueConfig.cullFace=this.parameters.cullFace;this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this.techniqueConfig.transparent=this.parameters.transparent;this.techniqueConfig.writeDepth=this.parameters.writeDepth;
this.techniqueConfig.screenSizeEnabled=this.parameters.screenSizeEnabled;this.techniqueConfig.shadingEnabled=this.parameters.shadingEnabled;this.techniqueConfig.transparencyPassType=c.transparencyPassType;this.techniqueConfig.multipassTerrainEnabled=c.multipassTerrainEnabled;this.techniqueConfig.cullAboveGround=c.cullAboveGround;return this.techniqueConfig};b.getPassParameters=function(){return this.parameters};b.intersect=function(a,c,n,h,y,z,A){if(this.parameters.screenSizeEnabled){const p=a.vertexAttributes.get("offset");
x.intersectTriangleGeometry(a,c,h,y,z,{applyToVertex:(e,q,I,g)=>{g=k.set(B,p.data[3*g],p.data[3*g+1],p.data[3*g+2]);e=k.set(J,e,q,I);k.scale(g,g,this.parameters.screenSize*h.camera.computeRenderPixelSizeAt(g));k.add(e,e,g);return[e[0],e[1],e[2]]},applyToAabb:e=>{const q=u.center(e,B);return u.scale(e,this.parameters.screenSize*h.camera.computeRenderPixelSizeAt(q))}},A)}else x.intersectTriangleGeometry(a,c,h,y,z,void 0,A)};b.requiresSlot=function(a,c){if(4===F.outputFromPass(c))return 2===a;c=2;this.parameters.transparent&&
(c=this.parameters.writeDepth?4:7);return a===c||20===a};b.createGLMaterial=function(a){return 0===a.output||7===a.output||4===a.output?new K(a):null};b.createBufferWriter=function(){return new L(this.parameters.screenSizeEnabled)};return d}(v.Material),K=function(f){function d(){return f.apply(this,arguments)||this}t._inheritsLoose(d,f);var b=d.prototype;b.updateParameters=function(a){return this.ensureTechnique(m.ShadedColorMaterialTechnique,a)};b.beginSlot=function(a){return this.updateParameters(a)};
b.bind=function(a,c){c.bindPass(this._material.getPassParameters(),a)};return d}(E);const H={color:[1,1,1,1],shadingTint:[0,0,0,.25],shadingDirection:k.normalize(l.create(),[.5,-.5,-.5]),transparent:!1,writeDepth:!0,slicePlaneEnabled:!1,cullFace:0,screenSizeEnabled:!1,screenSize:14,shadingEnabled:!0,...v.materialParametersDefaults};let L=function(){function f(b){this.screenSizeEnabled=b;b=D.newLayout().vec3f("position").vec3f("normal");this.screenSizeEnabled&&b.vec3f("offset");this.vertexBufferLayout=
b}var d=f.prototype;d.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};d.elementCount=function(b){return b.indices.get("position").length};d.write=function(b,a,c,n){w.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,c,n);if(this.screenSizeEnabled)if(a.vertexAttributes.has("offset")){const h=a.vertexAttributes.get("offset");a=a.indices.get("offset");G.assert(3===h.size);if(c=c.getField("offset",C.BufferViewVec3f))w.writePosition(a,h.data,
b.invTranspTransformation,c,n);else throw Error("unable to acquire view for offset");}else throw Error("offset vertex attribute required for screenSizeEnabled ShadedColorMaterial");};return f}();const B=l.create(),J=l.create();r.ShadedColorMaterial=M;Object.defineProperty(r,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/Logger ../../../../core/maybe ../../../../core/screenUtils ../../../../chunks/vec2 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/support/lineSegment ../../../../geometry/support/plane ../../../../geometry/support/buffer/BufferView ../lib/geometryDataUtils ../lib/GLMaterial ../lib/Material ../lib/Util ./internal/bufferWriterUtils ./internal/DefaultBufferWriter ./internal/MaterialUtil ./renderers/utils ../shaders/NativeLineTechnique".split(" "),
function(P,Q,J,G,D,Z,g,u,y,l,R,aa,ba,S,ca,da,K,ea,fa,T){const ha=J.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial");J=function(x){function t(a){a=x.call(this,a,ia)||this;a._techniqueConfig=new T.NativeLineTechniqueConfiguration;return a}Q._inheritsLoose(t,x);var b=t.prototype;b.getTechniqueConfig=function(a,c){this._techniqueConfig.output=a;this._techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this._techniqueConfig.vertexColors=this.parameters.vertexColors;
this._techniqueConfig.transparent=1>this.parameters.color[3]||1>this.parameters.width;this._techniqueConfig.draped=20===c.slot;a=G.isSome(this.parameters.stipplePattern);this._techniqueConfig.stippleEnabled=a;this._techniqueConfig.stippleOffColorEnabled=a&&G.isSome(this.parameters.stippleOffColor);this._techniqueConfig.sceneHasOcludees=this.parameters.sceneHasOcludees;this._techniqueConfig.stipplePreferContinuous=this.parameters.stipplePreferContinuous;return this._techniqueConfig};b.getPassParameters=
function(){return this.parameters};b.intersect=function(a,c,d,e,r,h,k,m,f){G.isSome(f)?ea.intersectDrapedRenderLineGeometry(a,e,f,h,1,k):this.intersectLineGeometry(a,c,d,e,k)};b.intersectLineGeometry=function(a,c,d,e,r){if(e.options.selectionMode&&!fa.isInstanceHidden(c))if(ca.isTranslationMatrix(d)){var h=a.vertexAttributes.get("position").data,k=e.camera,m=ja;Z.copy(m,e.point);g.set(F[0],m[0]-2,m[1]+2,0);g.set(F[1],m[0]+2,m[1]+2,0);g.set(F[2],m[0]+2,m[1]-2,0);g.set(F[3],m[0]-2,m[1]-2,0);for(a=0;4>
a;a++)if(!k.unprojectFromRenderScreen(F[a],w[a]))return;l.fromPoints(k.eye,w[0],w[1],L);l.fromPoints(k.eye,w[1],w[2],M);l.fromPoints(k.eye,w[2],w[3],N);l.fromPoints(k.eye,w[3],w[0],O);c=Number.MAX_VALUE;a=0;for(let n=0;n<h.length-5;n+=3)if(p[0]=h[n]+d[12],p[1]=h[n+1]+d[13],p[2]=h[n+2]+d[14],q[0]=h[n+3]+d[12],q[1]=h[n+4]+d[13],q[2]=h[n+5]+d[14],!(0>l.signedDistance(L,p)&&0>l.signedDistance(L,q)||0>l.signedDistance(M,p)&&0>l.signedDistance(M,q)||0>l.signedDistance(N,p)&&0>l.signedDistance(N,q)||0>l.signedDistance(O,
p)&&0>l.signedDistance(O,q))){k.projectToRenderScreen(p,z);k.projectToRenderScreen(q,A);if(0>z[2]&&0<A[2]){g.subtract(v,p,q);var f=k.frustum;f=-l.signedDistance(f[4],p)/g.dot(v,l.normal(f[4]));g.scale(v,v,f);g.add(p,p,v);k.projectToRenderScreen(p,z)}else if(0<z[2]&&0>A[2])g.subtract(v,q,p),f=k.frustum,f=-l.signedDistance(f[4],q)/g.dot(v,l.normal(f[4])),g.scale(v,v,f),g.add(q,q,v),k.projectToRenderScreen(q,A);else if(0>z[2]&&0>A[2])continue;z[2]=0;A[2]=0;f=y.distance2(y.fromPoints(z,A,U),m);f<c&&(c=
f,g.copy(V,p),g.copy(W,q),a=n/3)}d=e.rayBegin;e=e.rayEnd;4>c&&(c=Number.MAX_VALUE,y.closestLineSegmentPoint(y.fromPoints(V,W,U),y.fromPoints(d,e,ka),B)&&(g.subtract(B,B,d),c=g.length(B),g.scale(B,B,1/c),c/=g.distance(d,e)),r(c,B,a,!1))}else ha.error("intersection assumes a translation-only matrix")};b.computeAttachmentOrigin=function(a,c){a=a.vertexAttributes;if(!a)return!1;a=a.get("position");return aa.computeAttachmentOriginLines(a,null,!1,c)};b.requiresSlot=function(a){return 2===a||20===a};b.createGLMaterial=
function(a){return 0===a.output||4===a.output?new la(a):null};b.createBufferWriter=function(){const a=this.parameters.vertexColors?K.PositionColorLayout:K.PositionLayout;return G.isNone(this.parameters.stipplePattern)?new K.DefaultBufferWriter(a):new ma(a.clone().vec3f("auxpos1").vec2f("uv0"))};return t}(S.Material);let la=function(x){function t(){return x.apply(this,arguments)||this}Q._inheritsLoose(t,x);var b=t.prototype;b.updateParameters=function(a){return this.ensureTechnique(T.NativeLineTechnique,
a)};b._updateOccludeeState=function(a){a.hasOccludees!==this._material.parameters.sceneHasOcludees&&this._material.setParameters({sceneHasOcludees:a.hasOccludees})};b.beginSlot=function(a){0===this._output&&this._updateOccludeeState(a);return this.updateParameters(a)};b.bind=function(a,c){c.bindPass(this._material.getPassParameters(),a)};return t}(ba),ma=function(){function x(b){this.vertexBufferLayout=b}var t=x.prototype;t.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};t.elementCount=
function(b){return b.indices.get("position").length};t.write=function(b,a,c,d){da.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,c,d);this.writeAuxpos1(b,a,c,d);this.writeUV0(b,a,c,d)};t.writeAuxpos1=function(b,a,c,d){var e=c.getField("auxpos1",R.BufferViewVec3f);c=a.indices.get("position");a=a.vertexAttributes.get("position").data;b=b.transformation;const r=e.typedBufferStride;e=e.typedBuffer;d*=r;for(let k=0;k<c.length-1;k+=2)for(const m of[1,0]){var h=
3*c[k+m];const f=a[h],n=a[h+1];h=a[h+2];const H=b[1]*f+b[5]*n+b[9]*h+b[13],I=b[2]*f+b[6]*n+b[10]*h+b[14];e[d]=b[0]*f+b[4]*n+b[8]*h+b[12];e[d+1]=H;e[d+2]=I;d+=r}};t.writeUV0=function(b,a,c,d){var e,r=c.getField("uv0",R.BufferViewVec2f),h=a.indices.get("position");c=a.vertexAttributes.get("position").data;const k=null==(e=a.vertexAttributes.get("distanceToStart"))?void 0:e.data;b=b.transformation;a=r.typedBufferStride;r=r.typedBuffer;d*=a;let m=0;r[d]=0;r[d+1]=m;d+=a;e=3*h[0];e=g.set(p,c[e],c[e+1],
c[e+2]);b&&g.transformMat4(e,e,b);const f=q,n=h.length-1;let H=1;const I=k?(E,X,Y)=>m=k[Y]:(E,X,Y)=>m+=g.distance(E,X);for(let E=1;E<n;E+=2){var C=3*h[E];g.set(f,c[C],c[C+1],c[C+2]);b&&g.transformMat4(f,f,b);I(e,f,H++);for(C=0;2>C;++C)r[d]=1-C,r[d+1]=m,d+=a;g.copy(e,f)}h=3*h[n];g.set(f,c[h],c[h+1],c[h+2]);b&&g.transformMat4(f,f,b);I(e,f,H);r[d]=1;r[d+1]=m};return x}();const ia={color:[1,1,1,1],vertexColors:!1,slicePlaneEnabled:!1,width:1,stipplePattern:null,stippleOffColor:null,stipplePreferContinuous:!0,
sceneHasOcludees:!1,...S.materialParametersDefaults},p=u.create(),q=u.create(),v=u.create(),B=u.create(),z=D.createRenderScreenPointArray3(),A=D.createRenderScreenPointArray3(),V=u.create(),W=u.create(),U=y.create(),ka=y.create(),ja=u.create(),F=[D.createRenderScreenPointArray3(),D.createRenderScreenPointArray3(),D.createRenderScreenPointArray3(),D.createRenderScreenPointArray3()],w=[u.create(),u.create(),u.create(),u.create()],L=l.create(),M=l.create(),N=l.create(),O=l.create();P.NativeLineMaterial=
J;Object.defineProperty(P,"__esModule",{value:!0})});
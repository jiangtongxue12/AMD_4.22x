// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/vec2f32 ../../support/buffer/InterleavedLayout ../lib/GLMaterial ../lib/Material ./internal/bufferWriterUtils ../shaders/LineCalloutTechnique".split(" "),function(l,h,f,q,r,m,k,n){let w=function(e){function c(a){a=e.call(this,a,t)||this;a.techniqueConfig=new n.LineCalloutTechniqueConfiguration;a._uniqueMaterialIdentifier=c.uniqueMaterialIdentifier(a.parameters);return a}h._inheritsLoose(c,e);var b=c.prototype;b.getPassParameters=
function(){return this.parameters};b.getTechniqueConfig=function(a,d){a=18!==(null==d?void 0:d.slot);this.techniqueConfig.occlusionTestEnabled=this.parameters.occlusionTest;this.techniqueConfig.verticalOffset=!!this.parameters.verticalOffset;this.techniqueConfig.screenSizePerspective=!!this.parameters.screenSizePerspective;this.techniqueConfig.depthHudEnabled=a;this.techniqueConfig.depthHudAlignStartEnabled=!!this.parameters.depthHUDAlignStart;this.techniqueConfig.screenCenterOffsetUnitsEnabled="screen"===
this.parameters.centerOffsetUnits?1:0;this.techniqueConfig.slicePlaneEnabled=this.parameters.slicePlaneEnabled;this.techniqueConfig.multipassGeometryEnabled=d?d.multipassGeometryEnabled:!1;return this.techniqueConfig};b.intersect=function(){};b.requiresSlot=function(a){switch(a){case 18:case 19:return!0}return!1};b.createGLMaterial=function(a){return 0===a.output?new u(a):null};b.createBufferWriter=function(){return new v};b.validateParameters=function(a){a=c.uniqueMaterialIdentifier(a);a!==this._uniqueMaterialIdentifier&&
(this._uniqueMaterialIdentifier=a)};c.uniqueMaterialIdentifier=function(a){return JSON.stringify({screenOffset:a.screenOffset||[0,0],centerOffsetUnits:a.centerOffsetUnits||"world"})};h._createClass(c,[{key:"uniqueMaterialIdentifier",get:function(){return this._uniqueMaterialIdentifier}}]);return c}(m.Material),u=function(e){function c(){return e.apply(this,arguments)||this}h._inheritsLoose(c,e);var b=c.prototype;b.updateParameters=function(a){return this.ensureTechnique(n.LineCalloutTechnique,a)};
b.beginSlot=function(a){return this.updateParameters(a)};b.bind=function(a,d){d.bindPass(this._material.getPassParameters(),a)};return c}(r);const t={verticalOffset:null,screenSizePerspective:null,screenOffset:[0,0],color:[0,0,0,1],size:1,borderColor:null,occlusionTest:!1,shaderPolygonOffset:1E-5,depthHUDAlignStart:!1,centerOffsetUnits:"world",slicePlaneEnabled:!1,...m.materialParametersDefaults},x=q.newLayout().vec3f("position").vec3f("normal").vec2f("uv0").vec4f("auxpos1"),p=[f.fromValues(0,0),
f.fromValues(1,0),f.fromValues(0,1),f.fromValues(1,0),f.fromValues(1,1),f.fromValues(0,1)];let v=function(){function e(){this.vertexBufferLayout=x}var c=e.prototype;c.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};c.elementCount=function(b){return 6*b.indices.get("position").length};c.write=function(b,a,d,g){k.writePosition(a.indices.get("position"),a.vertexAttributes.get("position").data,b.transformation,d.position,g,6);k.writeNormal(a.indices.get("normal"),a.vertexAttributes.get("normal").data,
b.invTranspTransformation,d.normal,g,6);k.writeBufferVec4(a.indices.get("auxpos1"),a.vertexAttributes.get("auxpos1").data,d.auxpos1,g,6);for(b=0;b<p.length;++b)d.uv0.setVec(g+b,p[b])};return e}();l.LineCalloutMaterial=w;Object.defineProperty(l,"__esModule",{value:!0})});
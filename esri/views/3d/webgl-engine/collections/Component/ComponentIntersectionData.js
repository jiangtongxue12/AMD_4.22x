// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/vec3f64","../../../../../geometry/support/aaBoundingBox","../../materials/internal/MaterialUtil"],function(F,N,B,J,O){function P(g,h,a){let d=0,e=Infinity;for(let b=0;3>b;++b){var c=g[b];if(h[b]<c){if(1E-6>=a[b])return!1;d=Math.max(d,(c-h[b])/a[b])}else-1E-6>=a[b]&&(e=Math.min(e,(c-h[b])/a[b]));if(d>e)return!1;c=g[b+3];if(h[b]>c){if(-1E-6<=a[b])return!1;d=Math.max(d,(c-h[b])/a[b])}else 1E-6<=a[b]&&(e=Math.min(e,
(c-h[b])/a[b]));if(d>e)return!1}return!0}function Q(g,h,a,d,e,c){let b=d;for(;a<b;){var f=g[a];h[6*f+e+3]<=c?++a:(--b,g[a]=g[b],g[b]=f)}f=a;for(b=d;f<b;)d=g[b-1],h[6*d+e]>=c?--b:(g[b-1]=g[f],g[f]=d,++f);return{next:a,mid:f}}function R(g,h,a,d){if(d<=a)return J.fromValues(NaN,NaN,NaN,NaN,NaN,NaN);var e=6*g[a];for(var c=0;3>c;++c)y[c]=h[e+0+c],z[c]=h[e+3+c];for(a+=1;a<d;++a)for(e=6*g[a],c=0;3>c;++c)y[c]=Math.min(y[c],h[e+0+c]),z[c]=Math.max(z[c],h[e+3+c]);return J.fromValues(y[0],y[1],y[2],z[0],z[1],
z[2])}function S(g){var h=g[3]-g[0];const a=g[4]-g[1],d=g[5]-g[2];h=h>a?h>d?0:a>d?1:2:a>d?1:d>h?2:0;return{axis:h,midValue:(g[h]+g[h+3])/2}}function T(g,h,a,d,e){a-=h;const c=new Float32Array(6*a);for(let f=0;f<a;++f){var b=3*(f+h);const l=g[b+0]*e,m=g[b+1]*e;b=g[b+2]*e;for(let k=0;3>k;++k){const q=d[l+k],p=d[m+k],n=d[b+k];c[6*f+k]=Math.min(q,p,n);c[6*f+3+k]=Math.max(q,p,n)}}return c}function U(g,h,a,d){const e=d-a;var c=0;for(var b=a;b<d;++b)for(var f=0;3>f;++f)c=Math.max(h[3*b+f],c);d=65535>=c?
new Uint16Array(3*e):new Uint32Array(3*e);for(c=0;c<e;++c)for(b=3*(g[c]+a),f=0;3>f;++f)d[3*c+f]=h[b+f];return d}let K=function(g,h,a,d,e){this.aabb=g;this.axis=h;this.d=a;this.midStartIndex=d;this.rightStartIndex=e},M=function(){function g(a,d,e,c){this.globalTriangleVertexIndices=a;this.firstTriangleIndex=d;this.positionAttribute=c;this.rayDirection=B.create();this.bspNodeTree=[];this.vertexPositionBuffer=c.data;this.vertexPositionStride=c.stride;const b=e-d,f=65535>=b?new Uint16Array(b):new Uint32Array(b);
this.indices=f;for(let l=0;l<b;++l)f[l]=l;{const l=T(a,d,e,c.data,c.stride),m=(k,q,p)=>{var n=R(f,l,k,q);const u=q-k;if(20>=u)return k=new K(n,void 0,0,k,q),this.bspNodeTree.push(k),k;const {axis:r,midValue:v}=S(n),w=Q(f,l,k,q,r,v),t=(A,C)=>{if(!(15<p)){var D=C-A;if(!(20>D||D>=.8*u))return m(A,C,p+1)}};n=new K(n,r,v,w.next,w.mid);this.bspNodeTree.push(n);n.leftNode=t(k,w.next);n.rightNode=t(w.mid,q);return n};m(0,b,0);this.triangleVertexIndices=U(f,a,d,e)}}var h=g.prototype;h.intersectRayTriangleRange=
function(a,d){{if(a>=d)return;const w=this.triangleVertexIndices,t=this.positionAttribute.data,A=this.positionAttribute.stride;var e=this.rayOrigin;const C=e[0],D=e[1];e=e[2];var c=this.rayDirection;const G=c[0],H=c[1];c=c[2];for(let I=a,E=3*a;I<d;++I){var b=w[E]*A,f=t[b],l=t[b+1],m=t[b+2],k=w[E+1]*A;b=t[k];var q=t[k+1];k=t[k+2];var p=w[E+2]*A,n=t[p],u=t[p+1];p=t[p+2];E+=3;b-=f;q-=l;k-=m;n-=f;u-=l;p-=m;var r=H*p-u*c,v=c*n-p*G;const L=G*u-n*H,x=b*r+q*v+k*L;if(!(Math.abs(x)<=Number.EPSILON)){f=C-f;
l=D-l;m=e-m;r=f*r+l*v+m*L;if(0<x){if(0>r||r>x)continue}else if(0<r||r<x)continue;v=l*k-q*m;m=m*b-k*f;l=f*q-b*l;f=G*v+H*m+c*l;if(0<x){if(0>f||r+f>x)continue}else if(0<f||r+f<x)continue;l=(n*v+u*m+p*l)/x;0<=l&&(m=this.indices[I]+this.firstTriangleIndex,b=O.computeNormal(b,q,k,n,u,p,V),this.callback(l,b,m,!1))}}}g.numFacesTested+=d-a};h.intersectRay=function(a,d){g.numFacesTested=0;var e=B.fromValues(a.r0[0],a.r0[1],a.r0[2]),c=B.fromValues(a.r1[0],a.r1[1],a.r1[2]);a=c[0]-e[0];const b=c[1]-e[1];c=c[2]-
e[2];1E-6>a*a+b*b+c*c||(this.rayOrigin=e,e=this.rayDirection,e[0]=a,e[1]=b,e[2]=c,e=this.triangleVertexIndices.length/3,this.callback=d,this.intersectRayBSP(this.bspNodeTree[0],0,e))};h.intersectRayBSP=function(a,d,e){const c=this.rayOrigin,b=this.rayDirection;if(P(a.aabb,c,b)){var f=a.axis,l=a.d;if(c[f]<l||0>b[f]){const m=a.midStartIndex;if(d<m){const k=a.leftNode;void 0!==k?this.intersectRayBSP(k,d,m):this.intersectRayTriangleRange(d,m)}}this.intersectRayTriangleRange(a.midStartIndex,a.rightStartIndex);
if(c[f]>l||0<b[f])d=a.rightStartIndex,d<e&&(a=a.rightNode,void 0!==a?this.intersectRayBSP(a,d,e):this.intersectRayTriangleRange(d,e))}};N._createClass(g,[{key:"estimatedMemoryUsage",get:function(){return this.triangleVertexIndices.byteLength+this.indices.byteLength}}]);return g}();M.numFacesTested=0;const V=B.create(),y=[Infinity,Infinity,Infinity],z=[-Infinity,-Infinity,-Infinity];F.ComponentIntersectionData=M;F.componentMinimalSizeForIntersectionData=40;Object.defineProperty(F,"__esModule",{value:!0})});
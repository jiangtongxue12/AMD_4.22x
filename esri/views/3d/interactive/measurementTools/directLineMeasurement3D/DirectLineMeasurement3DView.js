// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/screenUtils ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec3f64 ../../../../../geometry/support/lineSegment ../../manipulatorUtils ./PickResult ../support/viewUtils ../../visualElements/LaserlineVisualElement ../../../support/ElevationProvider ../../../webgl-engine/lib/Intersector".split(" "),
function(c,q,e,y,z,d,l,A,B,f,I,J,K,C,r,D,E,u,v,F,G,H){const x={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};var m;(function(n){n.Manipulators="manipulators";n.AnalysisViewDestroyed="analysis-view-destroyed";n.AnalysisView="analysis-view"})(m||(m={}));c.DirectLineMeasurement3DView=function(n){function t(a){a=n.call(this,a)||
this;a._state="pending";a.analysisView=null;a.cursorPoint=null;a._visible=!1;a._laserLine=null;a._handles=new z;a._lastDraggedHandle=null;return a}q._inheritsLoose(t,n);var g=t.prototype;g.normalizeCtorArgs=function(a){return{...a,params:a.params?v.copyParameter(x,a.params):v.copyParameter(x,{})}};g.initialize=function(){this._intersector=H.newIntersector(this.view.state.viewingMode);this._intersector.options.store=0;this._promise=this._initialize()};g._initialize=function(){var a=q._asyncToGenerator(function*(){switch(this._state){case "destroyed":return Promise.reject("DirectLineMeasurement3DView already destroyed")}const b=
yield this.view.whenAnalysisView(this.analysis);yield b.whenReady();this._set("analysisView",b);this._laserLine=new F.LaserlineVisualElement({view:this.view,attached:!0});this._visible&&this._updateVisibility(this._visible);this._connectToAnalysisView();this._state="ready";return b});return function(){return a.apply(this,arguments)}}();g.destroy=function(){switch(this._state){case "pending":this._state="destroyed";return;case "ready":break;default:return}this.hide();this._handles=d.destroyMaybe(this._handles);
this._laserLine=d.destroyMaybe(this._laserLine);this._state="destroyed"};g.when=function(){return this._promise.then(()=>{})};g.whenMessages=function(){var a=q._asyncToGenerator(function*(){const b=yield this._promise;yield B.whenNotOnce(b,"updating")});return function(){return a.apply(this,arguments)}}();g.createManipulators=function(){var a=()=>{const h=E.createSphereManipulator(this.view,this.params.handleColor,this.params.handleOpacity);h.available=!1;h.radius=this.params.handleRadius;return h};
const b=a(),k=a();d.isSome(this.analysis.startPoint)&&(b.location=this.analysis.startPoint,b.available=!0);d.isSome(this.analysis.endPoint)&&(k.location=this.analysis.endPoint,k.available=!0);var p=()=>{let h=this._lastDraggedHandle;b.grabbing&&!k.grabbing&&(h="start");k.grabbing&&!b.grabbing&&(h="end");b.grabbing||k.grabbing||(h=null);this._lastDraggedHandle=h};a=b.events.on("grab-changed",p);p=k.events.on("grab-changed",p);this._handles.add([a,p],m.Manipulators);return{start:b,end:k}};g.show=function(){switch(this._state){case "ready":this._visible||
this._updateVisibility(!0);break;case "pending":this._visible=!0}};g.hide=function(){switch(this._state){case "ready":this._visible&&this._updateVisibility(!1);break;case "pending":this._visible=!1}};g.clearMeasurement=function(){this.toolState.lineState="initial";this._clearOverride("measurementSurfaceLocation")};g.finishMeasurement=function(){if(!this._isOverridden("measurementSurfaceLocation")){const a=this.measurementSurfaceLocation;this._override("measurementSurfaceLocation","camera-dependent"===
a?this.view.state.camera.aboveGround?"above-the-surface":"below-the-surface":a)}this.toolState.lineState="measured"};g._connectToAnalysisView=function(){this._handles.remove(m.AnalysisView);this._handles.add([l.react(()=>d.applySome(this.analysisView,a=>a.destroyed),a=>{a&&this._handles.remove(m.AnalysisView)},l.initial),l.react(()=>["measured"===this.toolState.lineState,this.analysisView],([a,b])=>{d.isSome(b)&&!b.destroyed&&(b.allowVisualElementsOrientationChange=!a)},l.initial),l.react(()=>this._laserLineParams,
a=>{const b=this._laserLine;b.heightManifoldTarget=a.heightManifoldTarget;b.pointDistanceLine=a.pointDistanceLine;b.lineVerticalPlaneSegment=a.lineVerticalPlaneSegment},l.initial)],m.AnalysisView)};g._updateVisibility=function(a){this._visible=a;(this.analysis.visible=a)?this._laserLine.style={innerColor:this.params.laserLineInnerColor,innerWidth:this.params.laserLineInnerWidth,glowColor:this.params.laserLineGlowColor,glowWidth:this.params.laserLineGlowWidth,glowFalloff:this.params.laserLineGlowFalloff,
globalAlpha:this.params.laserLineGlobalAlpha}:this.view.cursor=null;this._laserLine.visible=a};g.pick=function(a){var b=this.view.spatialReference;a=A.screenPointObjectToArray(a.screenPoint);this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);a=this._intersector.results.min;const k=r.create();if(!a.getIntersectionPoint(k))return new u.PickResult;b=this.view.renderCoordsHelper.fromRenderCoords(k,b);return d.isNone(b)?new u.PickResult:new u.PickResult(2===a.intersector?
"ground":"feature",k,b)};g.getElevation=function(a){return this.view.basemapTerrain.ready?d.unwrapOr(G.getElevationAtPoint(this.view.elevationProvider,a),0):0};g.overlappingHandles=function(a,b){return v.pointToPointScreenDistance(a,b,this.view)<=this.params.handleRadius};q._createClass(t,[{key:"requiresCursorPoint",get:function(){return"initial"===this.toolState.lineState&&this.toolState.active}},{key:"visible",get:function(){return this._visible},set:function(a){a?this.show():this.hide()}},{key:"viewMode",
get:function(){const a=this.analysisView;return d.isSome(a)&&!a.destroyed?a.viewMode:0}},{key:"measurementMode",get:function(){const a=this.analysisView;return d.isSome(a)&&!a.destroyed?a.actualVisualizedMeasurement:"euclidean"}},{key:"testData",get:function(){const a=this._laserLine.testData,b=d.unwrap(this.analysisView).testData;return{labels:null==b?void 0:b.labels,stripeLength:null==b?void 0:b.stripeLength,laserLineRenderer:{heightManifoldEnabled:d.isSome(a)?a.heightManifoldEnabled:!1,heightManifoldTarget:d.isSome(a)?
a.heightManifoldTarget:null,pointDistanceEnabled:d.isSome(a)?a.pointDistanceEnabled:!1,pointDistanceOrigin:d.isSome(a)?a.pointDistanceOrigin:null,pointDistanceTarget:d.isSome(a)?a.pointDistanceTarget:null,lineVerticalPlaneEnabled:d.isSome(a)?a.lineVerticalPlaneEnabled:!1}}}},{key:"directLabelText",get:function(){const a=this.analysisView;return d.isSome(a)&&!a.destroyed?a.directLabelText:null}},{key:"horizontalLabelText",get:function(){const a=this.analysisView;return d.isSome(a)&&!a.destroyed?a.horizontalLabelText:
null}},{key:"verticalLabelText",get:function(){const a=this.analysisView;return d.isSome(a)&&!a.destroyed?a.verticalLabelText:null}},{key:"_cursorPosition",get:function(){const a=r.create();d.applySome(this.cursorPoint,b=>this.view.renderCoordsHelper.toRenderCoords(b,a));return a}},{key:"_startPosition",get:function(){const a=r.create();d.applySome(this.analysis.startPoint,b=>this.view.renderCoordsHelper.toRenderCoords(b,a));return a}},{key:"_endPosition",get:function(){const a=r.create();d.applySome(this.analysis.endPoint,
b=>this.view.renderCoordsHelper.toRenderCoords(b,a));return a}},{key:"_laserLineParams",get:function(){const a=this._focusPosition,{active:b,lineState:k}=this.toolState,p=this.viewMode;var h=this.analysisView;const w=this.params.laserLineEnabled&&!!a&&"measured"!==k&&b;if(!w||!this.visible||d.isNone(h)||h.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};h=h.actualVisualizedMeasurement;return{heightManifoldTarget:"euclidean"===h?a:null,pointDistanceLine:"local"!==
this.view.viewingMode&&w&&this.analysis.startPoint&&"geodesic"===h?this._pointDistanceLine:null,lineVerticalPlaneSegment:w&&2===p?D.fromPoints(this._startPosition,this._endPosition):null}}},{key:"_focusPosition",get:function(){const {lineState:a}=this.toolState;var b=this.analysisView;b=d.isSome(b)&&!b.destroyed&&1===b.measurementMode;b=1===this.viewMode&&b;switch(a){case "drawing":return b?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case "editing":return b?"start"===
this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return d.isSome(this.cursorPoint)?this._cursorPosition:null}}},{key:"_pointDistanceLine",get:function(){return{origin:"drawing"===this.toolState.lineState||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition,target:this._focusPosition}}},{key:"measurementSurfaceLocation",get:function(){const a=this.toolState.startPointSurfaceLocation,b=this.toolState.endPointSurfaceLocation;
return null==a||null==b||"above-the-surface"===a&&"below-the-surface"===b||"below-the-surface"===a&&"above-the-surface"===b||"on-the-surface"===a&&"on-the-surface"===b?"camera-dependent":"above-the-surface"===a||"above-the-surface"===b?"above-the-surface":"below-the-surface"}}]);return t}(y);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"view",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"params",void 0);e.__decorate([f.property({readOnly:!0})],
c.DirectLineMeasurement3DView.prototype,"analysisView",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"analysis",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"cursorPoint",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"toolState",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"requiresCursorPoint",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"visible",
null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"viewMode",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"measurementMode",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"testData",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"directLabelText",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"horizontalLabelText",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,
"verticalLabelText",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_visible",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_laserLine",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_cursorPosition",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_startPosition",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_endPosition",null);e.__decorate([f.property()],
c.DirectLineMeasurement3DView.prototype,"_lastDraggedHandle",void 0);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_laserLineParams",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_focusPosition",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"_pointDistanceLine",null);e.__decorate([f.property()],c.DirectLineMeasurement3DView.prototype,"measurementSurfaceLocation",null);c.DirectLineMeasurement3DView=e.__decorate([C.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],
c.DirectLineMeasurement3DView);Object.defineProperty(c,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/screenUtils ../../../../../chunks/vec3f64 ../../manipulatorUtils ../../editingTools/dragEventPipeline3D ../support/viewUtils ../../visualElements/LaserlineVisualElement ../../../webgl-engine/lib/GeometryUtil ../../../webgl-engine/lib/Intersector ../../../../interactive/ManipulatorCollection".split(" "),function(n,r,d,h,t,p,q,u,m,v,w,x,
y){const z={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,
areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25};let l=function(){function e(a){var c,f,g;this.vertexManipulators=[];this._analysisVisualization=this._analysisView=null;this._state="pending";this._mode=0;this._lastDraggedVertex=this._cursorPoint=null;this._visible=!1;this._listenerHandles=this._cursorManipulator=this._laserLine=null;this._tempHandlePosition=p.create();this._analysis=a.analysis;this._toolState=a.toolState;this._manipulators=null!=
(c=a.manipulators)?c:new y.ManipulatorCollection;this._view=a.view;this._mode=null!=(f=a.mode)?f:0;this._cursorPoint=null!=(g=a.cursorPoint)?g:null;this._style=m.copyParameter(z,a.style);this._intersector=x.newIntersector(this._view.state.viewingMode);this._intersector.options.store=0;this._creationPromise=this._view.whenAnalysisView(this._analysis).then(k=>this._initialize(k))}var b=e.prototype;b._initialize=function(a){switch(this._state){case "destroyed":return}this._analysisView=a;this._analysisVisualization=
a.analysisVisualization;this._analysisViewData=a.analysisViewData;a=q.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);a.available=!1;a.radius=this._style.handleRadius;a.interactive=!1;this._manipulators.add(a);this._cursorManipulator=a;this._laserLine=new v.LaserlineVisualElement({view:this._view,attached:!0,style:{glowColor:this._style.laserLineGlowColor,glowWidth:this._style.laserLineGlowWidth,glowFalloff:this._style.laserLineGlowFalloff,innerColor:this._style.laserLineInnerColor,
innerWidth:this._style.laserLineInnerWidth,globalAlpha:this._style.laserLineGlobalAlpha}});this._analysisView.analysisViewData.mode=this._mode;this._analysisViewData.cursorPoint=this._cursorPoint;this._visible&&this._updateVisibility(this._visible);this._state="ready"};b.destroy=function(){switch(this._state){case "pending":this._state="destroyed";return;case "ready":break;default:return}this.hide();this._laserLine.destroy();this._laserLine=null;this._state="destroyed"};b.when=function(){return this._creationPromise.then(()=>
{})};b.whenMessages=function(){var a=n._asyncToGenerator(function*(){yield this._creationPromise;yield new Promise(c=>{h.reactTruthy(()=>!this._analysisView.updating,c,{initial:!0,sync:!0,once:!0})})});return function(){return a.apply(this,arguments)}}();b.show=function(){this._setVisiblity(!0)};b.hide=function(){this._setVisiblity(!1)};b._setVisiblity=function(a){switch(this._state){case "ready":this._visible!==a&&this._updateVisibility(a);break;case "pending":this._visible=a}};b._updateVisibility=
function(a){this._visible=a;this._analysis.visible=a;(this._laserLine.visible=a)?(this._initializeListeners(),this._updateAll(this._analysisVisualization.viewData)):(this._destroyListeners(),this.vertexManipulators.forEach(c=>{this._removeVertexManipulator(c.manipulator)}),this.vertexManipulators=[],this._view.cursor=null)};b.vertexHandleAt=function(a,c){a=this._manipulators.intersect(a,c);return d.isSome(a)?a.manipulator.metadata:null};b.manipulatorToVertex=function(a){return a.metadata};b.pick=
function(a){var c=this._view.spatialReference;a=t.screenPointObjectToArray(a.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);a=this._intersector.results.min;const f=p.create();if(!a.getIntersectionPoint(f))return new e.PickResult;c=this._view.renderCoordsHelper.fromRenderCoords(f,c);return d.isNone(c)?new e.PickResult:new e.PickResult(2===a.intersector?"surface":"feature",f,c)};b.overlappingHandles=function(a,c){return m.pointToPointScreenDistance(a,
c,this._view)<=this._style.handleRadius};b.screenToMap3D=function(){return u.screenToMap3D(this._view)};b.finishMeasurement=function(){switch(this._state){case "ready":{const a=this._analysisViewData.path;3>a.numVertices?(a.clear(),this.cursorPoint=null,this._toolState.polygonState="initial"):(a.close(),this.cursorPoint=null,this._toolState.polygonState="measured")}}};b._updateAll=function(a){this._visible&&(this._updateVertexManipulators(a),this._updateLaserLine())};b._createVertexManipulator=function(){const a=
q.createSphereManipulator(this._view,this._style.handleColor,this._style.handleOpacity);a.radius=this._style.handleRadius;return{id:this._manipulators.add(a),manipulator:a}};b._removeVertexManipulator=function(a){this._manipulators.remove(a)};b._updateVertexManipulators=function(a){const c=this._analysisViewData.path?this._analysisViewData.path.vertices:[],f=this.vertexManipulators;m.resizeArray(f,c.length,()=>this._createVertexManipulator(),g=>this._removeVertexManipulator(g.manipulator));f.forEach((g,
k)=>{g.manipulator.metadata=c[k];g.manipulator.renderLocation=a.positionsRenderCoords[k]});"drawing"===this._toolState.polygonState&&d.isSome(this.cursorPoint)?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this.cursorPoint):this._cursorManipulator.available=!1};b._getFocusPoint=function(){const a=this.lastDraggedVertex;switch(this._toolState.polygonState){case "drawing":return d.isSome(this.cursorPoint)?this.cursorPoint:d.isSome(a)?this._analysisViewData.path.getVertexPositionAsPoint(a):
d.unwrap(this._analysisViewData.path.lastPoint);case "editing":return d.isSome(a)?this._analysisViewData.path.getVertexPositionAsPoint(a):null;default:return this.cursorPoint}};b._updateLaserLine=function(){var a=this._style.laserLineEnabled&&"measured"!==this._toolState.polygonState&&this._toolState.active;const c=this._getFocusPoint();a&&d.isSome(c)?(a=this._tempHandlePosition,this._view.renderCoordsHelper.toRenderCoords(c,a),this._laserLine.heightManifoldTarget=a):this._laserLine.heightManifoldTarget=
null};b._initializeListeners=function(){this._listenerHandles=new r;this._listenerHandles.add([h.react(()=>this._toolState.polygonState,()=>this._updateLaserLine()),h.react(()=>this._analysisVisualization.viewData,()=>this._updateAll(this._analysisVisualization.viewData),h.sync),h.react(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.cursorPoint}),()=>this._updateLaserLine()),h.react(()=>this._toolState.active,()=>this._updateAll(this._analysisVisualization.viewData))])};
b._destroyListeners=function(){this._listenerHandles=d.destroyMaybe(this._listenerHandles)};n._createClass(e,[{key:"state",get:function(){return this._state}},{key:"analysisVisualization",get:function(){return this._analysisVisualization}},{key:"analysisView",get:function(){return this._analysisView}},{key:"validMeasurement",get:function(){return"ready"!==this.state?!1:this._analysisViewData.validMeasurement}},{key:"path",get:function(){return"ready"!==this.state?null:this._analysisViewData.path}},
{key:"requiresCursorPoint",get:function(){return("initial"===this._toolState.polygonState||"drawing"===this._toolState.polygonState)&&this._toolState.active}},{key:"visible",get:function(){return this._visible},set:function(a){a?this.show():this.hide()}},{key:"mode",get:function(){return this._mode},set:function(a){switch(this._state){case "pending":this._mode=a;break;case "ready":this._mode=a,this._analysisViewData.mode=a}}},{key:"cursorPoint",get:function(){return this._cursorPoint},set:function(a){switch(this._state){case "pending":this._cursorPoint=
a;break;case "ready":this._cursorPoint=a,this._analysisViewData.cursorPoint=a}}},{key:"lastDraggedVertex",get:function(){return this._lastDraggedVertex},set:function(a){switch(this._state){case "pending":this._lastDraggedVertex=a;break;case "ready":this._lastDraggedVertex=a,this._analysisViewData.lastDraggedVertex=a}}},{key:"testData",get:function(){const a=this._laserLine.testData;return{labels:this._analysisVisualization.testData.labels,laserLineRenderer:d.isSome(a)?{heightManifoldEnabled:a.heightManifoldEnabled,
heightManifoldTarget:a.heightManifoldTarget,pointDistanceEnabled:a.pointDistanceEnabled,pointDistanceOrigin:a.pointDistanceOrigin,pointDistanceTarget:a.pointDistanceTarget,lineVerticalPlaneEnabled:a.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}}]);return e}();l._handleGeometry=w.createSphereGeometry(1,32,32);(function(e){e.PickRequest=function(){};e.PickResult=function(b=
null,a=null,c=null){this.type=b;this.scenePoint=a;this.mapPoint=c}})(l||(l={}));return l});
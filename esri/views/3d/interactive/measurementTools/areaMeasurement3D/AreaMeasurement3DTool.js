// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Handles ../../../../../core/Logger ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../layers/graphics/hydratedFeatures ../../editingTools/dragEventPipeline3D ./AreaMeasurement3DView ../support/measurementUtils ../../../../interactive/dragEventPipeline ../../../../interactive/InteractiveToolBase ../../../../support/screenUtils".split(" "),
function(q,g,D,e,l,r,h,L,M,N,E,t,F,u,v,G,H,w){const x=e.getLogger("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool");e=function(y){function m(a){a=y.call(this,a)||this;a._handles=new D;a._tempPickRequest=new u.PickRequest;a.polygonState="initial";return a}q._inheritsLoose(m,y);var b=m.prototype;b.initialize=function(){this.measurementView=new u({view:this.view,analysis:this.analysis,toolState:this,manipulators:this.manipulators});this.measurementView.when().then(()=>
this._initialize())};b._initialize=function(){this.destroyed?x.error("Calling _initialized() on destroyed AreaMeasurement3DTool."):(this._setupManipulators(),this.visible&&this.measurementView.show(),this._handles.add(r.react(()=>this.state,a=>{"measured"===a?this.complete():this.finishToolCreation()},r.sync)),"measured"===this.state?this.complete():this.startToolCreation())};b.destroy=function(){this.attached&&this.detach();this.measurementView.destroy();this._set("measurementView",null);this._handles=
l.destroyMaybe(this._handles)};b.onShow=function(){this.created&&this.measurementView.show()};b.onHide=function(){this.created&&this.measurementView.hide()};b.onDetach=function(){switch(this.toolState){case "created":case "creating":this.measurementView.path&&this.measurementView.path.clear(),this.measurementView.cursorPoint=null,this.polygonState="initial"}};b.onInputEvent=function(a){switch(a.type){case "immediate-double-click":this._handleImmediateDoubleClick(a);break;case "immediate-click":this._handleImmediateClick(a);
break;case "pointer-move":this._handlePointerMove(a);break;case "drag":this._handleDrag(a);break;case "key-down":this._handleKeyDown(a)}};b._setupManipulators=function(){let a=0;const d=c=>f=>{"start"===f.action&&(a++,this.measurementView.lastDraggedVertex=l.unwrap(this.measurementView.manipulatorToVertex(c)),"measured"===this.polygonState&&(this.polygonState="editing"));return f},n=()=>c=>"end"===c.action?(a--,0===a&&"editing"===this.polygonState&&(this.polygonState="measured"),null):c,C=(c,f)=>
{this._handles.add([G.createManipulatorDragEventPipeline(f,(k,I,J)=>{const z=F.hideManipulatorWhileDragging(k),p=l.unwrap(this.measurementView.manipulatorToVertex(k));I.next(d(k)).next(z).next(n()).next(this.measurementView.screenToMap3D()).next(A=>{k.location=A.mapEnd;this.measurementView.path.setVertexPosition(p,t.clonePoint(A.mapEnd))});const B=t.clonePoint(this.measurementView.path.getVertexPositionAsPoint(p));J.next(z).next(()=>{this.measurementView.path.setVertexPosition(p,B);k.location=B})})],
`manipulator-${c}`)},K=c=>{this._handles.remove(`manipulator-${c}`)};this.manipulators.forEach(({id:c,manipulator:f})=>{C(c,f)});this._handles.add([this.manipulators.on("after-add",({item:{id:c,manipulator:f}})=>{C(c,f)}),this.manipulators.on("after-remove",({item:{id:c}})=>{K(c)})])};b._handleImmediateDoubleClick=function(a){v.isPrimaryPointerAction(a)&&("drawing"===this.polygonState&&this.measurementView.finishMeasurement(),a.stopPropagation())};b._handleDrag=function(a){"editing"===this.polygonState&&
a.stopPropagation()};b._handleImmediateClick=function(a){if(v.isPrimaryPointerAction(a)){var d=w.createScreenPointFromEvent(a);if(this.active)switch(this.polygonState){case "initial":if(this._addVertexAt(d)){this.measurementView.cursorPoint=null;this.polygonState="drawing";a.stopPropagation();return}break;case "drawing":{const n=this.measurementView.vertexHandleAt(d,a.pointerType);if(l.isNone(n)){if(this._addVertexAt(d)){this.measurementView.cursorPoint=null;a.stopPropagation();return}}else 0===n.index&&
(this.measurementView.finishMeasurement(),a.stopPropagation())}}"mouse"===a.pointerType&&this._hoverAt(d)}};b._handlePointerMove=function(a){"mouse"===a.pointerType&&(a=w.createScreenPointFromEvent(a),this._hoverAt(a))};b._handleKeyDown=function(a){"Enter"===a.key&&"drawing"===this.polygonState&&(this.measurementView.finishMeasurement(),a.stopPropagation())};b._hoverAt=function(a){this.measurementView.requiresCursorPoint?(a=this._pick(a),a.mapPoint&&(this.measurementView.cursorPoint=a.mapPoint)):
this.measurementView.cursorPoint=null};b._addVertexAt=function(a){a=this._pick(a);return a.mapPoint?(this.measurementView.path.add(a.mapPoint),!0):!1};b._pick=function(a){const d=this._tempPickRequest;d.screenPoint=a;return this.measurementView.pick(d)};q._createClass(m,[{key:"state",get:function(){var a,d;switch(this.polygonState){case "initial":return 1<=(null==(a=this.measurementView)?void 0:null==(d=a.path)?void 0:d.numVertices)?"measuring":"ready";case "drawing":case "editing":return"measuring";
case "measured":return"measured"}}},{key:"cursor",get:function(){return this.destroyed?(x.error("Can't query the cursor of a destroyed tool."),null):!this.active||"initial"!==this.polygonState&&"drawing"!==this.polygonState?null:"crosshair"}}]);return m}(H.InteractiveToolBase);g.__decorate([h.property({readOnly:!0})],e.prototype,"state",null);g.__decorate([h.property()],e.prototype,"polygonState",void 0);g.__decorate([h.property({readOnly:!0})],e.prototype,"cursor",null);g.__decorate([h.property()],
e.prototype,"measurementView",void 0);g.__decorate([h.property({constructOnly:!0})],e.prototype,"view",void 0);g.__decorate([h.property()],e.prototype,"analysis",void 0);return e=g.__decorate([E.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],e)});
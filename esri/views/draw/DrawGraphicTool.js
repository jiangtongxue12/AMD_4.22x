// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../Graphic ../../core/has ../../core/Evented ../../core/HandleOwner ../../core/handleUtils ../../core/maybe ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../layers/GraphicsLayer ./support/createUtils ./support/surfaceCoordinateSystems ../interactive/InteractiveToolBase".split(" "),function(c,v,f,w,E,y,z,A,h,
g,F,G,B,C,l,x,D){c.DrawGraphicTool=function(q){function t(a){a=q.call(this,a)||this;a._graphic=null;a.defaultZ=0;a.geometryType=null;a.hasZ=!0;a.mode=null;a.snappingManager=null;a.snapToScene=!1;return a}v._inheritsLoose(t,q);var e=t.prototype;e.initialize=function(){this.internalGraphicsLayer=new C({listMode:"hide",internal:!0});this.view.map.layers.add(this.internalGraphicsLayer);this.drawOperation=this.makeDrawOperation();this.handles.add([this.drawOperation.on("vertex-add",a=>this.onVertexAdd(a)),
this.drawOperation.on("vertex-remove",a=>this.onVertexRemove(a)),this.drawOperation.on("vertex-update",a=>this.onVertexUpdate(a)),this.drawOperation.on("cursor-update",a=>this.onCursorUpdate(a)),this.drawOperation.on("complete",a=>this.onComplete(a))]);this.complete()};e.destroy=function(){this.drawOperation=h.destroyMaybe(this.drawOperation);this._destroyAllVisualisations();this.view.map.remove(this.internalGraphicsLayer);this.internalGraphicsLayer=h.destroyMaybe(this.internalGraphicsLayer);this._set("view",
null)};e.completeCreateOperation=function(){this.drawOperation.complete()};e.onInputEvent=function(a){this.drawOperation.onInputEvent(a)};e.redo=function(){this.drawOperation.redo()};e.reset=function(){};e.undo=function(){this.drawOperation.undo()};e._createGraphic=function(a){this._graphic=new w({geometry:a,symbol:this.graphicSymbol});this.internalGraphicsLayer.add(this._graphic);this.handles.add(this.initializeGraphic(this._graphic));this.notifyChange("graphic");this.handles.add(A.makeHandle(()=>
{h.isSome(this._graphic)&&(this.internalGraphicsLayer.remove(this._graphic),this._graphic=h.destroyMaybe(this._graphic))}),"create-operation-graphic")};e._destroyAllVisualisations=function(){this.handles.remove(n.outline);this.handles.remove(n.regularVertices);this.handles.remove(n.activeVertex);this.handles.remove("create-operation-graphic")};e._getCreateOperationGeometry=function(a={operationComplete:!1}){if(null==this.drawOperation||0===this.drawOperation.numVertices)return null;var b=this.drawOperation.stagedVertex,
d=this.drawOperation.committedVertices;const k=d.slice();h.isSome(b)&&k.push(this.drawOperation.coordinateHelper.pointToArray(b));var p=h.isSome(b)?this.drawOperation.coordinateHelper.pointToArray(b):d.splice(-1)[0];b={regularVertices:null,activeVertex:null,full:null,outline:null};const m=k.length,r=this.drawOperation.spatialReference,u="3d"===this.view.type&&"global"===this.view.viewingMode;switch(this.geometryType){case "point":b.regularVertices=d;b.activeVertex=p;b.full=this.drawOperation.coordinateHelper.arrayToPoint(k[0]);
break;case "multipoint":b.regularVertices=d;b.activeVertex=p;0<m&&(b.full=l.createMultipoint(k,r));break;case "polyline":b.regularVertices=d;b.activeVertex=p;0<m&&(b.full=l.createPolyline([k],r,u));break;case "polygon":b.regularVertices=d;b.activeVertex=p;0<m&&(b.full=l.createPolygon([k],r,u,!0));break;case "circle":0<m&&(d=x.createViewAlignedCoordinateSystem(this.view,k[0]),1===m&&a.operationComplete?(a=k[0],p=d.makeMapPoint(a[0]+48*this.view.resolution,a[1]),b.full=l.createCircle([a,p],d,!0)):2===
m&&(b.full=this.forceUniformSize?l.createCircle(k,d,this.centered):l.createEllipse(k,d,this.centered)));break;case "rectangle":0<m&&(d=x.createViewAlignedCoordinateSystem(this.view,k[0]),1===m&&a.operationComplete?(a=k[0],p=d.makeMapPoint(a[0]+48*this.view.resolution,a[1]),b.full=l.createSquare([a,p],d,!0)):2===m&&(b.full=this.forceUniformSize?l.createSquare(k,d,this.centered):l.createRectangle(k,d,this.centered)));break;default:return null}switch(this.geometryType){case "polyline":case "polygon":1<
m&&(b.outline=l.createPolyline([k],r,u));break;case "circle":case "rectangle":h.isSome(b.full)&&"polygon"===b.full.type&&(b.outline=l.createPolygon(b.full.rings,r,u))}return b};e.initializeGraphic=function(a){return null};e.onComplete=function(a){this._updateGraphic();let b=null;if(this.drawOperation.isCompleted){const d=this._getCreateOperationGeometry({operationComplete:!0});h.isSome(d)&&(b=new w({geometry:d.full,symbol:this.graphicSymbol,sourceLayer:this.internalGraphicsLayer,...this.graphicProperties}))}this.emit("complete",
{graphic:b,...a})};e.onCursorUpdate=function(a){this._updateGraphic();this.emit("cursor-update",a)};e.onDeactivate=function(){this.drawOperation.isCompleted||this.drawOperation.cancel()};e.onVertexAdd=function(a){this._updateGraphic();this.emit("vertex-add",a)};e.onVertexRemove=function(a){this._updateGraphic();this.emit("vertex-remove",a)};e.onVertexUpdate=function(a){this._updateGraphic();this.emit("vertex-update",a)};e._updateGraphic=function(){const a=this._getCreateOperationGeometry();h.isNone(a)?
this._destroyAllVisualisations():(h.isSome(a.outline)?this.handles.add(this.onOutlineChanged(a.outline),n.outline):this.handles.remove(n.outline),h.isSome(a.regularVertices)?this.handles.add(this.onRegularVerticesChanged(a.regularVertices),n.regularVertices):this.handles.remove(n.regularVertices),h.isSome(a.activeVertex)?this.handles.add(this.onActiveVertexChanged(a.activeVertex),n.activeVertex):this.handles.remove(n.activeVertex),h.isSome(a.full)?h.isNone(this._graphic)?this._createGraphic(a.full):
this._graphic.geometry=a.full:this.handles.remove("create-operation-graphic"))};v._createClass(t,[{key:"canRedo",get:function(){return this.drawOperation.canRedo}},{key:"canUndo",get:function(){return this.drawOperation.canUndo}},{key:"centered",set:function(a){this._set("centered",a);this._updateGraphic()}},{key:"enabled",set:function(a){this.drawOperation.interactive=a;this._set("enabled",a)}},{key:"forceUniformSize",set:function(a){this._set("forceUniformSize",a);this._updateGraphic()}},{key:"graphic",
get:function(){return this._graphic}},{key:"graphicSymbol",set:function(a){this._set("graphicSymbol",a);h.isSome(this._graphic)&&(this._graphic.symbol=a)}},{key:"updating",get:function(){var a,b;return null!=(a=null==(b=this.drawOperation)?void 0:b.updating)?a:!1}}]);return t}(z.HandleOwnerMixin(y.EventedMixin(D.InteractiveToolBase)));f.__decorate([g.property({value:!0})],c.DrawGraphicTool.prototype,"centered",null);f.__decorate([g.property({nonNullable:!0})],c.DrawGraphicTool.prototype,"defaultZ",
void 0);f.__decorate([g.property()],c.DrawGraphicTool.prototype,"drawOperation",void 0);f.__decorate([g.property({value:!0})],c.DrawGraphicTool.prototype,"enabled",null);f.__decorate([g.property({value:!0})],c.DrawGraphicTool.prototype,"forceUniformSize",null);f.__decorate([g.property({constructOnly:!0})],c.DrawGraphicTool.prototype,"geometryType",void 0);f.__decorate([g.property()],c.DrawGraphicTool.prototype,"graphic",null);f.__decorate([g.property({constructOnly:!0})],c.DrawGraphicTool.prototype,
"graphicProperties",void 0);f.__decorate([g.property()],c.DrawGraphicTool.prototype,"graphicSymbol",null);f.__decorate([g.property({constructOnly:!0})],c.DrawGraphicTool.prototype,"hasZ",void 0);f.__decorate([g.property({constructOnly:!0})],c.DrawGraphicTool.prototype,"mode",void 0);f.__decorate([g.property()],c.DrawGraphicTool.prototype,"snappingManager",void 0);f.__decorate([g.property()],c.DrawGraphicTool.prototype,"snapToScene",void 0);f.__decorate([g.property({readOnly:!0})],c.DrawGraphicTool.prototype,
"type",void 0);f.__decorate([g.property({readOnly:!0})],c.DrawGraphicTool.prototype,"updating",null);f.__decorate([g.property({constructOnly:!0,nonNullable:!0})],c.DrawGraphicTool.prototype,"view",void 0);c.DrawGraphicTool=f.__decorate([B.subclass("esri.views.draw.DrawGraphicTool")],c.DrawGraphicTool);const n={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};c.geometryTypeToDrawOperationGeometryType=function(q){switch(q){case "point":case "polyline":case "polygon":case "multipoint":return q;
case "circle":case "rectangle":return"segment";default:return null}};Object.defineProperty(c,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../geometry ../../../../core/Logger ../../../../core/mathUtils ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/RandomLCG ../../../../geometry/support/spatialReferenceUtils ../../../../geometry/Extent".split(" "),function(B,D,X,N,O,E,P,J,Q,R){function F(){F=D._asyncToGenerator(function*(a,c,f){const b=performance.now();var d=S(a,c);const g=performance.now();d=T(a,d,c.width,c.height);c=performance.now();var h=
K(d,!0);d=performance.now();h=L(h);const e=performance.now();a.profile&&U.info("createStreamlinesMesh profile",{"_createFlowFieldFromData()":Math.round(g-b),"_getStreamlines()":Math.round(c-g),"createAnimatedLinesData()":Math.round(d-c),"createLinesMesh()":Math.round(e-d),"Total elapsed time":Math.round(e-b)});yield Promise.resolve();P.throwIfAborted(f);return h});return F.apply(this,arguments)}function S(a,c){const f=V(c.data,c.width,c.height,a.smoothing);return a.interpolate?(b,d)=>{const g=Math.floor(b),
h=Math.floor(d);if(0>g||g>=c.width||0>h||h>=c.height)return[0,0];b-=g;d-=h;const e=g<c.width-1?g+1:g,l=h<c.height-1?h+1:h;return[(f[2*(h*c.width+g)]*(1-d)+f[2*(l*c.width+g)]*d)*(1-b)+(f[2*(h*c.width+e)]*(1-d)+f[2*(l*c.width+e)]*d)*b,(f[2*(h*c.width+g)+1]*(1-d)+f[2*(l*c.width+g)+1]*d)*(1-b)+(f[2*(h*c.width+e)+1]*(1-d)+f[2*(l*c.width+e)+1]*d)*b]}:(b,d)=>{b=Math.round(b);d=Math.round(d);return 0>b||b>=c.width||0>d||d>=c.height?[0,0]:[f[2*(d*c.width+b)],f[2*(d*c.width+b)+1]]}}function W(a,c,f,b,d,g,h,
e,l){const p=[];let k=0;p.push({x:f,y:b,t:k});for(let y=0;y<a.verticesPerLine;y++){let [v,w]=c(f,b);v*=a.velocityScale;w*=a.velocityScale;var m=Math.sqrt(v*v+w*w);if(m<a.minSpeedThreshold)break;const t=v/m,x=w/m;f+=t*a.segmentLength;b+=x*a.segmentLength;k+=a.segmentLength/m;if(Math.acos(t*n+x*u)>a.maxTurnAngle)break;if(a.mergeLines){var n=Math.round(f*l);var u=Math.round(b*l);if(0>n||n>h-1||0>u||u>e-1)break;m=g[u*h+n];if(-1!==m&&m!==d)break;g[u*h+n]=d}p.push({x:f,y:b,t:k});n=t;u=x}return p}function T(a,
c,f,b){const d=[],g=new J,h=1/Math.max(a.lineCollisionWidth,1),e=Math.round(f*h),l=Math.round(b*h),p=new Int32Array(e*l);for(var k=0;k<p.length;k++)p[k]=-1;k=[];for(let m=0;m<b;m+=a.lineSpacing)for(let n=0;n<f;n+=a.lineSpacing)k.push({x:n,y:m,sort:g.getFloat()});k.sort((m,n)=>m.sort-n.sort);for(const {x:m,y:n}of k)g.getFloat()<a.density&&(f=W(a,c,m,n,d.length,p,e,l,h),2>f.length||d.push(f));return d}function V(a,c,f,b){if(0===b)return a;const d=Math.round(3*b),g=Array(2*d+1);var h=0;for(var e=-d;e<=
d;e++){var l=Math.exp(-e*e/(b*b));g[e+d]=l;h+=l}for(b=-d;b<=d;b++)g[b+d]/=h;h=new Float32Array(a.length);for(b=0;b<f;b++)for(e=0;e<c;e++){var p=l=0;for(var k=-d;k<=d;k++)if(!(0>e+k||e+k>=c)){var m=g[k+d];l+=m*a[2*(b*c+(e+k))];p+=m*a[2*(b*c+(e+k))+1]}h[2*(b*c+e)]=l;h[2*(b*c+e)+1]=p}a=new Float32Array(a.length);for(b=0;b<c;b++)for(e=0;e<f;e++){p=l=0;for(k=-d;k<=d;k++)0>e+k||e+k>=f||(m=g[k+d],l+=m*h[2*((e+k)*c+b)],p+=m*h[2*((e+k)*c+b)+1]);a[2*(e*c+b)]=l;a[2*(e*c+b)+1]=p}return a}function K(a,c){const f=
new J;var b=a.reduce((e,l)=>e+l.length,0);b=new Float32Array(3*b);const d=Array(a.length);let g=0,h=0;for(const e of a){a=g;for(const l of e)b[3*g]=l.x,b[3*g+1]=l.y,b[3*g+2]=l.t,g++;d[h++]={startVertex:a,numberOfVertices:e.length,totalTime:e[e.length-1].t,timeSeed:c?f.getFloat():0}}return{lineVertices:b,lineDescriptors:d}}function L(a,c=10){function f(n,u,y,v,w,t,x){const q=8*l;let r=0;e[q+r++]=n;e[q+r++]=u;e[q+r++]=1;e[q+r++]=y;e[q+r++]=t;e[q+r++]=x;e[q+r++]=v;e[q+r++]=w;l++;e[q+r++]=n;e[q+r++]=
u;e[q+r++]=-1;e[q+r++]=y;e[q+r++]=t;e[q+r++]=x;e[q+r++]=-v;e[q+r++]=-w;l++}const {lineVertices:b,lineDescriptors:d}=a;var g=a=0;for(var h of d)a+=2*h.numberOfVertices,g+=6*(h.numberOfVertices-1);const e=new Float32Array(8*a);h=new Uint32Array(g);let l=0;a=0;for(const n of d){const {totalTime:u,timeSeed:y}=n;let v=g=null,w=null;var p=null,k=null;for(let t=0;t<n.numberOfVertices;t++){const x=b[3*(n.startVertex+t)],q=b[3*(n.startVertex+t)+1],r=b[3*(n.startVertex+t)+2];let z=null,A=null;var m=null;let C=
null;0<t&&(z=x-g,A=q-v,m=Math.sqrt(z*z+A*A),z/=m,A/=m,1<t?(p=z+p,k=A+k,m=Math.sqrt(p*p+k*k),p/=m,k/=m,m=Math.min(1/(p*z+k*A),c),p*=m,k*=m,m=-k,C=p):(m=-A,C=z),null!==m&&null!==C&&(f(g,v,w,m,C,u,y),h[a++]=l-2,h[a++]=l,h[a++]=l-1,h[a++]=l,h[a++]=l+1,h[a++]=l-1));g=x;v=q;w=r;p=z;k=A}f(g,v,w,-k,p,u,y)}return{vertexData:e,indexData:h}}function M(a,c){const f=c.pixels,{width:b,height:d}=c;c=new Float32Array(b*d*2);if("vector-uv"===a)for(a=0;a<b*d;a++)c[2*a]=f[0][a],c[2*a+1]=-f[1][a];else if("vector-magdir"===
a)for(a=0;a<b*d;a++){const g=f[0][a],h=O.deg2rad(f[1][a]),e=Math.sin(h-Math.PI/2);c[2*a]=Math.cos(h-Math.PI/2)*g;c[2*a+1]=e*g}return{data:c,width:b,height:d}}function G(){G=D._asyncToGenerator(function*(a,c,f,b,d){var g=Q.getInfo(c.spatialReference);if(!g)return H(a,c,f,b,d);const [h,e]=g.valid;g=Math.ceil(c.width/(e-h));const l=c.width/g,p=Math.round(f/g);let k=c.xmin;const m=[];for(let n=0;n<g;n++){const u=new R({xmin:k,xmax:k+l,ymin:c.ymin,ymax:c.ymax,spatialReference:c.spatialReference});m.push(H(a,
u,p,b,d));k+=l}c=yield Promise.all(m);b={data:new Float32Array(f*b*2),width:f,height:b};a=0;for(const n of c){for(c=0;c<n.height;c++)for(d=0;d<n.width;d++)a+d>=f||(b.data[2*(c*f+a+d)]=n.data[2*(c*n.width+d)],b.data[2*(c*f+a+d)+1]=n.data[2*(c*n.width+d)+1]);a+=n.width}return b});return G.apply(this,arguments)}function H(a,c,f,b,d){return I.apply(this,arguments)}function I(){I=D._asyncToGenerator(function*(a,c,f,b,d){if("imagery"===a.type){yield a.load({signal:d});var g=a.rasterInfo.dataType;a=yield a.fetchImage(c,
f,b,{signal:d});return!a||E.isNone(a.pixelData)||E.isNone(a.pixelData.pixelBlock)?{data:new Float32Array(f*b*2),width:f,height:b}:M(g,a.pixelData.pixelBlock)}yield a.load({signal:d});g=a.rasterInfo.dataType;a=yield a.fetchPixels(c,f,b,{signal:d});return!a||E.isNone(a.pixelBlock)?{data:new Float32Array(f*b*2),width:f,height:b}:M(g,a.pixelBlock)});return I.apply(this,arguments)}const U=N.getLogger("esri.views.2d.engine.flow.dataUtils");B.createAnimatedLinesData=K;B.createLinesMesh=L;B.createStreamlinesMesh=
function(a,c,f){return F.apply(this,arguments)};B.fetchPart=H;B.loadImagery=function(a,c,f,b,d){return G.apply(this,arguments)};Object.defineProperty(B,"__esModule",{value:!0})});
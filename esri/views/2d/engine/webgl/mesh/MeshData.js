// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../tiling/PagedTileQueue ../../../tiling/TileInfoView ../../../tiling/TileKey ../../../tiling/TileQueue ../../../tiling/TileStrategy ../definitions ../DisplayId ../enums ../Utils ./VertexDataWriter ../../../layers/features/support/tileUtils".split(" "),function(q,x,r,B,y,C,D,p,z,h,t,u,A){function v(l){switch(l){case 1:case 8:case 32:return-1;case 2:case 64:return 0;case 4:case 16:case 128:return 1}}function w(l){switch(l){case 1:case 2:case 4:return-1;
case 8:case 16:return 0;case 32:case 64:case 128:return 1}}r=function(){function l(a,c,b,d,e){this.hasRecords=this._hasAggregate=!1;this._data={self:new Map,neighbors:[]};this._current={geometryType:0,writer:null,overlaps:0,start:0,insertAfter:0,sortKey:0,id:0,materialKey:0,indexStart:0,vertStart:0,isDotDensity:!1,bufferingEnabled:!1,metricBoxLenPointer:0};this.hint=c;this.tileKey=a;this._hasAggregate=d;this._pixelBufferEnabled=e;this._strideOptions=b}var f=l.prototype;f.serialize=function(a){const c=
[];c.push(this._serializeTileVertexData(this.tileKey,this.tileKey,this._data.self));this._data.neighbors.forEach((b,d)=>{var e=1<<d;d=v(e);e=w(e);d=A.getPow2NeighborKey(new y(this.tileKey),d,e,a);d=this._serializeTileVertexData(this.tileKey,d.id,b.vertexData);d.message.bufferIds=b.displayIds;c.push(d)});return c};f._serializeTileVertexData=function(a,c,b){var d,e,k,m,n;const g=[];b={[h.WGLGeometryType.MARKER]:null==(d=b.get(h.WGLGeometryType.MARKER))?void 0:d.serialize(g),[h.WGLGeometryType.FILL]:null==
(e=b.get(h.WGLGeometryType.FILL))?void 0:e.serialize(g),[h.WGLGeometryType.LINE]:null==(k=b.get(h.WGLGeometryType.LINE))?void 0:k.serialize(g),[h.WGLGeometryType.TEXT]:null==(m=b.get(h.WGLGeometryType.TEXT))?void 0:m.serialize(g),[h.WGLGeometryType.LABEL]:null==(n=b.get(h.WGLGeometryType.LABEL))?void 0:n.serialize(g)};return{message:{tileKeyOrigin:a,tileKey:c,data:b},transferList:g}};f.featureStart=function(a,c){this._current.insertAfter=a;this._current.sortKey=c};f.featureEnd=function(){};f.recordStart=
function(a,c,b,d){this._current.writer=this._getVertexWriter(b);this._current.overlaps=0;this._current.indexStart=this._current.writer.indexCount;this._current.vertStart=this._current.writer.vertexCount;this._current.bufferingEnabled=d;this._current.id=a;this._current.materialKey=c;this._current.geometryType=b;this._current.isDotDensity=!1;this._current.writer.recordStart()};f.recordCount=function(){return this._current.writer.recordCount};f.vertexCount=function(){return this._current.writer.vertexCount};
f.indexCount=function(){return this._current.writer.indexCount};f.vertexEnsureSize=function(a){this._current.writer.vertexEnsureSize(a)};f.indexEnsureSize=function(a){this._current.writer.indexEnsureSize(a)};f.vertexBounds=function(a,c,b,d){this._current.bufferingEnabled&&this._addOverlap(a,c,b,d)};f.vertexWrite=function(a){this._current.writer.writeVertex(a)};f.vertexWriteF32=function(a){this._current.writer.writeVertexF32(a)};f.vertexEnd=function(){};f.vertexWriter=function(){return this._current.writer.vertexWriter};
f.indexWrite=function(a){this._current.writer.writeIndex(a)};f.indexWriter=function(){return this._current.writer.indexWriter};f.metricWriter=function(){return this._current.writer.metricWriter};f.metricStart=function(a,c,b,d,e,k,m,n){this._current.writer=this._getVertexWriter(h.WGLGeometryType.LABEL);const g=this._current.writer.metricWriter;g.push(z.getDisplayIdTexel(a));g.push(c);g.push(b);g.push(d);g.push(e);g.push(k);g.push(m);g.push(n);g.push(255);this._current.metricBoxLenPointer=g.push(0)};
f.metricEnd=function(){const a=this._current.writer.metricWriter;0===a.getValue(this._current.metricBoxLenPointer)&&a.seek(a.length-10)};f.metricBoxWrite=function(a,c,b,d){const e=this._current.writer.metricWriter;e.incr(this._current.metricBoxLenPointer);e.push(0);e.push(0);e.push(a);e.push(c);e.push(b);e.push(d)};f.recordEnd=function(){var a=this._current.indexStart,c=this._current.writer.indexCount;if(a===c)return!1;this.hasRecords=!0;var b=this._current.vertStart;this._current.writer.recordEnd(this._current.id,
this._current.materialKey,this._current.insertAfter,a,c-a,b,this._current.writer.vertexCount-b,this._current.sortKey);if(!this._pixelBufferEnabled||this._hasAggregate||0===this._current.overlaps||this._current.geometryType===h.WGLGeometryType.LABEL)return!0;a=this._current.writer;for(c=0;8>c;c++){var d=1<<c;if(this._current.overlaps&d){this._data.neighbors[c]||(this._data.neighbors[c]={vertexData:new Map,displayIds:new Set});b=this._data.neighbors[c];var e=this._current.geometryType;if(!b.vertexData.has(e)){var k=
t.getStrides(e,this._strideOptions).geometry;k=new u.VertexDataWriter(e,k,p.PATCH_PIXEL_BUFFER_ALLOC_SIZE);b.vertexData.set(e,k)}e=b.vertexData.get(this._current.geometryType);k=4096*-v(d);d=4096*-w(d);e.copyLastFrom(a,k,d);b.displayIds.add(this._current.id)}}return!0};f._addOverlap=function(a,c,b,d){this._current.overlaps|=255^((a<0+b?148:a>=p.TILE_SIZE-b?41:189)|(c<0+d?224:c>=p.TILE_SIZE-d?7:231))};f._getVertexWriter=function(a){if(!this._data.self.has(a)){const c=this._data.self,b=t.getStrides(a,
this._strideOptions).geometry;c.set(a,new u.VertexDataWriter(a,b,this.hint.records))}return this._data.self.get(a)};x._createClass(l,[{key:"hasAggregates",get:function(){return this._hasAggregate}},{key:"hasPixelBufferEnabled",get:function(){return this._pixelBufferEnabled}}]);return l}();q.MeshData=r;Object.defineProperty(q,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../../../renderers/ClassBreaksRenderer ../../../../renderers/DictionaryRenderer ../../../../renderers/DotDensityRenderer ../../../../renderers/HeatmapRenderer ../../../../renderers/Renderer ../../../../renderers/SimpleRenderer ../../../../renderers/UniqueValueRenderer ../../../../renderers/support/jsonUtils ../../../../core/Error ../../../../core/has ../../../../core/lang ../../../../core/Logger ../../../../core/maybe ../../../../core/screenUtils ../../../../symbols/support/jsonUtils ../../engine/webgl/enums ../../engine/webgl/Utils ../../engine/webgl/materialKey/MaterialKey ../../engine/webgl/util/vvFlagUtils ./support/pixelBuffering ./support/rendererUtils ../support/clusterUtils ../support/util".split(" "),
function(A,pa,qa,ra,sa,ta,P,ua,va,p,Q,R,S,u,H,T,x,U,m,V,W,X,Y,Z){function y(a){switch(a.type){case "line-marker":var b;return{type:"line-marker",color:null==(b=a.color)?void 0:b.toJSON(),placement:a.placement,style:a.style};default:return T.fromJSON(a.toJSON()).toJSON()}}function C(a){let b=0,c=0,d=!1,e=!0,f=!0;if(u.isSome(a)&&(c=W.getPtMaxVVSize(a),"visualVariables"in a&&(b=V.getVVFlags(a.visualVariables||[]),d="dot-density"===a.type),!d)){var g=a.getSymbols();"backgroundFillSymbol"in a&&a.backgroundFillSymbol&&
g.push(a.backgroundFillSymbol);for(const h of g)if("cim"===h.type&&(e=!1),"simple-fill"===h.type||"picture-fill"===h.type)if((a=h.outline)&&"none"!==a.style&&"solid"!==a.style&&(f=!1),a=a&&"none"!==a.style&&"solid"!==a.style,g="simple-fill"===h.type&&"none"!==h.style&&"solid"!==h.style,"picture-fill"===h.type||g||a)e=!1}d&&(f=!1);return{vvFlags:b,maxVVSize:c,supportsOutlineFills:f,stride:{fill:d?"dot-density":e?"simple":"default"}}}function F(a,b,c){return z(a,C(b),c)}function z(a,b,c){if(!a)return null;
switch(a.type){case "simple-fill":case "picture-fill":return aa(a,b,c);case "simple-marker":case "picture-marker":var d=m.createMaterialKey(x.WGLGeometryType.MARKER,b);c=c?m.hydrateMaterialKey(d):d;d=y(a);return a={materialKey:c,hash:a.hash(),...d,angle:a.angle,maxVVSize:b.maxVVSize};case "simple-line":return ba(a,b,c);case "text":return d=m.createMaterialKey(x.WGLGeometryType.TEXT,b),c=c?m.hydrateMaterialKey(d):d,d=y(a),a={materialKey:c,hash:a.hash(),...d,angle:a.angle,maxVVSize:b.maxVVSize};case "label":return d=
a.toJSON(),b=m.createMaterialKey(x.WGLGeometryType.LABEL,{...b,placement:d.labelPlacement}),a={materialKey:c?m.hydrateMaterialKey(b):b,hash:a.hash(),...d,labelPlacement:d.labelPlacement};case "cim":return{type:"cim",rendererKey:b.vvFlags,data:a.data,maxVVSize:b.maxVVSize};case "CIMSymbolReference":return{type:"cim",rendererKey:b.vvFlags,data:a,maxVVSize:b.maxVVSize};case "web-style":return{...y(a),type:"web-style",hash:a.hash(),rendererKey:b.vvFlags,maxVVSize:b.maxVVSize};default:throw Error(`symbol not supported ${a.type}`);
}}function aa(a,b,c){var d=m.createMaterialKey(x.WGLGeometryType.FILL,{...b,isOutlinedFill:b.supportsOutlineFills});d=c?m.hydrateMaterialKey(d):d;var e=a.clone();a=e.outline;b.supportsOutlineFills||(e.outline=null);e={materialKey:d,hash:e.hash(),isOutlinedFill:!!b.supportsOutlineFills,...y(e)};if(b.supportsOutlineFills)return e;d=[];d.push(e);a&&(b=m.createMaterialKey(x.WGLGeometryType.LINE,{...b,isOutline:!0}),c={materialKey:c?m.hydrateMaterialKey(b):b,hash:a.hash(),...y(a)},d.push(c));return{type:"composite-symbol",
layers:d,hash:d.reduce((f,g)=>g.hash+f,"")}}function ba(a,b,c){var d=m.createMaterialKey(x.WGLGeometryType.LINE,b);const e=c?m.hydrateMaterialKey(d):d;a=a.clone();d=a.marker;a.marker=null;const f=[];f.push({materialKey:e,hash:a.hash(),...y(a)});if(d){var g;b=m.createMaterialKey(x.WGLGeometryType.MARKER,b);c=c?m.hydrateMaterialKey(b):b;d.color=null!=(g=d.color)?g:a.color;f.push({materialKey:c,hash:d.hash(),lineWidth:a.width,...y(d)})}return{type:"composite-symbol",layers:f,hash:f.reduce((h,k)=>k.hash+
h,"")}}function ca(a,b){const c=a.labelPlacement;var d=da[b];if(!a.symbol)return B.warn("No ILabelClass symbol specified."),!0;if(!d)return B.error(new p("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${b} is not supported`)),!0;d.some(e=>e===c)||(d=d[0],c&&B.warn(`Found invalid label placement type ${c} for ${b}. Defaulting to ${d}`),a.labelPlacement=d);return!1}function I(a,b){a=R.clone(a);return a.some(c=>ca(c,b))?[]:a}function J(a,b=!1){try{var c,d;const e=
ea(a,b),f={};e.map(g=>{a:{switch(g.target){case "feature":K(f,L(a),g);g=void 0;break a;case "aggregate":if(!("featureReduction"in a)){g=void 0;break a}var h=a.featureReduction;if("selection"===h.type)throw new p("ValidationError","Mapview does not support `selection` reduction type",h);K(f,L(a),g);f.aggregate||(f.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:H.pt2px(h.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(H.pt2px(h.clusterMaxSize)/64),fields:g.aggregateFields}});
M(f.aggregate,g.attributes.fields);g=void 0;break a}g=void 0}return g});return{source:{definitionExpression:a.definitionExpression,fields:a.fields.map(g=>g.toJSON()),gdbVersion:a.gdbVersion,historicMoment:null==(c=a.historicMoment)?void 0:c.getTime(),outFields:a.availableFields,pixelBuffer:a.pixelBuffer,spatialReference:a.spatialReference.toJSON(),timeExtent:null==(d=a.timeExtent)?void 0:d.toJSON(),customParameters:a.customParameters},attributes:{fields:{},indexCount:0},processors:e,targets:f}}catch(e){if("ValidationError"===
e.fieldName)return B.error(e),null;throw e;}}function M(a,b){for(const c in b){const d=b[c];if(d.target!==a.name)continue;const e=a.attributes[c];e?(e.context.mesh=e.context.mesh||d.context.mesh,e.context.storage=e.context.storage||d.context.storage):a.attributes[c]=d}return a}function L(a){var b,c,d,e,f;return[null!=(b=null==(c=u.unwrap(a.filter))?void 0:c.toJSON())?b:null,null!=(d=null==(e=u.unwrap(null==(f=u.unwrap(a.featureEffect))?void 0:f.filter))?void 0:e.toJSON())?d:null]}function K(a,b,c){a.feature||
(a.feature={name:"feature",input:"source",filters:b,attributes:{}});M(a.feature,c.attributes.fields);return a}function q(a,b){return b.field?v(a,{...b,type:"field",field:b.field}):b.valueExpression?v(a,{...b,type:"expression",valueExpression:b.valueExpression}):{field:null,fieldIndex:null}}function v(a,b){switch(b.type){case "expression":var c=b.valueExpression;if(!a.fields[c]){var d=a.indexCount++;a.fields[c]={...b,name:c,fieldIndex:d}}return{fieldIndex:a.fields[c].fieldIndex};case "label-expression":return c=
JSON.stringify(b.label),a.fields[c]||(d=a.indexCount++,a.fields[c]={...b,name:c,fieldIndex:d}),{fieldIndex:a.fields[c].fieldIndex};case "field":c=b.field;if("aggregate"===b.target&&a.fields[c])return{field:c};a.fields[c]={...b,name:c};return{field:c};case "statistic":return a.fields[b.name]={...b},{field:b.name}}}function ea(a,b=!1){const c=[];let d=0;c.push(fa(a,d++,b));return c}function G(a,b,c,d,e,f=!1){b=v(b,{type:"label-expression",target:d,context:{mesh:!0},resultType:"string",label:{labelExpression:c.labelExpression,
labelExpressionInfo:c.labelExpressionInfo?{expression:c.labelExpressionInfo.expression}:null,symbol:!!c.symbol,where:c.where}});({fieldIndex:b}=b);return{...F(c,a,f),fieldIndex:b,target:d,index:e}}function fa(a,b,c=!1){const d={indexCount:0,fields:{}};var e="featureReduction"in a&&a.featureReduction;b=e?"aggregate":"feature";if("sublayers"in a){var f={type:"subtype",subtypeField:a.subtypeField,renderers:{},stride:{fill:"default"}},g={type:"subtype",mapping:{},target:"feature"},h={type:"subtype",classes:{}},
k={type:"symbol",target:"feature",aggregateFields:[],attributes:d,storage:g,mesh:{matcher:f,aggregateMatcher:null,labels:h,sortKey:null}};e=new Set;let r=0;for(const {renderer:n,subtypeCode:t,labelingInfo:D,labelsVisible:ha}of a.sublayers){a=E(d,b,n,c);var l=N(d,b,n),w=ha&&D;if("visualVariables"in n&&n.visualVariables&&n.visualVariables.length)throw new p("ValidationError","Visual variables are currently not supported for subtype layers");if("dictionary"===a.type)throw new p("ValidationError","Dictionary renderer is not supported in subtype layers");
if("subtype"===a.type)throw new p("ValidationError","Nested subtype renderers is not supported");if(u.isSome(l)&&"subtype"===l.type)throw new p("ValidationError","Nested subtype storage is not supported");if(u.isSome(l)&&"dot-density"===l.type)throw new p("ValidationError","Dot density attributes are not supported in subtype layers");if(e.has(t))throw new p("ValidationError","Subtype codes for sublayers must be unique");e.add(t);f.renderers[t]=a;g.mapping[t]=l;w&&(h.classes[t]=w.map(ia=>G(n,d,ia,
"feature",r++,c)))}return k}switch(a.renderer.type){case "heatmap":{const {blurRadius:r,fieldOffset:n,field:t}=a.renderer;return{type:"heatmap",aggregateFields:[],attributes:d,target:b,storage:null,mesh:{blurRadius:r,fieldOffset:n,field:q(d,{target:b,field:t,resultType:"numeric"}).field}}}default:{f=[];const r="aggregate"===b?Y.createClusterRenderer(f,a.renderer,e,null):a.renderer;O(d,f);g=E(d,b,r,c);k=null;h=N(d,b,r);l=Z.toJSONGeometryType(a.geometryType);w=a.labelsVisible&&a.labelingInfo||[];let n=
[];if(e){if("selection"===e.type)throw new p("ValidationError","Mapview does not support `selection` reduction type",e);e.symbol&&(k=new P({symbol:e.symbol,visualVariables:"visualVariables"in r?r.visualVariables:null}),k=E(d,b,k,c));n=e&&e.labelsVisible&&e.labelingInfo||[]}w=I(w,l);n=I(n,l);let t=0;e=[...w.map(D=>G(r,d,D,"feature",t++,c)),...n.map(D=>G(r,d,D,"aggregate",t++,c))];a=ja(d,a.orderBy);return{type:"symbol",target:b,attributes:d,aggregateFields:f,storage:h,mesh:{matcher:g,labels:{type:"simple",
classes:e},aggregateMatcher:k,sortKey:a}}}}}function ja(a,b){if(u.isNone(b)||!b.length)return null;1<b.length&&B.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${b.length}. All but the first will be discarded`);b=b[0];const c="ascending"===b.order?"asc":"desc";if(b.field)return{field:b.field,order:c};if(b.valueExpression)return{fieldIndex:v(a,{type:"expression",target:"feature",valueExpression:b.valueExpression,resultType:"numeric"}).fieldIndex,order:c};B.error(new p("ValidationError",
"Expected to find a field or valueExpression for OrderByInfo",b));return null}function O(a,b){const c={mesh:!0,storage:!0};for(const d of b){const {name:e,outStatistic:f}=d,{statisticType:g,onStatisticField:h}=f;let k=b=null,l=null;"onStatisticValueExpression"in f?k=v(a,{type:"expression",target:"feature",valueExpression:f.onStatisticValueExpression,resultType:"numeric"}).fieldIndex:"onStatisticNormalizationField"in f?(b=v(a,{type:"field",target:"feature",field:h,resultType:"numeric"}).field,l=f.onStatisticNormalizationField):
b=v(a,{type:"field",target:"feature",field:h,resultType:"numeric"}).field;v(a,{type:"statistic",target:"aggregate",name:e,context:c,inField:b,inNormalizationField:l,inFieldIndex:k,statisticType:g})}}function N(a,b,c){switch(c.type){case "dot-density":return ka(a,b,c.attributes);case "simple":case "class-breaks":case "unique-value":case "dictionary":return la(a,b,c.visualVariables);case "heatmap":return null}}function ka(a,b,c){return c&&c.length?{type:"dot-density",mapping:c.map((d,e)=>{const {field:f,
fieldIndex:g}=q(a,{valueExpression:d.valueExpression,field:d.field,resultType:"numeric",target:b});return{binding:e,field:f,fieldIndex:g}}),target:b}:{type:"dot-density",mapping:[],target:b}}function la(a,b,c){if(!c||!c.length)return{type:"visual-variable",mapping:[],target:b};const d={storage:!0};return{type:"visual-variable",mapping:X.simplifyVisualVariables(c).map(e=>{var f;const g=U.getVVType(e.type),{field:h,fieldIndex:k}=q(a,{target:b,valueExpression:e.valueExpression,field:e.field,context:d,
resultType:"numeric"});switch(e.type){case "size":return"$view.scale"===e.valueExpression?null:{type:"size",binding:g,field:h,fieldIndex:k,normalizationField:q(a,{target:b,field:e.normalizationField,context:d,resultType:"numeric"}).field,valueRepresentation:null!=(f=e.valueRepresentation)?f:null};case "color":return{type:"color",binding:g,field:h,fieldIndex:k,normalizationField:q(a,{target:b,field:e.normalizationField,context:d,resultType:"numeric"}).field};case "opacity":return{type:"opacity",binding:g,
field:h,fieldIndex:k,normalizationField:q(a,{target:b,field:e.normalizationField,context:d,resultType:"numeric"}).field};case "rotation":return{type:"rotation",binding:g,field:h,fieldIndex:k}}}).filter(e=>e),target:b}}function E(a,b,c,d=!1){a=u.unwrapOr(a,{indexCount:0,fields:{}});switch(c.type){case "simple":case "dot-density":return ma(a,c,d);case "class-breaks":return na(a,b,c,d);case "unique-value":return oa(a,b,c,d);case "dictionary":return{type:"dictionary",renderer:c.toJSON(),stride:{fill:"default"}}}}
function ma(a,b,c=!1){a=b.getSymbols();a=a.length?a[0]:null;const {stride:d}=C(b);return{type:"simple",symbol:F(a,b,c),stride:d}}function na(a,b,c,d=!1){const e=c.backgroundFillSymbol,{field:f,fieldIndex:g}=q(a,{target:b,field:c.field,valueExpression:c.valueExpression,resultType:"numeric",context:{mesh:!0,use:"renderer.field"}});b=c.normalizationType;b="log"===b?"esriNormalizeByLog":"percent-of-total"===b?"esriNormalizeByPercentOfTotal":"field"===b?"esriNormalizeByField":null;const h=C(c),k=c.classBreakInfos.map(l=>
({symbol:z(l.symbol,h,d),min:l.minValue,max:l.maxValue})).sort((l,w)=>l.min-w.min);return{type:"interval",attributes:a.fields,field:f,fieldIndex:g,backgroundFillSymbol:z(e,h,d),defaultSymbol:z(c.defaultSymbol,h,d),intervals:k,normalizationField:c.normalizationField,normalizationTotal:c.normalizationTotal,normalizationType:b,isMaxInclusive:c.isMaxInclusive,stride:h.stride}}function oa(a,b,c,d=!1){const e=[],f=c.backgroundFillSymbol;b={target:b,context:{mesh:!0},resultType:"string"};if(c.field&&"string"!==
typeof c.field)throw new p("ValidationError","Expected renderer.field to be a string",c);const {field:g,fieldIndex:h}=q(a,{...b,field:c.field,valueExpression:c.valueExpression}),k=C(c);for(const l of c.uniqueValueInfos)e.push({value:""+l.value,symbol:z(l.symbol,k,d)});return{type:"map",attributes:a.fields,field:g,fieldIndex:h,field2:q(a,{...b,field:c.field2}).field,field3:q(a,{...b,field:c.field3}).field,fieldDelimiter:c.fieldDelimiter,backgroundFillSymbol:z(f,k),defaultSymbol:z(c.defaultSymbol,k),
map:e,stride:k.stride}}const B=S.getLogger("esri.views.2d.layers.features.schemaUtils"),da={esriGeometryPoint:"above-right above-center above-left center-center center-left center-right below-center below-left below-right".split(" "),esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};A.addAggregateFields=O;A.createMatcherSchema=E;A.createSchema=function(a){Q("esri-2d-update-debug")&&console.debug("Created new schema",J(a,!0));return J(a)};
A.createSymbolSchema=F;A.createSymbolSchemaOptions=C;Object.defineProperty(A,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/HandleOwner ../../../../../core/has ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/arrayUtils ../../../../../core/accessorSupport/ensureType ../../../../../core/accessorSupport/decorators/subclass ../../../../../layers/graphics/featureConversionUtils ../../../../../layers/graphics/data/QueryEngine ../../../../../layers/support/FieldsIndex ../../../engine/webgl/DisplayId ../FeatureStore2D ../sources/createSource ../support/AttributeStore ../support/ClusterStore ../support/ComputedAttributeStorage ../support/FeatureSetReaderJSON ../support/UpdateToken ../../../../support/QueueProcessor".split(" "),
function(g,l,h,x,m,k,v,p,M,N,A,B,C,D,E,F,G,H,I,J,K,y,L){function q(n){if(!k.isAbortError(n)&&"worker:port-closed"!==n.name)throw n;}function z(n){return"feature"===n.type&&"snapshot"===n.mode}h=function(n){function w(){var a=n.apply(this,arguments)||this;a._storage=new J.ComputedAttributeStorage;a._markedIdsBufId=a._storage.createBitset();a._lastCleanup=performance.now();a._cleanupNeeded=!1;a._invalidated=!1;a._tileToResolver=new Map;a._didEdit=!1;a.tileStore=null;a.config=null;a.processor=null;a.remoteClient=
null;a.service=null;return a}g._inheritsLoose(w,n);var d=w.prototype;d.initialize=function(){this._initAttributeStore();this._initStores();this._initQueryEngine();this._initSource();this._updateQueue=new L.QueueProcessor({concurrency:"geoevent"===this._source.type?1:4,process:(a,b)=>this._onTileMessage(a,{signal:b})});this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),this.watch("updating",a=>!a&&this.onIdle())]);this._checkUpdating=setInterval(()=>this.notifyChange("updating"),
300)};d.startup=function(){var a=g._asyncToGenerator(function*(){this._initAttributeStore()});return function(){return a.apply(this,arguments)}}();d._initSource=function(){this._source=G.createSource(this.service,this.spatialReference,this.tileStore.tileScheme,(a,b)=>{this._invalidated=!0;return this._patchTile(a,b)},()=>50>this._updateQueue.length,this.featureStore);this._proxyEvents()};d._proxyEvents=function(){if("geoevent"===this._source.type){const a=this._source.events;this.handles.add([a.on("connectionStatus",
b=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:b}).catch(q)),a.on("errorString",b=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:b}).catch(q)),a.on("feature",b=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:b.attributes,centroid:b.centroid,geometry:b.geometry}}).catch(q)),a.on("updateRate",b=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...b}}).catch(q))])}};d._initAttributeStore=function(){this.attributeStore?
this.attributeStore.invalidateResources():this.attributeStore=new H({type:"remote",initialize:(a,b)=>k.ignoreAbortErrors(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.initialize",a,{signal:b}).catch(q)),update:(a,b)=>k.ignoreAbortErrors(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.requestUpdate",a,{signal:b}).catch(q)),render:a=>k.ignoreAbortErrors(this.remoteClient.invoke("tileRenderer.featuresView.requestRender",void 0,{signal:a}).catch(q))},this.config)};
d._initStores=function(){const a={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new F.FeatureStore2D(a,this._storage,"snapshot"===this.service.type?"snapshot":"on-demand");this.aggregateStore=new I.ClusterStore(a,this.spatialReference,this._storage);this.handles.add(this.aggregateStore.events.on("valueRangesChanged",b=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",
event:{valueRanges:b.valueRanges}}).catch(q)}))};d._initQueryEngine=function(){var a;const b=this;null==(a=this.queryEngine)?void 0:a.destroy();this.queryEngine=new C.default({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds(c){return b.aggregateStore.getFeatureDisplayIdsForAggregate(c).map(e=>
b.getObjectId(e))}},timeInfo:this.service.timeInfo})};d.destroy=function(){this._updateQueue.destroy();this._source.destroy();this.queryEngine.destroy();this.attributeStore&&this.attributeStore.destroy();for(const a of this.tileStore.tiles)this._source.unsubscribe(a);clearInterval(this._checkUpdating)};d.isUpdating=function(){return this._source.updating||!!this._updateQueue.length};d.enableEvent=function(a){this._source.enableEvent(a.name,a.value)};d.pause=function(){this._updateQueue.pause();this._updateQueue.clear()};
d.update=function(){var a=g._asyncToGenerator(function*(b,c){this._set("config",c);this._schema=c.schema;this._initQueryEngine();yield Promise.all([this._source.update(b,c.schema.source),this.featureStore.updateSchema(b,c.schema.targets.feature),this.attributeStore.update(b,c),this.attributeStore.updateFilters(b,this)]);yield this.aggregateStore.updateSchema(b,c.schema.targets.aggregate);x("esri-2d-update-debug")&&b.describe()});return function(b,c){return a.apply(this,arguments)}}();d.applyUpdate=
function(){var a=g._asyncToGenerator(function*(b){b.mesh&&this.clearTiles();this._updateQueue.resume();yield this._source.applyUpdate(b);this.notifyChange("updating");yield v.whenFalseOnce(this,"updating",!0);this.hasAggregates&&(yield k.after(10),yield v.whenFalseOnce(this,"updating",!0))});return function(b){return a.apply(this,arguments)}}();d.onEdits=function(){var a=g._asyncToGenerator(function*({edits:b}){x("esri-2d-update-debug")&&console.debug("Applying Edit:",b);this._didEdit=!0;try{const c=
b.removed.map(f=>f.objectId&&-1!==f.objectId?f.objectId:this._lookupObjectIdByGlobalId(f.globalId)),e=b.addOrModified.map(({objectId:f})=>f);this.featureStore.invalidate();yield this._source.edit(e,c);this.clearTiles();this.notifyChange("updating");this.aggregateStore.clear();yield this._source.resend();yield v.whenFalseOnce(this,"updating",!0)}catch(c){}});return function(b){return a.apply(this,arguments)}}();d.refresh=function(){var a=g._asyncToGenerator(function*(b){if(!b)return b=y.UpdateToken.empty(),
b.storage.filters=!0,this.applyUpdate(b);this.featureStore.invalidate();this.clearTiles();this._source.refresh();this._cleanupNeeded=!0;this.notifyChange("updating");yield v.whenFalseOnce(this,"updating",!0)});return function(b){return a.apply(this,arguments)}}();d.clearTiles=function(){for(const a of this.tileStore.tiles)this.processor.onTileClear(a)};d.onTileUpdate=function(a){this.aggregateStore.onTileUpdate(a);for(const b of a.added)this._source.subscribe(b),this._level=b.level;for(const b of a.removed)this._source.unsubscribe(b),
this._cleanupNeeded=!0,this._tileToResolver.has(b.id)&&(this._tileToResolver.get(b.id).resolve(),this._tileToResolver.delete(b.id));this.notifyChange("updating")};d.onIdle=function(){this._invalidated&&((this.hasAggregates||"heatmap"===this.processor.type)&&this._repushCurrentLevelTiles(),this._invalidated=!1);this._markAndSweep()};d.querySummaryStatistics=function(){var a=g._asyncToGenerator(function*({query:b,params:c}){return this.queryEngine.executeQueryForSummaryStatistics(b,c)});return function(b){return a.apply(this,
arguments)}}();d.queryUniqueValues=function(){var a=g._asyncToGenerator(function*({query:b,params:c}){return this.queryEngine.executeQueryForUniqueValues(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryClassBreaks=function(){var a=g._asyncToGenerator(function*({query:b,params:c}){return this.queryEngine.executeQueryForClassBreaks(b,c)});return function(b){return a.apply(this,arguments)}}();d.queryHistogram=function(){var a=g._asyncToGenerator(function*({query:b,params:c}){return this.queryEngine.executeQueryForHistogram(b,
c)});return function(b){return a.apply(this,arguments)}}();d.queryExtent=function(a){return this.queryEngine.executeQueryForExtent(a)};d.queryFeatures=function(a){return this.queryEngine.executeQuery(a)};d.queryVisibleFeatures=function(){var a=g._asyncToGenerator(function*(b){b=yield this.queryEngine.executeQuery(b);const c=b.objectIdFieldName;b.features=b.features.filter(e=>{e=this.getDisplayId(e.attributes[c]);return this.attributeStore.isVisible(e)});return b});return function(b){return a.apply(this,
arguments)}}();d.queryFeatureCount=function(a){return this.queryEngine.executeQueryForCount(a)};d.queryLatestObservations=function(a){return this.queryEngine.executeQueryForLatestObservations(a)};d.queryObjectIds=function(a){return this.queryEngine.executeQueryForIds(a)};d.queryStatistics=function(){var a=g._asyncToGenerator(function*(){return this.featureStore.storeStatistics});return function(){return a.apply(this,arguments)}}();d.getObjectId=function(a){return this.featureStore.lookupObjectId(a,
this._storage)};d.getDisplayId=function(a){if(this._schema.targets.aggregate){const b=this.aggregateStore.getDisplayId(a);return m.isNone(b)?(a=this.featureStore.lookupDisplayId(a),this.aggregateStore.getDisplayIdForReferenceId(a)):b}return this.featureStore.lookupDisplayId(a)};d.getFeatures=function(a){const b=[],c=[];for(const e of a)E.isAggregateId(e)?(a=this.getAggregate(e),m.isSome(a)&&(m.isSome(a.referenceId)?(a=this.getFeature(a.referenceId),m.isSome(a)&&b.push(a)):c.push(a))):(a=this.getFeature(e),
m.isSome(a)&&b.push(a));return{features:b,aggregates:c}};d.getFeature=function(a){a=this.featureStore.lookupFeatureByDisplayId(a,this._storage);if(m.isNone(a))return null;var b=a.readHydratedGeometry();b=B.convertToGeometry(b,a.geometryType,a.hasZ,a.hasM);return{attributes:a.readAttributes(),geometry:b}};d.getAggregate=function(a){return this.aggregateStore.getAggregate(a)};d.getAggregates=function(){return this.aggregateStore.getAggregates()};d.setHighlight=function(){var a=g._asyncToGenerator(function*(b){const c=
b.map(e=>this.getDisplayId(e));return this.attributeStore.setHighlight(b,c)});return function(b){return a.apply(this,arguments)}}();d._lookupObjectIdByGlobalId=function(a){const b=this.service.globalIdField;if(m.isNone(b))throw Error("Expected globalIdField to be defined");let c=null;this.featureStore.forEach(e=>{a===e.readAttribute(b)&&(c=e.getObjectId())});if(m.isNone(c))throw Error(`Expected to find a feature with globalId ${a}`);return c};d._repushCurrentLevelTiles=function(){const a=this.tileStore.tiles.filter(b=>
b.level===this._level);for(const b of a)this._patchTile({type:"append",id:b.key.id,addOrUpdate:K.FeatureSetReaderJSON.fromOptimizedFeatures([],this.service.geometryType),remove:[],end:!0,status:y.UpdateToken.empty()})};d._maybeForceCleanup=function(){5E3<performance.now()-this._lastCleanup&&this._markAndSweep()};d._patchTile=function(a,b){a=this._updateQueue.push(a,b).then(()=>{this.notifyChange("updating")}).catch(c=>{this.notifyChange("updating")});this.notifyChange("updating");return a};d._onTileMessage=
function(){var a=g._asyncToGenerator(function*(b,c){k.throwIfAborted(c);const e=this.tileStore.get(b.id);if(e){if(b.clear)return this.processor.onTileClear(e);var f=b.status;this._cleanupNeeded=!0;var r=[];for(const t of b.remove){const u=this.featureStore.lookupDisplayId(t);u&&r.push(u)}b.remove=r;try{if(m.isNone(b.addOrUpdate))this.processor.onTileMessage(e,{...b,addOrUpdate:null},this.hasAggregates,c).catch(k.throwIfNotAbortError);else{b.addOrUpdate.setArcadeSpatialReference(this.spatialReference);
this.featureStore.hasInstance(b.addOrUpdate.instance)&&f.targets.feature||(f.targets.feature=!0,this.featureStore.onTileData(e,b));f.storage.data&&f.storage.filters||(f.storage.data=!0,f.storage.filters=!0,this.attributeStore.onTileData(e,b),"geoevent"===this._source.type||this._didEdit?(yield this.attributeStore.sendUpdates(),k.throwIfAborted(c)):this.attributeStore.sendUpdates());if(this.hasAggregates&&!f.targets.aggregate){f.targets.aggregate=!0;const t=z(this._source)&&this._source.loading,u=
!z(this._source)||t||b.end;this.aggregateStore.onTileData(e,b,this._storage,this.attributeStore,u);if(!u)return;f.mesh||(this.attributeStore.onTileData(e,b),yield this.attributeStore.sendUpdates(),this.processor.onTileClear(e))}f.mesh||(f.mesh=!0,yield this.processor.onTileMessage(e,b,this.hasAggregates,c),k.throwIfAborted(c));this._maybeForceCleanup()}}catch(t){k.throwIfNotAbortError(t)}}});return function(b,c){return a.apply(this,arguments)}}();d._mark=function(a,b,c){const e=this._storage.getInstanceId(a);
a&&(b.add((4294901760&e)>>>16),c.set(a))};d._markAndSweep=function(){this._lastCleanup=performance.now();if(!("feature"===this._source.type&&"snapshot"===this._source.mode||"geoevent"!==this._source.type&&!this._cleanupNeeded)){this._cleanupNeeded=!1;var a=this._storage.getBitset(this._markedIdsBufId),b=new Set;a.clear();for(const e of this.tileStore.tiles)for(const f of this._source.readers(e.id)){const r=f.getCursor();for(;r.next();){var c=r.getDisplayId();c||(c=r.getObjectId(),c=this.featureStore.lookupDisplayId(c));
this._mark(c,b,a)}}"symbol"===this.processor.type&&this.processor.forEachBufferId(e=>{this._mark(e,b,a)});this._updateQueue.forEach(e=>{for(const f of e.remove)e=this.featureStore.lookupDisplayId(f),this._mark(e,b,a)});this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(a,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level));this.featureStore.sweepFeatures(a,this._storage,this.attributeStore);this.featureStore.sweepFeatureSets(b)}};
g._createClass(w,[{key:"fieldsIndex",get:function(){return new D(this.service.fields)}},{key:"hasAggregates",get:function(){return!!this.config.schema.targets.aggregate}},{key:"spatialReference",get:function(){return this.tileStore.tileScheme.spatialReference}},{key:"updating",get:function(){return this.isUpdating()}}]);return w}(h.HandleOwner);l.__decorate([p.property({constructOnly:!0})],h.prototype,"tileStore",void 0);l.__decorate([p.property()],h.prototype,"config",void 0);l.__decorate([p.property({readOnly:!0})],
h.prototype,"fieldsIndex",null);l.__decorate([p.property()],h.prototype,"processor",void 0);l.__decorate([p.property({constructOnly:!0})],h.prototype,"remoteClient",void 0);l.__decorate([p.property({constructOnly:!0})],h.prototype,"service",void 0);l.__decorate([p.property()],h.prototype,"spatialReference",null);l.__decorate([p.property()],h.prototype,"updating",null);return h=l.__decorate([A.subclass("esri.views.2d.layers.features.controllers.FeatureController2D")],h)});
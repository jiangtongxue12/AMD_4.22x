// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../core/has ../core/Logger ../core/mathUtils ../core/maybe ./mat4 ./vec3 ./vec3f64 ./vec4 ./vec4f64 ../geometry/support/ray ../geometry/support/vector ../geometry/support/vectorStacks".split(" "),function(e,D,R,r,S,E,d,n,T,t,U,V,l){function u(){return t.create()}function v(a,b=u()){return T.copy(b,a)}function F(a,b){return t.fromValues(a[0],a[1],a[2],b)}function G(a){return a}function H(a){a[0]=a[1]=a[2]=a[3]=0}function I(a){return a}function p(a){return Array.isArray(a)?a[3]:a}function k(a){return Array.isArray(a)?
a:W}function J(a,b,c,g){return t.fromValues(a,b,c,g)}function K(a,b,c){a!==c&&d.copy(c,a);c[3]=a[3]+b;return c}function L(a,b,c){X.error("sphere.setExtent is not yet supported");return a===c?c:v(a,c)}function m(a,b,c){if(S.isNone(b))return!1;const {origin:g,direction:f}=b;var h=Y;h[0]=g[0]-a[0];h[1]=g[1]-a[1];h[2]=g[2]-a[2];b=f[0]*f[0]+f[1]*f[1]+f[2]*f[2];const q=2*(f[0]*h[0]+f[1]*h[1]+f[2]*h[2]);a=q*q-4*b*(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]-a[3]*a[3]);if(0>a)return!1;h=Math.sqrt(a);a=(-q-h)/(2*b);b=(-q+
h)/(2*b);if(0>a||b<a&&0<b)a=b;if(0>a)return!1;c&&(c[0]=g[0]+f[0]*a,c[1]=g[1]+f[1]*a,c[2]=g[2]+f[2]*a);return!0}function M(a,b){return m(a,b,null)}function N(a,b,c){if(m(a,b,c))return c;a=w(a,b,l.sv3d.get());d.add(c,b.origin,d.scale(l.sv3d.get(),b.direction,d.distance(b.origin,a)/d.length(b.direction)));return c}function w(a,b,c){const g=l.sv3d.get(),f=l.sm4d.get();d.cross(g,b.origin,b.direction);const h=p(a);d.cross(c,g,b.origin);d.scale(c,c,1/d.length(c)*h);a=x(a,b.origin);b=V.angle(b.origin,c);
E.identity(f);E.rotate(f,f,b+a,g);d.transformMat4(c,c,f);return c}function O(a,b,c){if(m(a,b,c))return c;U.closestPoint(b,k(a),c);return y(a,c,c)}function y(a,b,c){b=d.subtract(l.sv3d.get(),b,k(a));b=d.scale(l.sv3d.get(),b,a[3]/d.length(b));return d.add(c,b,k(a))}function P(a,b){b=d.subtract(l.sv3d.get(),b,k(a));b=d.squaredLength(b);return Math.sqrt(Math.abs(b-a[3]*a[3]))}function x(a,b){b=d.subtract(l.sv3d.get(),b,k(a));b=d.length(b);a=p(a);return r.acosClamped(a/(a+Math.abs(a-b)))}function z(a,
b,c,g){a=d.subtract(A,b,k(a));switch(c){case 0:return c=r.cartesianToSpherical(a,A)[2],d.set(g,-Math.sin(c),Math.cos(c),0);case 1:return a=r.cartesianToSpherical(a,A),c=a[1],a=a[2],b=Math.sin(c),d.set(g,-b*Math.cos(a),-b*Math.sin(a),Math.cos(c));case 2:return d.normalize(g,a)}}function B(a,b){b=d.subtract(C,b,k(a));return d.length(b)-a[3]}function Q(a,b,c,g){const f=B(a,b);a=z(a,b,2,C);c=d.scale(C,a,c-f);return d.add(g,b,c)}const X=R.getLogger("esri.geometry.support.sphere"),Y=n.create(),A=n.create(),
W=n.create(),C=n.create();D=Object.freeze({__proto__:null,create:u,copy:v,fromCenterAndRadius:F,wrap:G,clear:H,fromRadius:I,getRadius:p,getCenter:k,fromValues:J,elevate:K,setExtent:L,intersectRay:m,intersectsRay:M,intersectRayClosestSilhouette:N,closestPointOnSilhouette:w,closestPoint:O,projectPoint:y,distanceToSilhouette:P,angleToSilhouette:x,axisAt:z,altitudeAt:B,setAltitudeAt:Q});e.altitudeAt=B;e.angleToSilhouette=x;e.axisAt=z;e.clear=H;e.closestPoint=O;e.closestPointOnSilhouette=w;e.copy=v;e.create=
u;e.distanceToSilhouette=P;e.elevate=K;e.fromCenterAndRadius=F;e.fromRadius=I;e.fromValues=J;e.getCenter=k;e.getRadius=p;e.intersectRay=m;e.intersectRayClosestSilhouette=N;e.intersectsRay=M;e.projectPoint=y;e.setAltitudeAt=Q;e.setExtent=L;e.sphere=D;e.wrap=G});
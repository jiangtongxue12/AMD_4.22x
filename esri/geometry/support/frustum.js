// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../core/ObjectStack ../../chunks/mat4 ../../chunks/vec3 ../../chunks/vec3f64 ../../chunks/vec4 ../../chunks/vec4f64 ./clipRay ./plane ./vectorStacks".split(" "),function(e,v,m,w,f,x,g,l,d,n){function p(b){return b?[d.create(b[0]),d.create(b[1]),d.create(b[2]),d.create(b[3]),d.create(b[4]),d.create(b[5])]:[d.create(),d.create(),d.create(),d.create(),d.create(),d.create()]}function q(){return[f.create(),f.create(),f.create(),f.create(),f.create(),f.create(),f.create(),f.create()]}
function r(b,a){d.fromPoints(a[4],a[0],a[3],b[0]);d.fromPoints(a[1],a[5],a[6],b[1]);d.fromPoints(a[4],a[5],a[1],b[2]);d.fromPoints(a[3],a[2],a[6],b[3]);d.fromPoints(a[0],a[1],a[2],b[4]);d.fromPoints(a[5],a[4],a[7],b[5])}function t(b,a){for(let c=0;6>c;c++)if(!d.clip(b[c],a))return!1;return!0}const y=[g.fromValues(-1,-1,-1,1),g.fromValues(1,-1,-1,1),g.fromValues(1,1,-1,1),g.fromValues(-1,1,-1,1),g.fromValues(-1,-1,1,1),g.fromValues(1,-1,1,1),g.fromValues(1,1,1,1),g.fromValues(-1,1,1,1)],u=new v.ObjectStack(l.create),
z=q();e.computePlanes=r;e.copy=function(b,a=p()){for(let c=0;6>c;c++)d.copy(b[c],a[c])};e.create=p;e.createPoints=q;e.fromMatrix=function(b,a,c,h=z){b=m.multiply(n.sm4d.get(),a,b);m.invert(b,b);for(a=0;8>a;++a){const k=x.transformMat4(n.sv4d.get(),y[a],b);w.set(h[a],k[0]/k[3],k[1]/k[3],k[2]/k[3])}r(c,h)};e.intersectClipRay=function(b,a){for(let c=0;6>c;c++)if(!d.clipInfinite(b[c],a))return!1;return!0};e.intersectsAABB=function(b,a){for(let c=0;6>c;c++)if(d.isAABBFullyInside(b[c],a))return!1;return!0};
e.intersectsLineSegment=function(b,a,c){return t(b,l.fromLineSegmentAndDirection(a,c,u.get()))};e.intersectsPoint=function(b,a){for(let c=0;6>c;c++)if(0<d.signedDistance(b[c],a))return!1;return!0};e.intersectsRay=function(b,a){return t(b,l.fromRay(a,u.get()))};e.intersectsSphere=function(b,a){for(let c=0;6>c;c++){const h=b[c];if(h[0]*a[0]+h[1]*a[1]+h[2]*a[2]+h[3]>=a[3])return!1}return!0};e.planePointIndices={bottom:[5,1,0,4],near:[0,1,2,3],far:[5,4,7,6],right:[1,5,6,2],left:[4,0,3,7],top:[7,3,2,6]};
Object.defineProperty(e,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../core/Error ../../core/maybe ../../layers/support/fieldUtils ./support/utils ../support/utils ../support/adapters/support/layerUtils".split(" "),function(n,d,t,p,q,r,e){function u(a){return g.apply(this,arguments)}function g(){g=n._asyncToGenerator(function*(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))throw new d("summary-statistics:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");
if(a.valueExpression&&!a.sqlExpression&&!a.view)throw new d("summary-statistics:missing-parameters","View is required when 'valueExpression' is specified");const {layer:h,...k}=a;var b=e.createLayerAdapter(h,e.defaultSupportedLayerTypes);a={layerAdapter:b,...k};a.normalizationType=r.getNormalizationType(a);if(!b)throw new d("summary-statistics:invalid-parameters","'layer' must be one of these types: "+e.getLayerTypeLabels(e.defaultSupportedLayerTypes).join(", "));var f=t.isSome(a.signal)?{signal:a.signal}:
null;yield b.load(f);var c=a.field;f=a.normalizationType;const v=a.valueExpression||a.sqlExpression;c=c?b.getField(c):null;var l=yield r.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression});if(l=q.verifyBasicFieldValidity(b,l,"summary-statistics:invalid-parameters"))throw l;if(c){if(b=q.verifyFieldType(b,c,"summary-statistics:invalid-parameters",w))throw b;if(p.isDateField(c)&&f)throw new d("summary-statistics:invalid-parameters","Normalization is not allowed for date fields");
}else if(v&&f)throw new d("summary-statistics:invalid-parameters","Normalization is not allowed when 'valueExpression' or 'sqlExpression' is specified");return a});return g.apply(this,arguments)}function m(){m=n._asyncToGenerator(function*(a){const {layerAdapter:h,...k}=yield u(a);return h.summaryStatistics(k)});return m.apply(this,arguments)}const w=[...p.numericTypes,"date","string"];return function(a){return m.apply(this,arguments)}});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define(["exports","../../../geometry/support/jsonUtils","../CIMCursor"],function(C,A,B){let D=function(){function v(){}v.local=function(){null===v.instance&&(v.instance=new v);return v.instance};v.prototype.execute=function(r,g,f){return new E(r,g,f)};return v}();D.instance=null;let E=function(){function v(g,f,h){var n;this._default_point_size=20;this._inputGeometries=g;this._geomUnitsPerPoint=h;this._rule=null!=(n=f.rule)?n:"FullGeometry";this._default_size=this._default_point_size*h}var r=v.prototype;
r.next=function(){let g;for(;g=this._inputGeometries.next();){let f;A.isPoint(g)?f=this._processGeom([[[g.x,g.y]]]):A.isMultipoint(g)?f=this._processGeom([g.points]):A.isPolyline(g)?f=this._processGeom(g.paths):A.isPolygon(g)&&(f=this._processGeom(g.rings));if(f&&f.length)return{paths:f}}return null};r._clone=function(g){return[g[0],g[1]]};r._mid=function(g,f){return[(g[0]+f[0])/2,(g[1]+f[1])/2]};r._mix=function(g,f,h,n){return[g[0]*f+h[0]*n,g[1]*f+h[1]*n]};r._add=function(g,f){return[g[0]+f[0],g[1]+
f[1]]};r._add2=function(g,f,h){return[g[0]+f,g[1]+h]};r._sub=function(g,f){return[g[0]-f[0],g[1]-f[1]]};r._dist=function(g,f){return Math.sqrt((g[0]-f[0])*(g[0]-f[0])+(g[1]-f[1])*(g[1]-f[1]))};r._norm=function(g){return Math.sqrt(g[0]*g[0]+g[1]*g[1])};r._normalize=function(g,f=1){f/=this._norm(g);g[0]*=f;g[1]*=f};r._leftPerpendicular=function(g){const f=-g[0];g[0]=g[1];g[1]=f};r._leftPerp=function(g){return[g[1],-g[0]]};r._rightPerpendicular=function(g){const f=g[0];g[0]=-g[1];g[1]=f};r._rightPerp=
function(g){return[-g[1],g[0]]};r._dotProduct=function(g,f){return g[0]*f[0]+g[1]*f[1]};r._crossProduct=function(g,f){return-(g[0]*f[1]-g[1]*f[0])};r._rotateDirect=function(g,f,h){h=-h;const n=g[0]*h+g[1]*f;g[0]=g[0]*f-g[1]*h;g[1]=n};r._makeCtrlPt=function(g){g=[g[0],g[1]];B.setId(g,1);return g};r._addAngledTicks=function(g,f,h,n){const e=this._sub(h,f);this._normalize(e);var a=this._crossProduct(e,this._sub(n,f));n=0<a?this._rightPerp(e):this._leftPerp(e);a=Math.abs(a)/2;const d=[];d.push([f[0]+
(n[0]-e[0])*a,f[1]+(n[1]-e[1])*a]);d.push(f);d.push(h);d.push([h[0]+(n[0]+e[0])*a,h[1]+(n[1]+e[1])*a]);g.push(d)};r._addBezier2=function(g,f,h,n,e){if(0===e--)g.push(n);else{var a=this._mid(f,h);h=this._mid(h,n);var d=this._mid(a,h);this._addBezier2(g,f,a,d,e);this._addBezier2(g,d,h,n,e)}};r._addBezier3=function(g,f,h,n,e,a){if(0===a--)g.push(e);else{var d=this._mid(f,h),b=this._mid(h,n);n=this._mid(n,e);h=this._mid(d,b);b=this._mid(b,n);var c=this._mid(h,b);this._addBezier3(g,f,d,h,c,a);this._addBezier3(g,
c,b,n,e,a)}};r._add90DegArc=function(g,f,h,n,e){n=null!=e?e:0<this._crossProduct(this._sub(h,f),this._sub(n,f));e=this._mid(f,h);const a=this._sub(e,f);n?this._leftPerpendicular(a):this._rightPerpendicular(a);e[0]+=a[0];e[1]+=a[1];this._addBezier3(g,f,this._mix(f,.33333,e,.66667),this._mix(h,.33333,e,.66667),h,4)};r._addArrow=function(g,f,h){var n=f[0],e=f[1],a=f[f.length-1],d=this._sub(n,e);this._normalize(d);const b=this._crossProduct(d,this._sub(a,e));e=.5*b;var c=this._leftPerp(d);const k=[a[0]-
c[0]*b,a[1]-c[1]*b];var l=f.length-1;a=[];a.push(h?[-c[0],-c[1]]:c);var m=[-d[0],-d[1]];for(h=1;h<l-1;h++){d=this._sub(f[h+1],f[h]);this._normalize(d);var p=this._dotProduct(d,m);c=this._crossProduct(d,m);p=Math.sqrt((1+p)/2);m=this._sub(d,m);this._normalize(m);m[0]/=p;m[1]/=p;a.push(0>c?[-m[0],-m[1]]:m);m=d}a.push(this._rightPerp(m));for(l=a.length-1;0<l;l--)g.push([f[l][0]+a[l][0]*e,f[l][1]+a[l][1]*e]);g.push([k[0]+a[0][0]*e,k[1]+a[0][1]*e]);g.push([k[0]+a[0][0]*b,k[1]+a[0][1]*b]);g.push(n);g.push([k[0]-
a[0][0]*b,k[1]-a[0][1]*b]);g.push([k[0]-a[0][0]*e,k[1]-a[0][1]*e]);for(n=1;n<a.length;n++)g.push([f[n][0]-a[n][0]*e,f[n][1]-a[n][1]*e])};r._cp2=function(g,f,h){return 2<=g.length?g[1]:this._add2(g[0],f*this._default_size,-h*this._default_size)};r._cp3=function(g,f,h,n){if(3<=g.length)return g[2];h=this._mix(g[0],1-h,f,h);g=this._sub(f,g[0]);this._normalize(g);this._rightPerpendicular(g);return[h[0]+g[0]*n*this._default_size,h[1]+g[1]*n*this._default_size]};r._arrowPath=function(g){if(2<g.length)return g;
const f=g[0];g=this._cp2(g,-4,0);const h=this._sub(f,g);this._normalize(h);const n=this._rightPerp(h);return[f,g,[f[0]+(n[0]-h[0])*this._default_size,f[1]+(n[1]-h[1])*this._default_size]]};r._arrowLastSeg=function(g){var f=g[0];const h=this._cp2(g,-4,0);if(3<=g.length)f=g[g.length-1];else{g=this._sub(f,h);this._normalize(g);const n=this._rightPerp(g);f=[f[0]+(n[0]-g[0])*this._default_size,f[1]+(n[1]-g[1])*this._default_size]}return[h,f]};r._processGeom=function(g){if(!g)return null;const f=[];for(const h of g){if(!h||
0===h.length)continue;const n=h.length;let e=h[0];switch(this._rule){case "PerpendicularFromFirstSegment":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,4),b=[];b.push(d);b.push(this._mid(e,a));f.push(b);break}case "ReversedFirstSegment":{const a=this._cp2(h,0,-1);f.push([a,e]);break}case "PerpendicularToSecondSegment":{const a=this._cp2(h,-4,1),d=this._cp3(h,a,.882353,-1.94),b=[];b.push(this._mid(a,d));b.push(e);f.push(b);break}case "SecondSegmentWithTicks":{const a=this._cp2(h,-4,1),d=this._cp3(h,
a,.882353,-1.94),b=this._sub(d,a);let c;c=0<this._crossProduct(b,this._sub(e,a))?this._rightPerp(c):this._leftPerp(b);const k=[];k.push([a[0]+(c[0]-b[0])/3,a[1]+(c[1]-b[1])/3]);k.push(a);k.push(d);k.push([d[0]+(c[0]+b[0])/3,d[1]+(c[1]+b[1])/3]);f.push(k);break}case "DoublePerpendicular":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,3),b=this._mid(e,a),c=this._sub(b,d);this._normalize(c);const k=this._crossProduct(c,this._sub(e,d));this._leftPerpendicular(c);const l=[];l.push(e);l.push([d[0]+c[0]*
k,d[1]+c[1]*k]);f.push(l);const m=[];m.push([d[0]-c[0]*k,d[1]-c[1]*k]);m.push(a);f.push(m);break}case "OppositeToFirstSegment":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,3),b=this._mid(e,a),c=this._sub(b,d);this._normalize(c);const k=this._crossProduct(c,this._sub(e,d));this._leftPerpendicular(c);const l=[];l.push([d[0]+c[0]*k,d[1]+c[1]*k]);l.push([d[0]-c[0]*k,d[1]-c[1]*k]);f.push(l);break}case "TriplePerpendicular":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,4),b=this._mid(e,a),c=this._sub(b,
d);this._normalize(c);const k=this._crossProduct(c,this._sub(e,d));this._leftPerpendicular(c);const l=[];l.push([d[0]+c[0]*k*.8,d[1]+c[1]*k*.8]);l.push([b[0]+.8*(e[0]-b[0]),b[1]+.8*(e[1]-b[1])]);f.push(l);f.push([d,b]);const m=[];m.push([d[0]-c[0]*k*.8,d[1]-c[1]*k*.8]);m.push([b[0]+.8*(a[0]-b[0]),b[1]+.8*(a[1]-b[1])]);f.push(m);break}case "HalfCircleFirstSegment":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,4),b=this._mid(e,a);let c=this._sub(a,e);const k=Math.cos(Math.PI/18),l=Math.sin(Math.PI/
18),m=Math.sqrt((1+k)/2),p=Math.sqrt((1-k)/2),q=[];let t;0<this._crossProduct(c,this._sub(d,e))?(q.push(e),c=this._sub(e,b),t=a):(q.push(a),c=this._sub(a,b),t=e);this._rotateDirect(c,m,p);c[0]/=m;c[1]/=m;for(let u=1;18>=u;u++)q.push(this._add(b,c)),this._rotateDirect(c,k,l);q.push(t);f.push(q);break}case "HalfCircleSecondSegment":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,1,-1);let b=this._sub(e,a);this._normalize(b);const c=this._crossProduct(b,this._sub(d,a))/2;this._leftPerpendicular(b);const k=
[a[0]+b[0]*c,a[1]+b[1]*c];b=this._sub(a,k);const l=Math.cos(Math.PI/18);let m=Math.sin(Math.PI/18);0<c&&(m=-m);const p=[a];for(let q=1;18>=q;q++)this._rotateDirect(b,l,m),p.push(this._add(k,b));f.push(p);break}case "HalfCircleExtended":{const a=this._cp2(h,0,-2),d=this._cp3(h,a,1,-1);let b;if(4<=n)b=h[3];else{const p=this._sub(e,a);b=this._add(d,p)}const c=this._dist(a,d)/2/.75,k=this._sub(a,e);this._normalize(k,c);const l=this._sub(d,b);this._normalize(l,c);f.push([b,d]);const m=[this._clone(d)];
this._addBezier3(m,d,this._add(d,l),this._add(a,k),a,4);m.push(e);f.push(m);break}case "OpenCircle":{const a=this._cp2(h,-2,0),d=this._sub(a,e),b=Math.cos(Math.PI/18),c=-Math.sin(Math.PI/18),k=[a];for(let l=1;33>=l;l++)this._rotateDirect(d,b,c),k.push(this._add(e,d));f.push(k);break}case "CoverageEdgesWithTicks":{const a=this._cp2(h,0,-1);let d;if(3<=n)d=h[2];else{const m=this._sub(a,e),p=this._leftPerp(m);d=[e[0]+p[0]-.25*m[0],e[1]+p[1]-.25*m[1]]}let b;if(4<=n)b=h[3];else{const m=this._mid(e,a),
p=this._sub(e,a);this._normalize(p);this._leftPerpendicular(p);const q=this._crossProduct(p,this._sub(d,m));this._rightPerpendicular(p);b=[d[0]+p[0]*q*2,d[1]+p[1]*q*2]}const c=this._sub(a,e);let k,l;k=0<this._crossProduct(c,this._sub(d,e))?this._rightPerp(c):this._leftPerp(c);l=[];l.push(d);l.push(e);l.push([e[0]+(k[0]-c[0])/3,e[1]+(k[1]-c[1])/3]);f.push(l);k=0<this._crossProduct(c,this._sub(b,a))?this._rightPerp(k):this._leftPerp(c);l=[];l.push([a[0]+(k[0]+c[0])/3,a[1]+(k[1]+c[1])/3]);l.push(a);
l.push(b);f.push(l);break}case "GapExtentWithDoubleTicks":{const a=this._cp2(h,0,2),d=this._cp3(h,a,0,1);let b;if(4<=n)b=h[3];else{const c=this._sub(a,e);b=this._add(d,c)}this._addAngledTicks(f,e,a,this._mid(d,b));this._addAngledTicks(f,d,b,this._mid(e,a));break}case "GapExtentMidline":{const a=this._cp2(h,2,0),d=this._cp3(h,a,0,1);let b;if(4<=n)b=h[3];else{const k=this._sub(a,e);b=this._add(d,k)}const c=[];c.push(this._mid(e,d));c.push(this._mid(a,b));f.push(c);break}case "Chevron":{const a=this._cp2(h,
-1,-1);let d;if(3<=n)d=h[2];else{const b=this._sub(a,e);this._leftPerpendicular(b);d=this._add(e,b)}f.push([a,this._makeCtrlPt(e),d]);break}case "PerpendicularWithArc":{const a=this._cp2(h,0,-2),d=this._cp3(h,a,.5,-1);let b=this._sub(a,e);const c=this._norm(b);b[0]/=c;b[1]/=c;const k=this._crossProduct(b,this._sub(d,e));let l=this._dotProduct(b,this._sub(d,e));l<.05*c?l=.05*c:l>.95*c&&(l=.95*c);const m=[e[0]+b[0]*l,e[1]+b[1]*l];this._leftPerpendicular(b);let p=[];p.push([m[0]-b[0]*k,m[1]-b[1]*k]);
p.push([m[0]+b[0]*k,m[1]+b[1]*k]);f.push(p);const q=[a[0]+b[0]*k,a[1]+b[1]*k];b=this._sub(a,q);const t=Math.cos(Math.PI/18);let u=Math.sin(Math.PI/18);0>k&&(u=-u);p=[e,a];for(let x=1;9>=x;x++)this._rotateDirect(b,t,u),p.push(this._add(q,b));f.push(p);break}case "ClosedHalfCircle":{const a=this._cp2(h,2,0),d=this._mid(e,a),b=this._sub(a,d),c=Math.cos(Math.PI/18),k=Math.sin(Math.PI/18),l=[e,a];for(let m=1;18>=m;m++)this._rotateDirect(b,c,k),l.push(this._add(d,b));f.push(l);break}case "TripleParallelExtended":{const a=
this._cp2(h,0,-2),d=this._cp3(h,a,1,-2),b=this._mid(e,a),c=this._sub(d,a);this._normalize(c);const k=Math.abs(this._crossProduct(c,this._sub(b,a)))/2,l=this._dist(a,d),m=[a,e];m.push([e[0]+c[0]*l*.5,e[1]+c[1]*l*.5]);f.push(m);const p=[];p.push([b[0]-c[0]*k,b[1]-c[1]*k]);p.push([b[0]+c[0]*l*.375,b[1]+c[1]*l*.375]);B.setId(p[p.length-1],1);p.push([b[0]+c[0]*l*.75,b[1]+c[1]*l*.75]);f.push(p);f.push([a,d]);break}case "ParallelWithTicks":{const a=this._cp2(h,3,0),d=this._cp3(h,a,.5,-1),b=this._sub(d,a);
this._normalize(b);const c=this._crossProduct(b,this._sub(d,e));this._leftPerpendicular(b);this._addAngledTicks(f,e,a,d);this._addAngledTicks(f,this._mix(e,1,b,c),this._mix(a,1,b,c),this._mid(e,a));break}case "Parallel":{const a=this._cp2(h,3,0),d=this._cp3(h,a,.5,-1),b=this._sub(a,e);this._normalize(b);const c=this._leftPerp(b),k=this._crossProduct(b,this._sub(d,e));let l=[e,a];f.push(l);l=[];l.push([e[0]+c[0]*k,e[1]+c[1]*k]);l.push([a[0]+c[0]*k,a[1]+c[1]*k]);f.push(l);break}case "PerpendicularToFirstSegment":{const a=
this._cp2(h,3,0),d=this._cp3(h,a,.5,-1),b=this._mid(e,a),c=this._sub(a,e);this._normalize(c);const k=this._crossProduct(c,this._sub(d,e));this._leftPerpendicular(c);const l=[];l.push([b[0]-c[0]*k*.25,b[1]-c[1]*k*.25]);l.push([b[0]+c[0]*k*1.25,b[1]+c[1]*k*1.25]);f.push(l);break}case "ParallelOffset":{const a=this._cp2(h,3,0),d=this._cp3(h,a,.5,-1),b=this._sub(a,e);this._normalize(b);const c=this._crossProduct(b,this._sub(d,e));this._leftPerpendicular(b);const k=[];k.push([e[0]-b[0]*c,e[1]-b[1]*c]);
k.push([a[0]-b[0]*c,a[1]-b[1]*c]);f.push(k);const l=[];l.push([e[0]+b[0]*c,e[1]+b[1]*c]);l.push([a[0]+b[0]*c,a[1]+b[1]*c]);f.push(l);break}case "OffsetOpposite":{const a=this._cp2(h,3,0),d=this._cp3(h,a,.5,-1),b=this._sub(a,e);this._normalize(b);const c=this._crossProduct(b,this._sub(d,e));this._leftPerpendicular(b);const k=[];k.push([e[0]-b[0]*c,e[1]-b[1]*c]);k.push([a[0]-b[0]*c,a[1]-b[1]*c]);f.push(k);break}case "OffsetSame":{const a=this._cp2(h,3,0),d=this._cp3(h,a,.5,-1),b=this._sub(a,e);this._normalize(b);
const c=this._crossProduct(b,this._sub(d,e));this._leftPerpendicular(b);const k=[];k.push([e[0]+b[0]*c,e[1]+b[1]*c]);k.push([a[0]+b[0]*c,a[1]+b[1]*c]);f.push(k);break}case "CircleWithArc":{let a=this._cp2(h,3,0);const d=this._cp3(h,a,.5,-1);let b,c;if(4<=n)b=h[3],c=0<this._crossProduct(this._sub(b,a),this._sub(d,a));else{b=a;c=0<this._crossProduct(this._sub(b,e),this._sub(d,e));const q=24*this._geomUnitsPerPoint,t=this._sub(b,e);this._normalize(t,q);const u=Math.sqrt(2)/2;this._rotateDirect(t,u,c?
u:-u);a=this._add(e,t)}const k=this._sub(a,e),l=Math.cos(Math.PI/18),m=Math.sin(Math.PI/18),p=[a];for(let q=1;36>=q;q++)this._rotateDirect(k,l,m),p.push(this._add(e,k));this._add90DegArc(p,a,b,d,c);B.setId(p[p.length-8],1);f.push(p);break}case "DoubleJog":{let a=this._cp2(h,-3,1),d;d=3<=n?h[2]:this._add(e,this._sub(e,a));let b;if(4<=n)b=h[3];else{const x=e;e=a;b=d;const y=this._dist(e,x),z=this._dist(b,x);let w=30*this._geomUnitsPerPoint;.5*y<w&&(w=.5*y);.5*z<w&&(w=.5*z);a=this._mix(e,w/y,x,(y-w)/
y);d=this._mix(b,w/z,x,(z-w)/z)}const c=this._mid(e,a),k=this._mid(b,d),l=this._dist(e,a),m=this._dist(d,b);let p=Math.min(l,m)/8;p=Math.min(p,24*this._geomUnitsPerPoint);const q=Math.cos(Math.PI/4);let t=this._sub(e,a);this._normalize(t,p);0<this._crossProduct(t,this._sub(b,a))?this._rotateDirect(t,q,-q):this._rotateDirect(t,q,q);let u=[];u.push(a);u.push(this._add(c,t));u.push(this._sub(c,t));u.push(e);f.push(u);t=this._sub(b,d);this._normalize(t,p);0>this._crossProduct(t,this._sub(e,d))?this._rotateDirect(t,
q,q):this._rotateDirect(t,q,-q);u=[];u.push(d);u.push(this._add(k,t));u.push(this._sub(k,t));u.push(b);f.push(u);break}case "PerpendicularOffset":{const a=this._cp2(h,-4,1),d=this._cp3(h,a,.882353,-1.94),b=this._sub(d,a);0<this._crossProduct(b,this._sub(e,a))?this._rightPerpendicular(b):this._leftPerpendicular(b);const c=[b[0]/8,b[1]/8],k=this._sub(this._mid(a,d),c);f.push([k,e]);break}case "LineExcludingLastSegment":{const a=this._arrowPath(h),d=[];let b=a.length-2;for(;b--;)d.push(a[b]);f.push(d);
break}case "MultivertexArrow":{const a=this._arrowPath(h),d=[];this._addArrow(d,a,!1);f.push(d);break}case "CrossedArrow":{const a=this._arrowPath(h),d=[];this._addArrow(d,a,!0);f.push(d);break}case "ChevronArrow":{const [a,d]=this._arrowLastSeg(h),b=10*this._geomUnitsPerPoint,c=this._sub(e,a);this._normalize(c);const k=this._crossProduct(c,this._sub(d,a)),l=this._leftPerp(c),m=[d[0]-l[0]*k*2,d[1]-l[1]*k*2],p=[];p.push([d[0]+c[0]*b,d[1]+c[1]*b]);p.push(e);p.push([m[0]+c[0]*b,m[1]+c[1]*b]);f.push(p);
break}case "ChevronArrowOffset":{const [a,d]=this._arrowLastSeg(h),b=this._sub(e,a);this._normalize(b);const c=this._crossProduct(b,this._sub(d,a));this._leftPerpendicular(b);const k=[d[0]-b[0]*c,d[1]-b[1]*c],l=[];l.push([k[0]+b[0]*c*.5,k[1]+b[1]*c*.5]);l.push(this._mid(k,e));l.push([k[0]-b[0]*c*.5,k[1]-b[1]*c*.5]);f.push(l);break}case "PartialFirstSegment":{const [a,d]=this._arrowLastSeg(h),b=this._sub(e,a);this._normalize(b);const c=this._crossProduct(b,this._sub(d,a));this._leftPerpendicular(b);
f.push([a,[d[0]-b[0]*c,d[1]-b[1]*c]]);break}case "Arch":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,1),b=this._sub(e,a),c=this._mix(d,1,b,.55),k=this._mix(d,1,b,-.55),l=[e];this._addBezier2(l,e,c,d,4);this._addBezier2(l,d,k,a,4);f.push(l);break}case "CurvedParallelTicks":{const a=this._cp2(h,-4,1),d=this._cp3(h,a,.882353,-1.94),b=this._sub(d,a);0<this._crossProduct(b,this._sub(e,a))?this._rightPerpendicular(b):this._leftPerpendicular(b);const c=[b[0]/8,b[1]/8],k=this._sub(this._mid(a,d),c),l=this._sub(this._mix(a,
.75,d,.25),c),m=this._sub(this._mix(a,.25,d,.75),c),p=[a];this._addBezier2(p,a,l,k,3);this._addBezier2(p,k,m,d,3);f.push(p);for(let q=0;8>q;q++){const t=p[2*q+1],u=[this._clone(t)];u.push(this._add(t,[b[0]/4,b[1]/4]));f.push(u)}break}case "Arc90Degrees":{const a=this._cp2(h,0,-1),d=this._cp3(h,a,.5,1),b=[a];this._add90DegArc(b,a,e,d);f.push(b);break}default:f.push(h)}}return f};return v}();C.EffectControlMeasureLine=D;Object.defineProperty(C,"__esModule",{value:!0})});
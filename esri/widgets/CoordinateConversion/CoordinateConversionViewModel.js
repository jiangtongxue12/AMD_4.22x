// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../assets ../../Graphic ../../intl ../../core/Collection ../../core/Error ../../core/Evented ../../core/Handles ../../core/Logger ../../core/watchUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../geometry/Point ../../geometry/projection ../../symbols/PictureMarkerSymbol ./support/Conversion ./support/coordinateConversionUtils ./support/formatUtils ../support/GoTo ../../intl/locale ../../intl/messages".split(" "),
function(f,g,B,C,e,q,m,D,E,F,u,k,O,P,Q,G,v,H,I,w,x,y,J,r,K){const L=new v([0,0,500]),M="mgrs utm usng dd dms ddm".split(" "),n=F.getLogger("esri.widgets.CoordinateConversion.CoordinateConversionViewModel");e=function(z){function p(a){a=z.call(this,a)||this;a._conversionPromise=null;a._handles=new E;a._locationGraphic=null;a._pointerCount=0;a.conversions=new q;a.formats=new q;a.formatterAvailable=!1;a.messages=null;a.filteredFormats=new q;a.locationSymbol=new I({url:B.getAssetUrl("esri/images/search/search-symbol-32.png"),
width:24,height:24});a.storageEnabled=!0;a.view=null;a._saveWidgetState=a._saveWidgetState.bind(f._assertThisInitialized(a));a._handleFormatChange=a._handleFormatChange.bind(f._assertThisInitialized(a));a._handleConversionChange=a._handleConversionChange.bind(f._assertThisInitialized(a));a._handleViewChange=a._handleViewChange.bind(f._assertThisInitialized(a));a._onClick=a._onClick.bind(f._assertThisInitialized(a));a._onPointerMove=a._onPointerMove.bind(f._assertThisInitialized(a));a._onPointerDown=
a._onPointerDown.bind(f._assertThisInitialized(a));a._onPointerUp=a._onPointerUp.bind(f._assertThisInitialized(a));return a}f._inheritsLoose(p,z);var d=p.prototype;d.initialize=function(){var a=this;const b=function(){var c=f._asyncToGenerator(function*(){return a.messages=yield K.fetchMessageBundle("esri/widgets/CoordinateConversion/t9n/CoordinateConversion")});return function(){return c.apply(this,arguments)}}();b().then(()=>{if(!this.destroyed&&(this.formats.addMany(y.generateDefaultFormats(this.messages)),
this.storageEnabled&&this._loadWidgetState(),this.formats.forEach(c=>{c.viewModel=this;this._handles.add(c.watch("currentPattern",this._saveWidgetState),c.name)}),this._handles.add(this.conversions.on("change",this._handleConversionChange),"conversions"),this._handles.add(this.formats.on("change",this._handleFormatChange),"formats"),this._handles.add(r.onLocaleChange(()=>{b().then(()=>{y.setDefaultPatterns(this.messages,this.formats)})})),H.load().then(()=>{this.formatterAvailable=!0}).catch(c=>{n.error(new m("coordinate-conversion:projection-load-failed",
"Failed to load the projection module.",{error:c}));this.formatterAvailable=!1;this._filterFormatsAndConversions()}).then(()=>this._handles.add(u.init(this,"view",this._handleViewChange),"view-change")),0===this.conversions.length)){const c=this.formats.find(h=>"xy"===h.name)||this.formats.getItemAt(0);this.conversions.add(new w({format:c}))}})};d.destroy=function(){this._handles.removeAll();this._cleanUpView(this.view);this.view=null};d.setLocation=function(a){this.view.graphics.remove(this._locationGraphic);
a&&(a=a.clone(),a.hasZ&&(a.z=void 0),this._locationGraphic=new C({geometry:a,symbol:this.get("locationSymbol")}),this.view.graphics.add(this._locationGraphic))};d.convert=function(a,b){return x.isValidPoint(b)?Promise.resolve().then(()=>a.convert(b)):Promise.reject(new m("coordinate-conversion:invalid-point","Invalid point cannot be converted.",{point:b}))};d.goToLocation=function(a){if(this.get("view.clippingArea")||0<this.get("view.map.basemap.baseLayers.length")){const b=this.get("view.clippingArea")||
this.view.map.basemap.baseLayers.getItemAt(0).fullExtent;return b?b.contains(a)?this.callGoTo({target:a}):Promise.reject(new m("coordinate-conversion:go-to-failed","Point outside basemap extent.",{point:a})):this.callGoTo({target:a})}return this.callGoTo({target:a})};d.pause=function(){this.currentLocation=null;this._handles.remove("view");this.view&&(this.view.cursor="default",this.view.graphics.remove(this._locationGraphic))};d.previewConversion=function(a,b=this.currentLocation||L){return this._convertMany([a],
b).then(()=>a.displayCoordinate)};d.resume=function(){"capture"===this.mode?this._startCaptureMode():this._startLiveMode()};d.reverseConvert=function(a,b){return b.reverseConvert(a)};d.updateConversions=function(){var a=f._asyncToGenerator(function*(b,c){return c&&c.type&&"point"===c.type?this._convertMany(b,c):(this._clearConversions(this.conversions),Promise.reject(new m("coordinate-conversion:invalid-input-point","Point is invalid, conversions cannot be updated.",{point:c})))});return function(b,
c){return a.apply(this,arguments)}}();d._cleanUpView=function(a){a&&(a.graphics.remove(this._locationGraphic),this._handles.remove("view"),a.cursor="default")};d._clearConversions=function(a){a.forEach(b=>{b.position={location:null,coordinate:null}})};d._convertMany=function(a,b){return Promise.all(a.map(c=>c.format.convert(b).then(h=>{c.position=h;return c}).catch(()=>{c.position=null}))).then(()=>a)};d._handleConversionChange=function(a){a.added.forEach(b=>{const c=b.format;c.viewModel=this;this.currentLocation&&
(this._set("waitingForConversions",!0),this.convert(c,this.currentLocation).then(h=>{b.position=h;this._set("waitingForConversions",!1)}))});this._saveWidgetState()};d._handleFormatChange=function(a){a.added.forEach(b=>{this._handles.add(b.watch("currentPattern",this._saveWidgetState),b.name);b.viewModel=this});a.removed.forEach(b=>{b.viewModel=null;this._handles.remove(b.name)})};d._loadWidgetState=function(){try{const a=JSON.parse(sessionStorage.getItem("esri__coordinateConversionWidgetState"));
a&&this._setWidgetState(a)}catch(a){n.error(new m("coordinate-conversion:invalid-session-storage-json","Could not read from sessionStorge.",{error:a}))}};d._startCaptureMode=function(){this._handles.remove("view");this.view&&(this.view.cursor="crosshair",this.currentLocation&&this.setLocation(this.currentLocation),this._handles.add(this.view.on("click",this._onClick),"view"))};d._startLiveMode=function(){this._pointerCount=0;this._handles.remove("view");this.view&&(this.view.cursor="default",this.view.graphics.remove(this._locationGraphic),
this._handles.add([this.view.on("pointer-down",this._onPointerDown),this.view.on("pointer-up",this._onPointerUp),this.view.on("pointer-move",this._onPointerMove)],"view"))};d._handleViewChange=function(a,b){b&&b!==a&&this._cleanUpView(b);a&&("capture"===this.mode&&this._startCaptureMode(),this._startLiveMode(),b&&this._filterFormatsAndConversions())};d._onClick=function(a){0===a.button&&(a=(a=this.view.toMap(a))&&a.normalize(),this.setLocation(a),this.currentLocation=a)};d._onPointerDown=function(a){const {pointerType:b}=
a;this._pointerCount++;"touch"!==b&&"pen"!==b||1!==this._pointerCount||(this.currentLocation=(a=this.view.toMap(a))&&a.normalize())};d._onPointerMove=function(a){const {pointerType:b}=a;if("mouse"===b||1===this._pointerCount)this.currentLocation=(a=this.view.toMap(a))&&a.normalize()};d._onPointerUp=function(){this._pointerCount--};d._setWidgetState=function(a){try{a.formats.forEach(b=>{const c=this.formats.find(h=>h.name===b.name);c&&a.locale===r.getLocale()&&b.currentPattern&&(c.currentPattern=b.currentPattern);
c&&0<=b.index&&this.conversions.add(new w({format:c}))})}catch(b){n.warn(new m("coordinate-conversion:session-storage-read-error","Could not get widget state from stored JSON.",{error:b}))}};d._saveWidgetState=function(){if(this.storageEnabled){var a=this._toJSON();try{sessionStorage.setItem("esri__coordinateConversionWidgetState",JSON.stringify({formats:a,locale:r.getLocale()}))}catch(b){n.error(new m("coordinate-conversion:local-storage-write-error","Could not write to localStorage.",{error:b}))}}};
d._updateConversions=function(){var a=f._asyncToGenerator(function*(){try{yield this.updateConversions(this.conversions.toArray(),this.currentLocation)}catch{}});return function(){return a.apply(this,arguments)}}();d._toJSON=function(){return this.formats.filter(a=>{a=a.name;return"xy"===a||"basemap"===a||x.isSupportedNotation(a)}).map(a=>({name:a.name,currentPattern:a.currentPattern,defaultPattern:a.defaultPattern,index:this.conversions.findIndex(b=>b.format===a)})).sort((a,b)=>a.index-b.index).toArray()};
d._filterFormatsAndConversions=function(){const {formatterAvailable:a,conversions:b,formats:c}=this;a||this._handles.add(u.whenOnce(this,"view.spatialReference",h=>{const A=h.isWebMercator||h.isWGS84,t=c.filter(l=>{({name:l}=l);return 0<=M.indexOf(l)?!0:"xy"===l?!A:!1});h=this.filteredFormats.filter(l=>"xy"===l.name&&A&&-1===this.formats.indexOf(l));const N=b.filter(l=>0<=t.indexOf(l.format));c.removeMany(t);b.removeMany(N);this.filteredFormats.addMany(t.filter(l=>-1===this.filteredFormats.indexOf(l)));
c.addMany(h)}),"view")};f._createClass(p,[{key:"currentLocation",get:function(){return this._get("currentLocation")||null},set:function(a){this._set("currentLocation",a);this._updateConversions()}},{key:"mode",get:function(){return this._get("mode")||"live"},set:function(a){switch(a){case "capture":this.currentLocation=null;this._startCaptureMode();this._set("mode",a);break;case "live":this._startLiveMode(),this._set("mode",a)}}},{key:"state",get:function(){const {messages:a,view:b}=this,c=null==
b?void 0:b.ready;return a?c?"ready":b?"loading":"disabled":"disabled"}},{key:"waitingForConversions",get:function(){return null!=this._conversionPromise}}]);return p}(J.GoToMixin(D.EventedAccessor));g.__decorate([k.property()],e.prototype,"conversions",void 0);g.__decorate([k.property({type:v})],e.prototype,"currentLocation",null);g.__decorate([k.property()],e.prototype,"formats",void 0);g.__decorate([k.property()],e.prototype,"messages",void 0);g.__decorate([k.property()],e.prototype,"mode",null);
g.__decorate([k.property()],e.prototype,"filteredFormats",void 0);g.__decorate([k.property({readOnly:!0})],e.prototype,"state",null);g.__decorate([k.property()],e.prototype,"locationSymbol",void 0);g.__decorate([k.property()],e.prototype,"storageEnabled",void 0);g.__decorate([k.property({readOnly:!0})],e.prototype,"waitingForConversions",null);g.__decorate([k.property()],e.prototype,"view",void 0);return e=g.__decorate([G.subclass("esri.widgets.CoordinateConversion.CoordinateConversionViewModel")],
e)});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../core/Accessor ../../core/Handles ../../core/handleUtils ../../core/maybe ../../core/memoize ../../core/promiseUtils ../../core/reactiveUtils ../../core/throttle ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../support/elevationInfoUtils ./support/constants ./support/geometryUtils ./support/profileUtils".split(" "),
function(g,p,m,G,H,I,h,t,u,v,J,q,O,P,Q,K,B,w,C,L){g.ElevationProfileController=function(D){function x(a){var b=D.call(this,a)||this;b._handles=new H;b._updateTask=null;b._paramsPerProfile=new Map;b._getUpdateParametersMemoized=t.memoize((c,d,e)=>({stationary:c,visibleProfiles:d,generationParameters:e}));b._getGenerationParametersMemoized=t.memoize((c,d,e,y,r,l)=>C.isPolyline(d)&&C.isValidInputPath(d)&&!h.isNone(y)?{view:c,geometry:d,elevationInfo:e,options:l,queue:y,cache:r}:null);b._getElevationInfoMemoized=
t.memoize((c,d)=>({mode:c,offset:d}));b._getOptionsMemoized=t.memoize((c,d,e)=>({geodesicDistanceThreshold:c,samplingDistance:d,densificationMaxSamples:Math.round(w.DENSIFICATION_MAX_SAMPLES/e),maxTotalSamples:w.MAX_TOTAL_SAMPLES}));b._updateThrottled=J.throttle(c=>u.ignoreAbortErrors(b._update(c)),w.UPDATE_THROTTLE_MILLIS);return b}p._inheritsLoose(x,D);var k=x.prototype;k.initialize=function(){const a=this.viewModel;this._handles.add([v.react(()=>a.profiles.toArray(),b=>{this._abortUpdate();this._paramsPerProfile.clear();
this._handles.remove("line-change");this._handles.add(b.map(c=>I.handlesGroup([c.attach(this.viewModel),c.on("change",()=>{this._invalidateProfile(c)})])),"line-change")},v.syncAndInitial),this._updateThrottled,v.react(()=>this._updateParameters,this._updateThrottled,v.syncAndInitial)])};k.destroy=function(){this._handles.destroy();this._paramsPerProfile.clear()};k._update=function(){var a=p._asyncToGenerator(function*({stationary:b,visibleProfiles:c,generationParameters:d}){var e=this;this._abortUpdate();
b&&(h.isNone(d)?this._clearResults():this._updateTask=u.createTask(function(){var y=p._asyncToGenerator(function*(r){e.viewModel.error=null;const l=c.filter(f=>!e._isProfileValid(f,d));var n=L.generateProfiles({...d,providers:l},{signal:r});try{var z=!1,E=!1;try{for(var A=p._asyncIterator(n),F;z=!(F=yield A.next()).done;z=!1){const f=F.value;u.throwIfAborted(r);e._clearInvalidResults(d);for(n=0;n<l.length;n++)l[n].result=f[n]}}catch(f){E=!0;var M=f}finally{try{z&&null!=A.return&&(yield A.return())}finally{if(E)throw M;
}}for(const f of l)e._paramsPerProfile.set(f,d)}catch(f){u.throwIfAbortError(f),e._abortUpdate(),e.viewModel.error=f,l.forEach(N=>{N.result=null})}});return function(r){return y.apply(this,arguments)}}()))});return function(b){return a.apply(this,arguments)}}();k._abortUpdate=function(){this._updateTask=h.abortMaybe(this._updateTask)};k._isProfileValid=function(a,b){return this._paramsPerProfile.has(a)&&this._paramsPerProfile.get(a)===b};k._invalidateProfile=function(a){this._paramsPerProfile.delete(a);
this._updateThrottled(this._updateParameters)};k._clearInvalidResults=function(a){for(const b of this.viewModel.profiles.items)this._isProfileValid(b,a)||(b.result=null,this._paramsPerProfile.delete(b))};k._clearResults=function(){for(const a of this.viewModel.profiles.items)a.result=null,this._paramsPerProfile.delete(a)};p._createClass(x,[{key:"_updateParameters",get:function(){var {viewModel:a}=this;a=a.view;return this._getUpdateParametersMemoized(h.isSome(a)?a.stationary:!0,this.viewModel.visibleProfiles,
this._generationParameters)}},{key:"_generationParameters",get:function(){const {view:a,input:b,queue:c,tileCache:d}=this.viewModel;return h.isNone(a)||!a.ready?null:this._getGenerationParametersMemoized(a,h.applySome(b,e=>e.geometry),this._elevationInfo,c,d,this._options)}},{key:"_elevationInfo",get:function(){const a=h.applySome(this.viewModel.input,b=>B.hasGraphicFeatureExpressionInfo(b)?null:B.getGraphicEffectiveElevationInfo(b));return h.isSome(a)?this._getElevationInfoMemoized(a.mode,a.offset):
null}},{key:"_options",get:function(){const a=this.viewModel,b=a.visibleProfiles.length;let c=h.unwrapOr(a.minDemResolution,w.DEFAULT_DEM_RESOLUTION);c=parseFloat(c.toFixed(2));return this._getOptionsMemoized(a.geodesicDistanceThreshold,c,b)}}]);return x}(G);m.__decorate([q.property({nonNullable:!0})],g.ElevationProfileController.prototype,"viewModel",void 0);m.__decorate([q.property()],g.ElevationProfileController.prototype,"_updateParameters",null);m.__decorate([q.property()],g.ElevationProfileController.prototype,
"_generationParameters",null);m.__decorate([q.property()],g.ElevationProfileController.prototype,"_elevationInfo",null);m.__decorate([q.property()],g.ElevationProfileController.prototype,"_options",null);g.ElevationProfileController=m.__decorate([K.subclass("esri.widgets.ElevationProfile.ElevationProfileController")],g.ElevationProfileController);Object.defineProperty(g,"__esModule",{value:!0})});
// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.22/esri/copyright.txt for details.
//>>built
define("../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../Color ../../core/handleUtils ../../core/maybe ../../core/memoize ../../core/SetUtils ../../core/unitUtils ../../core/watchUtils ../../core/accessorSupport/decorators/property ../../core/arrayUtils ../../core/has ../../core/accessorSupport/ensureType ../../core/accessorSupport/decorators/subclass ../../chunks/vec3 ../../chunks/vec4f64 ../../geometry/projectionEllipsoid ../../geometry/support/ray ../../layers/support/ElevationQuery ../../views/3d/webgl-engine/lib/Intersector ../../views/3d/webgl-engine/lib/intersectorUtilsConversions ./ElevationProfileLine".split(" "),
function(v,f,C,I,g,J,K,L,w,h,c,X,Y,M,N,D,O,E,P,Q,R,S){function T({view:k,inputGraphicUid:l,maxIntersectionDistance:r},a){for(const b of a)if(!(b.distanceInRenderSpace>r)&&(a=R.toGraphic(b,k),g.isNone(a)||F(a)!==l))return b;return null}function F(k){if(k.layer&&"objectIdField"in k.layer){const l=k.attributes[k.layer.objectIdField];if(l)return`o-${k.layer.id}-${l}`}return`u-${k.uid}`}c=function(k){function l(a){a=k.call(this,a)||this;a.type="view";a.color=new C("#cf4ccf");a.viewVisualizationEnabled=
!0;a.include=null;a.exclude=null;a.numSamplesForPreview=50;a.numSamplesPerChunk=25;a._getQueryElevationDependencies=J.memoize((b,e,d,m,n,x,t)=>({inputGraphicUid:g.isSome(b)?F(b):null,visibleLayers:e,maxIntersectionDistance:d,intersectOptions:m,view:n,stationary:x,spatialReference:t}));a._vecA=D.create();a._vecB=D.create();a._ray=E.create();return a}v._inheritsLoose(l,k);var r=l.prototype;r.queryElevation=function(){var a=v._asyncToGenerator(function*(b,{noDataValue:e,signal:d}){const m=this.queryElevationDependencies;
if(g.isNone(m))throw Error("ElevationProfileLineInput: no dependencies");const n=this._intersector;if(g.isNone(n))throw Error("ElevationProfileLineInput: no view");const {intersectOptions:x,view:t,spatialReference:y}=m,z=t.renderCoordsHelper,U=t.sceneIntersectionHelper,G=this._vecA,u=this._vecA,p=this._vecB,V=this._ray;b=yield P.GeometryDescriptor.fromGeometry(b).project(y,d);d=b.coordinates;const W=d.length;for(let A=0;A<W;++A){var H;const q=d[A];N.set(p,q.x,q.y,null!=(H=q.z)?H:0);z.toRenderCoords(p,
y,p);z.setAltitude(G,2E5,p);var B=E.fromPoints(G,p,V);U.computeIntersection(B,n,x);(B=T(m,n.results.all))?(B.getIntersectionPoint(u),z.fromRenderCoords(u,u,y),q.z=u[2]):q.z=e}return{geometry:b.export(),noDataValue:e}});return function(b,e){return a.apply(this,arguments)}}();r.attach=function(a){const b=()=>this._onChange();return I.handlesGroup([k.prototype.attach.call(this,a),this.watch("queryElevationDependencies",b),w.on(this,"include","change",b,b,b),w.on(this,"exclude","change",b,b,b),w.on(a,
"view.elevationProvider","elevation-change",b)])};v._createClass(l,[{key:"minDemResolution",get:function(){var a,b,e;const d=null==(a=this._viewModel)?void 0:a.view;return g.isNone(d)||"3d"!==d.type?null:(a=null==(b=d.pointsOfInterest)?void 0:null==(e=b.focus)?void 0:e.renderLocation)?d.state.camera.computeRenderPixelSizeAt(a)*L.getMetersPerVerticalUnitForSR(d.spatialReference):null}},{key:"queryElevationDependencies",get:function(){return g.applySome(this._view,a=>this._getQueryElevationDependencies(this._viewModel.input,
this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,a,a.stationary,a.spatialReference))}},{key:"_visibleLayers",get:function(){const a=g.applySome(this._view,b=>{var e,d;return null==(e=b.map)?void 0:null==(d=e.allLayers)?void 0:d.filter(m=>m.visible).toArray()});return g.unwrapOr(a,[])}},{key:"_intersectOptions",get:function(){var a=this._view;if(g.isNone(a))return{};const b=a.externalToInternalIntersectOptions({include:this.include,exclude:this.exclude});a=a.externalToInternalIntersectOptions({exclude:this._pointCloudLayers});
b.exclude=K.union(b.exclude,a.exclude);return b}},{key:"_pointCloudLayers",get:function(){const a=this._view;return g.isNone(a)?[]:a.allLayerViews.toArray().filter(b=>{var e;return"point-cloud"===(null==(e=b.layer)?void 0:e.type)}).map(b=>b.layer)}},{key:"_view",get:function(){const a=this._viewModel.view;return g.isSome(a)&&"3d"===a.type?a:null}},{key:"_maxIntersectionDistance",get:function(){const a=this._view;return g.isNone(a)||!a.renderCoordsHelper?Number.POSITIVE_INFINITY:O.getReferenceEllipsoid(a.spatialReference).radius/
a.renderCoordsHelper.unitInMeters}},{key:"_intersector",get:function(){var a=this._view;if(g.isNone(a))return null;a=Q.newIntersector(a.state.viewingMode);const b=a.options;b.hud=!1;b.invisibleTerrain=!1;b.backfacesTerrain=!1;b.selectionMode=!1;b.store=2;return a}}]);return l}(S);f.__decorate([h.property({type:C,nonNullable:!0})],c.prototype,"color",void 0);f.__decorate([h.property()],c.prototype,"viewVisualizationEnabled",void 0);f.__decorate([h.property()],c.prototype,"include",void 0);f.__decorate([h.property()],
c.prototype,"exclude",void 0);f.__decorate([h.property({readOnly:!0})],c.prototype,"minDemResolution",null);f.__decorate([h.property()],c.prototype,"queryElevationDependencies",null);f.__decorate([h.property()],c.prototype,"_visibleLayers",null);f.__decorate([h.property()],c.prototype,"_intersectOptions",null);f.__decorate([h.property()],c.prototype,"_pointCloudLayers",null);f.__decorate([h.property()],c.prototype,"_view",null);f.__decorate([h.property()],c.prototype,"_maxIntersectionDistance",null);
f.__decorate([h.property()],c.prototype,"_intersector",null);return c=f.__decorate([M.subclass("esri.widgets.ElevationProfile.ElevationProfileLineView")],c)});